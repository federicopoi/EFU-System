{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/tarjetas/MisTarjetasFiltro.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { Card, CardBody, Row, Col, Table, Button, Container, Input, Label } from \"reactstrap\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nconst options = [{\n  value: \"NÂ°\",\n  label: \"numero\"\n}, {\n  value: \"Color\",\n  label: \"color\"\n}, {\n  value: \"Prioridad\",\n  label: \"prioridad\"\n}, {\n  value: \"Equipo Autonomo\",\n  label: \"equipo\"\n}, {\n  value: \"Fecha apertura\",\n  label: \"fecha\"\n}, {\n  value: \"Descripcion anomalia\",\n  label: \"descripcion\"\n}, {\n  value: \"Estado acutal\",\n  label: \"estado\"\n}];\n\nclass MisTarjetasFiltro extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null,\n      numero: \"\",\n      color: \"\",\n      equipo: \"\",\n      prioridad: \"\",\n      fecha: \"\",\n      descripcion: \"\",\n      estado: \"\"\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(`Option selected:`, selectedOption);\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTarjetas();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props.tarjetas;\n    const {\n      selectedOption\n    } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado\n    };\n    const filterTarjetas = tarjetas.filter(function (item) {\n      for (var key in filter) {\n        if (item[key] != filter[key]) return false;\n      }\n\n      return true;\n    });\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    console.log(multiFilter(tarjetas, filter));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Tabla dinamica de tarjetas\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Seleccionar elementos para la tabla\"), /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: \"Seleccionar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Filtrar elementos\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, selectedOption && selectedOption.map(({\n      label,\n      value\n    }) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }\n      }, value), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: label,\n        id: label,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, \"Seleccionar\"), tarjetas.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 31\n        }\n      }, item[label])))));\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"no-wrap v-middle\",\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, selectedOption && selectedOption.map(({\n      value\n    }) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 36\n        }\n      }, value);\n    }))), newFilter && newFilter.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }, selectedOption && selectedOption.map(({\n        value,\n        label\n      }, index) => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 44\n          }\n        }, item[label]);\n      })));\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas\n})(MisTarjetasFiltro);","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/tarjetas/MisTarjetasFiltro.jsx"],"names":["React","Component","connect","Link","getTarjetas","Card","CardBody","Row","Col","Table","Button","Container","Input","Label","moment","Select","options","value","label","MisTarjetasFiltro","state","selectedOption","numero","color","equipo","prioridad","fecha","descripcion","estado","handleChange","setState","console","log","onChange","e","target","name","componentDidMount","props","render","tarjetas","filter","filterTarjetas","item","key","multiFilter","arr","filters","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","map","index","mapStateToProps","user","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  Table,\n  Button,\n  Container,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nconst options = [\n  { value: \"NÂ°\", label: \"numero\" },\n  { value: \"Color\", label: \"color\" },\n  { value: \"Prioridad\", label: \"prioridad\" },\n  { value: \"Equipo Autonomo\", label: \"equipo\" },\n  { value: \"Fecha apertura\", label: \"fecha\" },\n  { value: \"Descripcion anomalia\", label: \"descripcion\" },\n  { value: \"Estado acutal\", label: \"estado\" },\n];\nclass MisTarjetasFiltro extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n  }\n  state = {\n    selectedOption: null,\n    numero: \"\",\n    color: \"\",\n    equipo: \"\",\n    prioridad: \"\",\n    fecha: \"\",\n    descripcion: \"\",\n    estado: \"\",\n  };\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  render() {\n    const { tarjetas } = this.props.tarjetas;\n    const { selectedOption } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n    };\n\n    const filterTarjetas = tarjetas.filter(function (item) {\n      for (var key in filter) {\n        if (item[key] != filter[key]) return false;\n      }\n      return true;\n    });\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n    console.log(multiFilter(tarjetas, filter));\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container>\n              <Row>\n                <Col>\n                  <div>\n                    <h2 className=\"mb-3\">Tabla dinamica de tarjetas</h2>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"mb-3\">\n                <h5>Seleccionar elementos para la tabla</h5>\n                <Select\n                  value={selectedOption}\n                  onChange={this.handleChange}\n                  options={options}\n                  isMulti\n                  placeholder=\"Seleccionar\"\n                />\n              </div>\n              <h5>Filtrar elementos</h5>\n              <Row className=\"mb-3\">\n                {selectedOption &&\n                  selectedOption.map(({ label, value }) => {\n                    return (\n                      <Col>\n                        <div>\n                          <Label for=\"color\">{value}</Label>\n                          <Input\n                            type=\"select\"\n                            name={label}\n                            id={label}\n                            onChange={this.onChange}\n                          >\n                            <option>Seleccionar</option>\n                            {tarjetas.map((item) => (\n                              <option>{item[label]}</option>\n                            ))}\n                          </Input>\n                        </div>\n                      </Col>\n                    );\n                  })}\n              </Row>\n              <Card>\n                <CardBody>\n                  <Table className=\"no-wrap v-middle\" responsive>\n                    <thead>\n                      <tr className=\"border-0\">\n                        {selectedOption &&\n                          selectedOption.map(({ value }) => {\n                            return <th className=\"border-0\">{value}</th>;\n                          })}\n                      </tr>\n                    </thead>\n\n                    {newFilter &&\n                      newFilter.map((item, index) => {\n                        return (\n                          <tbody key={index}>\n                            <tr>\n                              {selectedOption &&\n                                selectedOption.map(\n                                  ({ value, label }, index) => {\n                                    return <td key={index}>{item[label]}</td>;\n                                  }\n                                )}\n                            </tr>\n                          </tbody>\n                        );\n                      })}\n                  </Table>\n                </CardBody>\n              </Card>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n    user: state.auth.user,\n  };\n};\n\nexport default connect(mapStateToProps, { getTarjetas })(MisTarjetasFiltro);\n"]},"metadata":{},"sourceType":"module"}