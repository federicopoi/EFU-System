{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/indiceautonomia/GraficoAutonomia.jsx\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoAutonomia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      equipo: \"\"\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props;\n    var filter = {\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos)); // Formulas para \"Indice de autonomia\"\n    // Filtro todos los meses en el que hay tarjetas convertidas\n\n    const fechasTarjetasConvertidas = tarjetas // .filter(({ estado, convertida }) => convertida === true)\n    .map(({\n      fecha\n    }) => fecha.substr(0, 7)); // Borro todos los meses repetidos\n\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1]; // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array1 = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        color\n      }) => color === \"Azul\" && estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array1Acum = array1.map((elem, index) => array1.slice(0, index + 1).reduce((a, b) => a + b)); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array2 = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        convertida\n      }) => convertida === true && estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array2Acum = array2.map((elem, index) => array2.slice(0, index + 1).reduce((a, b) => a + b)); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array3 = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha\n      }) => estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array3Acum = array3.map((elem, index) => array3.slice(0, index + 1).reduce((a, b) => a + b)); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let arrayAcumFinal = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return (array1Acum[index] + array2Acum[index]) / array3Acum[index] * 100;\n    }); // Datos para el grafico\n\n    const ConvertidasData = [fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: arrayAcumFinal[index]\n      };\n    })];\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\",\n      // Observe ToolTip Number Format\n      digitGroupSeparator: \".\",\n      // Observe axisY labels\n      months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\n    });\n    const options = {\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n        interval: 1,\n        intervalType: \"month\"\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: \"#1BA7F7\",\n        type: \"column\",\n        name: \"Indice de autonomia\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: ConvertidasData[0]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"equipo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, \"Equipo\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"equipo\",\n      id: \"equipo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }), unicosEquipos.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 20\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      culture: \"en\",\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default GraficoAutonomia;","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/indiceautonomia/GraficoAutonomia.jsx"],"names":["React","Component","CanvasJSReact","CanvasJSChart","CanvasJS","GraficoAutonomia","constructor","state","equipo","toggleDataSeries","bind","e","dataSeries","visible","chart","render","tarjetas","props","filter","color","prioridad","multiFilter","arr","filters","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","arrEquipos","map","unicosEquipos","Array","from","Set","fechasTarjetasConvertidas","fecha","substr","fechasTarjetasConvertidas1","fechasTarjetasConvertidasUnicas","array1","sort","item","index","estado","replace","slice","array1Acum","elem","reduce","a","b","array2","convertida","array2Acum","array3","array3Acum","arrayAcumFinal","ConvertidasData","x","Date","parseInt","y","addCultureInfo","decimalSeparator","digitGroupSeparator","months","options","animationEnabled","culture","axisX","valueFormatString","interval","intervalType","axisY","suffix","lineColor","tickColor","labelFontColor","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","type","name","showInLegend","xValueFormatString","dataPoints","onChange","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoAutonomia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      equipo: \"\",\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const { tarjetas } = this.props;\n\n    var filter = {\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    // Formulas para \"Indice de autonomia\"\n\n    // Filtro todos los meses en el que hay tarjetas convertidas\n    const fechasTarjetasConvertidas = tarjetas\n      // .filter(({ estado, convertida }) => convertida === true)\n      .map(({ fecha }) => fecha.substr(0, 7));\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array1 = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, color }) =>\n          color === \"Azul\" &&\n          estado === \"Cerrada\" &&\n          fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n            item.slice(5, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array1Acum = array1.map((elem, index) =>\n      array1.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array2 = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, convertida }) =>\n          convertida === true &&\n          estado === \"Cerrada\" &&\n          fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n            item.slice(5, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array2Acum = array2.map((elem, index) =>\n      array2.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array3 = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha }) =>\n          estado === \"Cerrada\" &&\n          fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n            item.slice(5, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array3Acum = array3.map((elem, index) =>\n      array3.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let arrayAcumFinal = fechasTarjetasConvertidasUnicas\n      .sort()\n      .map((item, index) => {\n        return (\n          ((array1Acum[index] + array2Acum[index]) / array3Acum[index]) * 100\n        );\n      });\n\n    // Datos para el grafico\n    const ConvertidasData = [\n      fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: arrayAcumFinal[index],\n        };\n      }),\n    ];\n\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\", // Observe ToolTip Number Format\n      digitGroupSeparator: \".\", // Observe axisY labels\n\n      months: [\n        \"Enero\",\n        \"Febrero\",\n        \"Marzo\",\n        \"Abril\",\n        \"Mayo\",\n        \"Junio\",\n        \"Julio\",\n        \"Agosto\",\n        \"Septiembre\",\n        \"Octubre\",\n        \"Noviembre\",\n        \"Diciembre\",\n      ],\n    });\n    const options = {\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n\n        interval: 1,\n        intervalType: \"month\",\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\",\n      },\n\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: \"#1BA7F7\",\n          type: \"column\",\n          name: \"Indice de autonomia\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n          dataPoints: ConvertidasData[0],\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <Label for=\"equipo\">Equipo</Label>\n        <Input type=\"select\" name=\"equipo\" id=\"equipo\" onChange={this.onChange}>\n          <option></option>\n          {unicosEquipos.map((item, index) => {\n            return <option key={index}>{item}</option>;\n          })}\n        </Input>\n        <CanvasJSChart\n          culture=\"en\"\n          options={options}\n          onRef={(ref) => (this.chart = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GraficoAutonomia;\n"]},"metadata":{},"sourceType":"module"}