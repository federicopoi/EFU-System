{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/projecto-tpm/client/src/TestQr.jsx\";\nimport React, { Component } from \"react\";\nimport BarcodeReader from \"react-barcode-reader\";\n\nclass TestQr extends Component {\n  scanBarcode() {\n    if (window.reader) {\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = this.props.width;\n      canvas.height = this.props.height;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\n      window.reader.decodeBuffer(ctx.getImageData(0, 0, canvas.width, canvas.height).data, canvas.width, canvas.height, canvas.width * 4, window.dynamsoft.BarcodeReader.EnumImagePixelFormat.IPF_ARGB_8888).then(results => {\n        this.showResults(results);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"videoview\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.scanBarcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Scan Barcodes\"), /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      width: this.props.width,\n      height: this.props.height,\n      src: this.state.src,\n      muted: this.props.audio,\n      className: this.props.className,\n      playsInline: true,\n      style: this.props.style,\n      ref: ref => {\n        this.video = ref;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"overlay\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TestQr;","map":{"version":3,"sources":["/Users/fedepoi/projecto-tpm/client/src/TestQr.jsx"],"names":["React","Component","BarcodeReader","TestQr","scanBarcode","window","reader","canvas","document","createElement","width","props","height","ctx","getContext","drawImage","video","decodeBuffer","getImageData","data","dynamsoft","EnumImagePixelFormat","IPF_ARGB_8888","then","results","showResults","render","state","src","audio","className","style","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,GAAG;AACZ,QAAIC,MAAM,CAACC,MAAX,EAAmB;AACjB,UAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,MAAAA,MAAM,CAACG,KAAP,GAAe,KAAKC,KAAL,CAAWD,KAA1B;AACAH,MAAAA,MAAM,CAACK,MAAP,GAAgB,KAAKD,KAAL,CAAWC,MAA3B;AACA,UAAIC,GAAG,GAAGN,MAAM,CAACO,UAAP,CAAkB,IAAlB,CAAV;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAc,KAAKC,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,KAAKL,KAAL,CAAWD,KAA3C,EAAkD,KAAKC,KAAL,CAAWC,MAA7D;AAEAP,MAAAA,MAAM,CAACC,MAAP,CACGW,YADH,CAEIJ,GAAG,CAACK,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBX,MAAM,CAACG,KAA9B,EAAqCH,MAAM,CAACK,MAA5C,EAAoDO,IAFxD,EAGIZ,MAAM,CAACG,KAHX,EAIIH,MAAM,CAACK,MAJX,EAKIL,MAAM,CAACG,KAAP,GAAe,CALnB,EAMIL,MAAM,CAACe,SAAP,CAAiBlB,aAAjB,CAA+BmB,oBAA/B,CAAoDC,aANxD,EAQGC,IARH,CAQSC,OAAD,IAAa;AACjB,aAAKC,WAAL,CAAiBD,OAAjB;AACD,OAVH;AAWD;AACF;;AACDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWD,KAAtC;AAA6C,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWD,KAFpB;AAGE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAHrB;AAIE,MAAA,GAAG,EAAE,KAAKe,KAAL,CAAWC,GAJlB;AAKE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWkB,KALpB;AAME,MAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWmB,SANxB;AAOE,MAAA,WAAW,MAPb;AAQE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWoB,KARpB;AASE,MAAA,GAAG,EAAGC,GAAD,IAAS;AACZ,aAAKhB,KAAL,GAAagB,GAAb;AACD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAeE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWD,KAFpB;AAGE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAuBD;;AA9C4B;;AAgD/B,eAAeT,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport BarcodeReader from \"react-barcode-reader\";\n\nclass TestQr extends Component {\n  scanBarcode() {\n    if (window.reader) {\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = this.props.width;\n      canvas.height = this.props.height;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\n\n      window.reader\n        .decodeBuffer(\n          ctx.getImageData(0, 0, canvas.width, canvas.height).data,\n          canvas.width,\n          canvas.height,\n          canvas.width * 4,\n          window.dynamsoft.BarcodeReader.EnumImagePixelFormat.IPF_ARGB_8888\n        )\n        .then((results) => {\n          this.showResults(results);\n        });\n    }\n  }\n  render() {\n    return (\n      <div id=\"videoview\" width={this.props.width} height={this.props.height}>\n        <button onClick={this.scanBarcode}>Scan Barcodes</button>\n        <video\n          autoPlay\n          width={this.props.width}\n          height={this.props.height}\n          src={this.state.src}\n          muted={this.props.audio}\n          className={this.props.className}\n          playsInline\n          style={this.props.style}\n          ref={(ref) => {\n            this.video = ref;\n          }}\n        />\n        <canvas\n          id=\"overlay\"\n          width={this.props.width}\n          height={this.props.height}\n        ></canvas>\n      </div>\n    );\n  }\n}\nexport default TestQr;\n"]},"metadata":{},"sourceType":"module"}