{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { Card, CardTitle, CardBody, Container, Row, Col } from \"reactstrap\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\n\nclass DashBoard extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n  }\n\n  constructor() {\n    super();\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props.tarjetas;\n    const abiertasJulio = tarjetas.filter(({\n      estado,\n      fecha\n    }) => estado === \"Abierto\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === \"06\");\n    const fechasTarjetas = tarjetas.map(({\n      fecha\n    }) => fecha.substr(0, 7));\n    let unicos = new Set(fechasTarjetas);\n    const resultadoFinal = [...unicos];\n    const turnos = resultadoFinal.map((item, index) => {\n      return [{\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7))),\n        y: 10\n      }];\n    });\n    console.log(turnos);\n    const options = {\n      animationEnabled: true,\n      axisX: {\n        valueFormatString: \"MMMM\"\n      },\n      axisY: {\n        title: \"Cantidad de tarjetas\",\n        lineColor: \"#4F81BC\",\n        tickColor: \"#4F81BC\",\n        labelFontColor: \"#4F81BC\"\n      },\n      axisY2: {\n        title: \"% de Cierre\",\n        suffix: \"%\",\n        lineColor: \"#C0504E\",\n        tickColor: \"#C0504E\",\n        labelFontColor: \"#C0504E\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: \"#DBE034\",\n        type: \"column\",\n        name: \"Amarillas acumuladas (abiertas)\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: [{\n          x: new Date(2020, 0),\n          y: 3\n        }, {\n          x: new Date(2020, 1),\n          y: 2\n        }, {\n          x: new Date(2020, 2),\n          y: 4\n        }, {\n          x: new Date(2020, 3),\n          y: 3\n        }, {\n          x: new Date(2020, 4),\n          y: 4\n        }, {\n          x: new Date(2020, 5),\n          y: 5\n        }, {\n          x: new Date(2020, 6),\n          y: abiertasJulio.length\n        }, {\n          x: new Date(2020, 7),\n          y: 4\n        }, {\n          x: new Date(2020, 8),\n          y: 6\n        }, {\n          x: new Date(2020, 9),\n          y: 3\n        }, {\n          x: new Date(2020, 10),\n          y: 4\n        }, {\n          x: new Date(2020, 11),\n          y: 5\n        }]\n      }, {\n        type: \"line\",\n        name: \"Porcentaje Amarillas Cerradas\",\n        showInLegend: true,\n        yValueFormatString: \"$#,##0\",\n        dataPoints: [{\n          x: new Date(2020, 0),\n          y: 7\n        }, {\n          x: new Date(2020, 1),\n          y: 5\n        }, {\n          x: new Date(2020, 2),\n          y: 6\n        }, {\n          x: new Date(2020, 3),\n          y: 7\n        }, {\n          x: new Date(2020, 4),\n          y: 8\n        }, {\n          x: new Date(2020, 5),\n          y: 5\n        }, {\n          x: new Date(2020, 6),\n          y: 3\n        }, {\n          x: new Date(2020, 7),\n          y: 5\n        }, {\n          x: new Date(2020, 8),\n          y: 2\n        }, {\n          x: new Date(2020, 9),\n          y: 2\n        }, {\n          x: new Date(2020, 10),\n          y: 4\n        }, {\n          x: new Date(2020, 11),\n          y: 3\n        }]\n      }, {\n        type: \"line\",\n        name: \"Porcentaje Amarillas Cerradas\",\n        showInLegend: true,\n        axisYType: \"secondary\",\n        yValueFormatString: \"$#,##0\",\n        dataPoints: [{\n          x: new Date(2020, 0),\n          y: 10\n        }, {\n          x: new Date(2020, 1),\n          y: 2\n        }, {\n          x: new Date(2020, 2),\n          y: 66\n        }, {\n          x: new Date(2020, 3),\n          y: 3\n        }, {\n          x: new Date(2020, 4),\n          y: 4\n        }, {\n          x: new Date(2020, 5),\n          y: 5\n        }, {\n          x: new Date(2020, 6),\n          y: abiertasJulio.length\n        }, {\n          x: new Date(2020, 7),\n          y: 4\n        }, {\n          x: new Date(2020, 8),\n          y: 6\n        }, {\n          x: new Date(2020, 9),\n          y: 3\n        }, {\n          x: new Date(2020, 10),\n          y: 4\n        }, {\n          x: new Date(2020, 11),\n          y: 5\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"Evolucion de Tarjetas amarillas\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      lg: 6,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas\n})(DashBoard);","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/Dashboard.jsx"],"names":["React","Component","connect","getTarjetas","Card","CardTitle","CardBody","Container","Row","Col","CanvasJSReact","CanvasJSChart","CanvasJS","DashBoard","componentDidMount","props","constructor","toggleDataSeries","bind","e","dataSeries","visible","chart","render","tarjetas","abiertasJulio","filter","estado","fecha","substr","replace","fechasTarjetas","map","unicos","Set","resultadoFinal","turnos","item","index","x","Date","parseInt","slice","y","console","log","options","animationEnabled","axisX","valueFormatString","axisY","title","lineColor","tickColor","labelFontColor","axisY2","suffix","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","color","type","name","showInLegend","xValueFormatString","dataPoints","length","yValueFormatString","axisYType","ref","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { Card, CardTitle, CardBody, Container, Row, Col } from \"reactstrap\";\nimport CanvasJSReact from \"./canvasjs.react\";\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\n\nclass DashBoard extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n  }\n\n  constructor() {\n    super();\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n  render() {\n    const { tarjetas } = this.props.tarjetas;\n\n    const abiertasJulio = tarjetas.filter(\n      ({ estado, fecha }) =>\n        estado === \"Abierto\" &&\n        fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === \"06\"\n    );\n    const fechasTarjetas = tarjetas.map(({ fecha }) => fecha.substr(0, 7));\n    let unicos = new Set(fechasTarjetas);\n    const resultadoFinal = [...unicos];\n    const turnos = resultadoFinal.map((item, index) => {\n      return [\n        {\n          x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7))),\n          y: 10,\n        },\n      ];\n    });\n    console.log(turnos);\n\n    const options = {\n      animationEnabled: true,\n\n      axisX: {\n        valueFormatString: \"MMMM\",\n      },\n      axisY: {\n        title: \"Cantidad de tarjetas\",\n        lineColor: \"#4F81BC\",\n        tickColor: \"#4F81BC\",\n        labelFontColor: \"#4F81BC\",\n      },\n      axisY2: {\n        title: \"% de Cierre\",\n        suffix: \"%\",\n\n        lineColor: \"#C0504E\",\n        tickColor: \"#C0504E\",\n        labelFontColor: \"#C0504E\",\n      },\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: \"#DBE034\",\n          type: \"column\",\n          name: \"Amarillas acumuladas (abiertas)\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n\n          dataPoints: [\n            { x: new Date(2020, 0), y: 3 },\n            { x: new Date(2020, 1), y: 2 },\n            { x: new Date(2020, 2), y: 4 },\n            { x: new Date(2020, 3), y: 3 },\n            { x: new Date(2020, 4), y: 4 },\n            { x: new Date(2020, 5), y: 5 },\n            { x: new Date(2020, 6), y: abiertasJulio.length },\n            { x: new Date(2020, 7), y: 4 },\n            { x: new Date(2020, 8), y: 6 },\n            { x: new Date(2020, 9), y: 3 },\n            { x: new Date(2020, 10), y: 4 },\n            { x: new Date(2020, 11), y: 5 },\n          ],\n        },\n        {\n          type: \"line\",\n\n          name: \"Porcentaje Amarillas Cerradas\",\n          showInLegend: true,\n          yValueFormatString: \"$#,##0\",\n          dataPoints: [\n            { x: new Date(2020, 0), y: 7 },\n            { x: new Date(2020, 1), y: 5 },\n            { x: new Date(2020, 2), y: 6 },\n            { x: new Date(2020, 3), y: 7 },\n            { x: new Date(2020, 4), y: 8 },\n            { x: new Date(2020, 5), y: 5 },\n            { x: new Date(2020, 6), y: 3 },\n            { x: new Date(2020, 7), y: 5 },\n            { x: new Date(2020, 8), y: 2 },\n            { x: new Date(2020, 9), y: 2 },\n            { x: new Date(2020, 10), y: 4 },\n            { x: new Date(2020, 11), y: 3 },\n          ],\n        },\n        {\n          type: \"line\",\n\n          name: \"Porcentaje Amarillas Cerradas\",\n          showInLegend: true,\n          axisYType: \"secondary\",\n          yValueFormatString: \"$#,##0\",\n          dataPoints: [\n            { x: new Date(2020, 0), y: 10 },\n            { x: new Date(2020, 1), y: 2 },\n            { x: new Date(2020, 2), y: 66 },\n            { x: new Date(2020, 3), y: 3 },\n            { x: new Date(2020, 4), y: 4 },\n            { x: new Date(2020, 5), y: 5 },\n            { x: new Date(2020, 6), y: abiertasJulio.length },\n            { x: new Date(2020, 7), y: 4 },\n            { x: new Date(2020, 8), y: 6 },\n            { x: new Date(2020, 9), y: 3 },\n            { x: new Date(2020, 10), y: 4 },\n            { x: new Date(2020, 11), y: 5 },\n          ],\n        },\n      ],\n    };\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container>\n              <div>\n                <h2 className=\"mb-3\">Evolucion de Tarjetas amarillas</h2>\n              </div>\n\n              <Row>\n                <Col sm={12} lg={6} md={6}>\n                  <CanvasJSChart\n                    options={options}\n                    onRef={(ref) => (this.chart = ref)}\n                  />\n                </Col>\n                <Col>\n                  <Card></Card>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n  };\n};\nexport default connect(mapStateToProps, { getTarjetas })(DashBoard);\n"]},"metadata":{},"sourceType":"module"}