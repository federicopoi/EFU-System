{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/auth-components/register/registerpage.jsx\";\nimport React, { Component } from \"react\";\nimport { Card } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../store/actions/authActions\";\nimport { clearErrors } from \"../../store/actions/errorActions\";\nimport { Label, Input, Alert } from \"reactstrap\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport class RegisterPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      legajo: null,\n      pin: null,\n      role: \"\",\n      msg: null,\n      errors: {\n        fullName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password,\n        role,\n        acceso\n      } = this.state; // Create usre object\n\n      const newUser = {\n        email,\n        password,\n        role\n      }; // Atempt to register\n      // this.props.register(newUser);\n\n      console.log(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.props.success) {\n      this.props.history.push(\"/admin\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, this.props.user && this.props.user.role === \"Admin\" && /*#__PURE__*/React.createElement(Card, {\n      className: \"px-5 py-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AvForm, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \"Registrar Usuario\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AvField, {\n      name: \"email\",\n      id: \"email\",\n      label: \"N\\xBA Legajo\",\n      type: \"number\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      errorMessage: \"6 caracteres es maximo\",\n      validate: {\n        required: {\n          value: true\n        },\n        minLength: {\n          value: 5\n        },\n        maxLength: {\n          value: 6\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Pin\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      for: \"color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Role\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"role\",\n      id: \"role\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Admin\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"Jefe de area\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Operario\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \"Subir\"), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, this.state.msg) : null)))));\n  }\n\n}\nRegisterPage.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  success: state.auth.success,\n  error: state.error,\n  user: state.auth.user,\n  users: state.users\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterPage));","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/auth-components/register/registerpage.jsx"],"names":["React","Component","Card","connect","PropTypes","register","clearErrors","Label","Input","Alert","withRouter","Redirect","AvForm","AvField","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","RegisterPage","state","legajo","pin","role","msg","fullName","email","password","onChange","e","setState","target","name","value","onSubmit","preventDefault","acceso","newUser","console","log","componentDidUpdate","prevProps","error","isAuthenticated","props","id","success","history","push","render","user","required","minLength","maxLength","propTypes","bool","object","isRequired","func","mapStateToProps","auth","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,YAApC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gCAAhC;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAC5B,wHAD4B,CAA9B;;AAGA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,OAAtB,CAA+BC,GAAD,IAASA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B,CAAvC;AACA,SAAOA,KAAP;AACD,CAJD;;AAMA,OAAO,MAAMM,YAAN,SAA2BvB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CwB,KAD0C,GAClC;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,GAAG,EAAE,IAFC;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,GAAG,EAAE,IAJC;AAKNZ,MAAAA,MAAM,EAAE;AACNa,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,QAAQ,EAAE;AAHJ;AALF,KADkC;;AAAA,SAsC1CC,QAtC0C,GAsC9BC,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAxCyC;;AAAA,SAyC1CC,QAzC0C,GAyC9BL,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAET,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBJ,QAAAA,IAAnB;AAAyBa,QAAAA;AAAzB,UAAoC,KAAKhB,KAA/C,CAFgB,CAIhB;;AACA,YAAMiB,OAAO,GAAG;AACdX,QAAAA,KADc;AAEdC,QAAAA,QAFc;AAGdJ,QAAAA;AAHc,OAAhB,CALgB,CAWhB;AACA;;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAvDyC;AAAA;;AAoB1CG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA6B,KAAKC,KAAxC;;AACA,QAAIF,KAAK,KAAKD,SAAS,CAACC,KAAxB,EAA+B;AAC7B;AACA,UAAIA,KAAK,CAACG,EAAN,KAAa,eAAjB,EAAkC;AAChC,aAAKf,QAAL,CAAc;AACZN,UAAAA,GAAG,EAAEkB,KAAK,CAAClB,GAAN,CAAUA;AADH,SAAd;AAGD,OAJD,MAIO;AACL,aAAKM,QAAL,CAAc;AACZN,UAAAA,GAAG,EAAE;AADO,SAAd;AAGD;AACF;;AACD,QAAI,KAAKoB,KAAL,CAAWE,OAAf,EAAwB;AACtB,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF;;AAoBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,IAAX,IAAmB,KAAKN,KAAL,CAAWM,IAAX,CAAgB3B,IAAhB,KAAyB,OAA5C,iBACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,QAAQ,EAAE,KAAKN,QANjB;AAOE,MAAA,YAAY,EAAC,wBAPf;AAQE,MAAA,QAAQ,EAAE;AACRuB,QAAAA,QAAQ,EAAE;AAAElB,UAAAA,KAAK,EAAE;AAAT,SADF;AAERmB,QAAAA,SAAS,EAAE;AAAEnB,UAAAA,KAAK,EAAE;AAAT,SAFH;AAGRoB,QAAAA,SAAS,EAAE;AAAEpB,UAAAA,KAAK,EAAE;AAAT;AAHH,OARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,eAoBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,QAAQ,EAAE,KAAKL,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,eA+BE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF,eAgCE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,QAAQ,EAAE,KAAKA,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAhCF,eA4CE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,gCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5CF,EAkDG,KAAKR,KAAL,CAAWI,GAAX,gBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWI,GADd,CADD,GAIG,IAtDN,CADF,CAFJ,CADF,CADF,CADF;AAoED;;AA9HyC;AAA/BL,Y,CAaJmC,S,GAAY;AACjBX,EAAAA,eAAe,EAAE5C,SAAS,CAACwD,IADV;AAEjBb,EAAAA,KAAK,EAAE3C,SAAS,CAACyD,MAAV,CAAiBC,UAFP;AAGjBzD,EAAAA,QAAQ,EAAED,SAAS,CAAC2D,IAAV,CAAeD,UAHR;AAIjBxD,EAAAA,WAAW,EAAEF,SAAS,CAAC2D,IAAV,CAAeD;AAJX,C;;AAmHrB,MAAME,eAAe,GAAIvC,KAAD,KAAY;AAClCuB,EAAAA,eAAe,EAAEvB,KAAK,CAACwC,IAAN,CAAWjB,eADM;AAElCG,EAAAA,OAAO,EAAE1B,KAAK,CAACwC,IAAN,CAAWd,OAFc;AAGlCJ,EAAAA,KAAK,EAAEtB,KAAK,CAACsB,KAHqB;AAIlCQ,EAAAA,IAAI,EAAE9B,KAAK,CAACwC,IAAN,CAAWV,IAJiB;AAKlCW,EAAAA,KAAK,EAAEzC,KAAK,CAACyC;AALqB,CAAZ,CAAxB;;AAOA,eAAexD,UAAU,CACvBP,OAAO,CAAC6D,eAAD,EAAkB;AAAE3D,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAoDkB,YAApD,CADuB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../store/actions/authActions\";\nimport { clearErrors } from \"../../store/actions/errorActions\";\nimport { Label, Input, Alert } from \"reactstrap\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport class RegisterPage extends Component {\n  state = {\n    legajo: null,\n    pin: null,\n    role: \"\",\n    msg: null,\n    errors: {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg,\n        });\n      } else {\n        this.setState({\n          msg: null,\n        });\n      }\n    }\n    if (this.props.success) {\n      this.props.history.push(\"/admin\");\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password, role, acceso } = this.state;\n\n    // Create usre object\n    const newUser = {\n      email,\n      password,\n      role,\n    };\n\n    // Atempt to register\n    // this.props.register(newUser);\n    console.log(newUser);\n  };\n\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row align-items-center h-100\">\n          <div className=\"col-6 mx-auto\">\n            {this.props.user && this.props.user.role === \"Admin\" && (\n              <Card className=\"px-5 py-5\">\n                <AvForm onSubmit={this.onSubmit}>\n                  <h3>Registrar Usuario</h3>\n\n                  <div className=\"form-group\">\n                    <AvField\n                      name=\"email\"\n                      id=\"email\"\n                      label=\"Nº Legajo\"\n                      type=\"number\"\n                      className=\"mb-3\"\n                      onChange={this.onChange}\n                      errorMessage=\"6 caracteres es maximo\"\n                      validate={{\n                        required: { value: true },\n                        minLength: { value: 5 },\n                        maxLength: { value: 6 },\n                      }}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <Label for=\"password\">Pin</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"Password\"\n                      className=\"mb-3\"\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <Label for=\"color\">Role</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"role\"\n                    id=\"role\"\n                    onChange={this.onChange}\n                  >\n                    <option>Seleccionar</option>\n                    <option>Admin</option>\n                    <option>Jefe de area</option>\n                    <option>Operario</option>\n                  </Input>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-3\"\n                  >\n                    Subir\n                  </button>\n                  {this.state.msg ? (\n                    <Alert color=\"danger\" className=\"mt-3\">\n                      {this.state.msg}\n                    </Alert>\n                  ) : null}\n                </AvForm>\n              </Card>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  success: state.auth.success,\n  error: state.error,\n  user: state.auth.user,\n  users: state.users,\n});\nexport default withRouter(\n  connect(mapStateToProps, { register, clearErrors })(RegisterPage)\n);\n"]},"metadata":{},"sourceType":"module"}