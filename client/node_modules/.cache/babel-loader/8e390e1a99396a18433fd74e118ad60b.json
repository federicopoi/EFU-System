{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/projecto-tpm/client/src/components/detalletarjeta/textdetail/QRModal.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, Row, Col } from \"reactstrap\";\nimport QRCode from \"qrcode.react\";\n\nconst QRModal = props => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const link = \"http://192.168.0.5:3000\" + props.path;\n\n  var os = require(\"os\");\n\n  var ifaces = os.networkInterfaces();\n  Object.keys(ifaces).forEach(function (ifname) {\n    var alias = 0;\n    ifaces[ifname].forEach(function (iface) {\n      if (\"IPv4\" !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n\n      if (alias >= 1) {\n        // this single interface has multiple ipv4 addresses\n        console.log(ifname + \":\" + alias, iface.address);\n      } else {\n        // this interface has only one ipv4 adress\n        console.log(ifname, iface.address);\n      }\n\n      ++alias;\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Mostrar QR\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"C\\xF3digo QR\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Tarjeta \", props.color, \" N\\xB0\", props.numero)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default QRModal;","map":{"version":3,"sources":["/Users/fedepoi/projecto-tpm/client/src/components/detalletarjeta/textdetail/QRModal.jsx"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","Row","Col","QRCode","QRModal","props","modal","setModal","toggle","link","path","os","require","ifaces","networkInterfaces","Object","keys","forEach","ifname","alias","iface","family","internal","console","log","address","color","numero"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,GAAhD,EAAqDC,GAArD,QAAgE,YAAhE;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMG,IAAI,GAAG,4BAA4BJ,KAAK,CAACK,IAA/C;;AACA,MAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,MAAIC,MAAM,GAAGF,EAAE,CAACG,iBAAH,EAAb;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAUC,MAAV,EAAkB;AAC5C,QAAIC,KAAK,GAAG,CAAZ;AAEAN,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeD,OAAf,CAAuB,UAAUG,KAAV,EAAiB;AACtC,UAAI,WAAWA,KAAK,CAACC,MAAjB,IAA2BD,KAAK,CAACE,QAAN,KAAmB,KAAlD,EAAyD;AACvD;AACA;AACD;;AAED,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACd;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,GAAG,GAAT,GAAeC,KAA3B,EAAkCC,KAAK,CAACK,OAAxC;AACD,OAHD,MAGO;AACL;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAoBE,KAAK,CAACK,OAA1B;AACD;;AACD,QAAEN,KAAF;AACD,KAdD;AAeD,GAlBD;AAmBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEX,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWJ,KAAK,CAACqB,KADjB,YAC2BrB,KAAK,CAACsB,MADjC,CAHF,CADF,eAQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CAFF,CAFF,CADF;AAoBD,CAhDD;;AAkDA,eAAevB,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, Row, Col } from \"reactstrap\";\nimport QRCode from \"qrcode.react\";\n\nconst QRModal = (props) => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const link = \"http://192.168.0.5:3000\" + props.path;\n  var os = require(\"os\");\n  var ifaces = os.networkInterfaces();\n\n  Object.keys(ifaces).forEach(function (ifname) {\n    var alias = 0;\n\n    ifaces[ifname].forEach(function (iface) {\n      if (\"IPv4\" !== iface.family || iface.internal !== false) {\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\n        return;\n      }\n\n      if (alias >= 1) {\n        // this single interface has multiple ipv4 addresses\n        console.log(ifname + \":\" + alias, iface.address);\n      } else {\n        // this interface has only one ipv4 adress\n        console.log(ifname, iface.address);\n      }\n      ++alias;\n    });\n  });\n  return (\n    <div>\n      <Button onClick={toggle}>Mostrar QR</Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Código QR</ModalHeader>\n        <ModalBody>\n          <Row>\n            <Col>\n              <QRCode value={link} />\n\n              <h4 className=\"mt-3\">\n                Tarjeta {props.color} N°{props.numero}\n              </h4>\n            </Col>\n            <Col></Col>\n          </Row>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default QRModal;\n"]},"metadata":{},"sourceType":"module"}