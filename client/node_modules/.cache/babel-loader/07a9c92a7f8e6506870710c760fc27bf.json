{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/tarjetas/MisTarjetasFiltro.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\nimport { Card, CardBody, Row, Col, Table, Button, Container, Input, Label } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { array } from \"prop-types\";\nconst options = [{\n  value: \"numero\",\n  label: \"NÂ°\"\n}, {\n  value: \"color\",\n  label: \"Color\"\n}, {\n  value: \"prioridad\",\n  label: \"Prioridad\"\n}, {\n  value: \"equipo\",\n  label: \"Equipo Autonomo\"\n}, {\n  value: \"fecha\",\n  label: \"Fecha apertura\"\n}, {\n  value: \"descripcion\",\n  label: \"Descripcion anomalia\"\n}, {\n  value: \"estado\",\n  label: \"Estado acutal\"\n}, {\n  value: \"maquina\",\n  label: \"Maquina / Instalacion\"\n}, {\n  value: \"detecto\",\n  label: \"Detecto\"\n}];\n\nclass MisTarjetasFiltro extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null,\n      numero: \"\",\n      color: \"\",\n      equipo: \"\",\n      prioridad: \"\",\n      fecha: \"\",\n      descripcion: \"\",\n      estado: \"\",\n      maquina: \"\",\n      detecto: \"\",\n      qrcode: true\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTarjetas();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props.tarjetas;\n    const {\n      selectedOption\n    } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n      detecto: this.state.detecto && this.state.detecto\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    const arrNumero = tarjetas.map(({\n      numero\n    }) => numero);\n    const unicosNumero = Array.from(new Set(arrNumero));\n    const arrColores = tarjetas.map(({\n      color\n    }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n    const arrPrioridad = tarjetas.map(({\n      prioridad\n    }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n    const arrFecha = tarjetas.map(({\n      fecha\n    }) => fecha);\n    const unicosFecha = Array.from(new Set(arrFecha));\n    const arrDescripcion = tarjetas.map(({\n      descripcion\n    }) => descripcion);\n    const unicosDescripcion = Array.from(new Set(arrDescripcion));\n    const arrEstado = tarjetas.map(({\n      estado\n    }) => estado);\n    const unicosEstado = Array.from(new Set(arrEstado));\n    const arrMaquina = tarjetas.map(({\n      maquina\n    }) => maquina);\n    const unicosMaquina = Array.from(new Set(arrMaquina));\n    const arrDetecto = tarjetas.map(({\n      detecto\n    }) => detecto);\n    const unicosDetecto = Array.from(new Set(arrDetecto));\n    const globalArray = {\n      numero: unicosNumero,\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n      fecha: unicosFecha,\n      estado: unicosEstado,\n      descripcion: unicosDescripcion,\n      maquina: unicosMaquina,\n      detecto: unicosDetecto\n    };\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, \"Tabla dinamica de tarjetas\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto d-flex no-block align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      className: \"btn btn-info\",\n      table: \"emp\",\n      filename: \"ReporteTarjetas\",\n      sheet: \"Tarjetas\",\n      buttonText: \"Exportar excel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Seleccionar elementos para la tabla\"), /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: \"Seleccionar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Filtrar elementos\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, selectedOption && selectedOption.map(({\n      label,\n      value\n    }) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 27\n        }\n      }, label), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: value,\n        id: value,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }), globalArray[value].map(item => /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }\n      }, item)))));\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"no-wrap v-middle\",\n      responsive: true,\n      id: \"emp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, selectedOption && selectedOption.map(({\n      value,\n      label\n    }) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 36\n        }\n      }, label);\n    }), this.state.qrcode && /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 27\n      }\n    }, \"QR Code\"))), newFilter && newFilter.map((item, index) => {\n      const link = \"http://192.168.0.4:3000\" + item._id;\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }\n      }, selectedOption && selectedOption.map(({\n        value,\n        label\n      }, index) => {\n        return item[label] === \"fecha\" ? /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 39\n          }\n        }, moment(item[value]).format(\"l LTS\")) : /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 39\n          }\n        }, item[value]);\n      }), this.state.qrcode && /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        value: link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 35\n        }\n      }))));\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas\n})(MisTarjetasFiltro);","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/tarjetas/MisTarjetasFiltro.jsx"],"names":["React","Component","connect","Link","getTarjetas","ReactHTMLTableToExcel","QRCode","moment","Card","CardBody","Row","Col","Table","Button","Container","Input","Label","Select","array","options","value","label","MisTarjetasFiltro","state","selectedOption","numero","color","equipo","prioridad","fecha","descripcion","estado","maquina","detecto","qrcode","handleChange","setState","onChange","e","target","name","componentDidMount","props","render","tarjetas","filter","multiFilter","arr","filters","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","arrNumero","map","unicosNumero","Array","from","Set","arrColores","unicosColores","arrEquipos","unicosEquipos","arrPrioridad","unicosPrioridad","arrFecha","unicosFecha","arrDescripcion","unicosDescripcion","arrEstado","unicosEstado","arrMaquina","unicosMaquina","arrDetecto","unicosDetecto","globalArray","console","log","item","index","link","_id","format","mapStateToProps","user","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,KARF,EASEC,KATF,QAUO,YAVP;AAWA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAHc,EAId;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJc,EAKd;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CALc,EAMd;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CANc,EAOd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAPc,EAQd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CARc,EASd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CATc,CAAhB;;AAWA,MAAMC,iBAAN,SAAgCrB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAIxCsB,KAJwC,GAIhC;AACNC,MAAAA,cAAc,EAAE,IADV;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,SAAS,EAAE,EALL;AAMNC,MAAAA,KAAK,EAAE,EAND;AAONC,MAAAA,WAAW,EAAE,EAPP;AAQNC,MAAAA,MAAM,EAAE,EARF;AASNC,MAAAA,OAAO,EAAE,EATH;AAUNC,MAAAA,OAAO,EAAE,EAVH;AAWNC,MAAAA,MAAM,EAAE;AAXF,KAJgC;;AAAA,SAiBxCC,YAjBwC,GAiBxBX,cAAD,IAAoB;AACjC,WAAKY,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAnBuC;;AAAA,SAoBxCa,QApBwC,GAoB5BC,CAAD,IAAO;AAChB,WAAKF,QAAL,CAAc;AACZ,SAACE,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASnB;AADd,OAAd;AAGD,KAxBuC;AAAA;;AACxCqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWtC,WAAX;AACD;;AAsBDuC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKF,KAAL,CAAWE,QAAhC;AACA,UAAM;AAAEpB,MAAAA;AAAF,QAAqB,KAAKD,KAAhC;AACA,QAAIsB,MAAM,GAAG;AACXpB,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,IAAqB,KAAKF,KAAL,CAAWE,MAD7B;AAEXC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,IAAoB,KAAKH,KAAL,CAAWG,KAF3B;AAGXC,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MAAX,IAAqB,KAAKJ,KAAL,CAAWI,MAH7B;AAIXC,MAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK,SAAX,IAAwB,KAAKL,KAAL,CAAWK,SAJnC;AAKXC,MAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KAAX,IAAoB,KAAKN,KAAL,CAAWM,KAL3B;AAMXC,MAAAA,WAAW,EAAE,KAAKP,KAAL,CAAWO,WAAX,IAA0B,KAAKP,KAAL,CAAWO,WANvC;AAOXC,MAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAAX,IAAqB,KAAKR,KAAL,CAAWQ,MAP7B;AAQXE,MAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWU,OAAX,IAAsB,KAAKV,KAAL,CAAWU;AAR/B,KAAb;;AAWA,UAAMa,WAAW,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACpC,YAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAnB;AACA,aAAOD,GAAG,CAACF,MAAJ,CAAYO,OAAD,IAAa;AAC7B,eAAOH,UAAU,CAACI,KAAX,CAAkBC,OAAD,IAAa;AACnC,cAAI,CAACN,OAAO,CAACM,OAAD,CAAP,CAAiBC,MAAtB,EAA8B;AAC5B,mBAAO,IAAP,CAD4B,CACf;AACd;;AACD,iBAAOP,OAAO,CAACM,OAAD,CAAP,CAAiBE,QAAjB,CAA0BJ,OAAO,CAACE,OAAD,CAAjC,CAAP;AACD,SALM,CAAP;AAMD,OAPM,CAAP;AAQD,KAVD;;AAWA,UAAMG,SAAS,GAAGX,WAAW,CAACF,QAAD,EAAWC,MAAX,CAA7B;AAEA,UAAMa,SAAS,GAAGd,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAElC,MAAAA;AAAF,KAAD,KAAgBA,MAA7B,CAAlB;AACA,UAAMmC,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQL,SAAR,CAAX,CAArB;AAEA,UAAMM,UAAU,GAAGpB,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAEjC,MAAAA;AAAF,KAAD,KAAeA,KAA5B,CAAnB;AACA,UAAMuC,aAAa,GAAGJ,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQC,UAAR,CAAX,CAAtB;AAEA,UAAME,UAAU,GAAGtB,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAEhC,MAAAA;AAAF,KAAD,KAAgBA,MAA7B,CAAnB;AACA,UAAMwC,aAAa,GAAGN,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQG,UAAR,CAAX,CAAtB;AAEA,UAAME,YAAY,GAAGxB,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAE/B,MAAAA;AAAF,KAAD,KAAmBA,SAAhC,CAArB;AACA,UAAMyC,eAAe,GAAGR,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQK,YAAR,CAAX,CAAxB;AAEA,UAAME,QAAQ,GAAG1B,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAE9B,MAAAA;AAAF,KAAD,KAAeA,KAA5B,CAAjB;AACA,UAAM0C,WAAW,GAAGV,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQO,QAAR,CAAX,CAApB;AAEA,UAAME,cAAc,GAAG5B,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAE7B,MAAAA;AAAF,KAAD,KAAqBA,WAAlC,CAAvB;AACA,UAAM2C,iBAAiB,GAAGZ,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQS,cAAR,CAAX,CAA1B;AAEA,UAAME,SAAS,GAAG9B,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAE5B,MAAAA;AAAF,KAAD,KAAgBA,MAA7B,CAAlB;AACA,UAAM4C,YAAY,GAAGd,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQW,SAAR,CAAX,CAArB;AAEA,UAAME,UAAU,GAAGhC,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAE3B,MAAAA;AAAF,KAAD,KAAiBA,OAA9B,CAAnB;AACA,UAAM6C,aAAa,GAAGhB,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQa,UAAR,CAAX,CAAtB;AAEA,UAAME,UAAU,GAAGlC,QAAQ,CAACe,GAAT,CAAa,CAAC;AAAE1B,MAAAA;AAAF,KAAD,KAAiBA,OAA9B,CAAnB;AACA,UAAM8C,aAAa,GAAGlB,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQe,UAAR,CAAX,CAAtB;AAEA,UAAME,WAAW,GAAG;AAClBvD,MAAAA,MAAM,EAAEmC,YADU;AAElBlC,MAAAA,KAAK,EAAEuC,aAFW;AAGlBrC,MAAAA,SAAS,EAAEyC,eAHO;AAIlB1C,MAAAA,MAAM,EAAEwC,aAJU;AAKlBtC,MAAAA,KAAK,EAAE0C,WALW;AAMlBxC,MAAAA,MAAM,EAAE4C,YANU;AAOlB7C,MAAAA,WAAW,EAAE2C,iBAPK;AAQlBzC,MAAAA,OAAO,EAAE6C,aARS;AASlB5C,MAAAA,OAAO,EAAE8C;AATS,KAApB;AAWAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3D,KAAjB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,qBAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,QAAQ,EAAC,iBAHX;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,UAAU,EAAC,gBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,CADF,CADF,CADF,eAqBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEC,cADT;AAEE,MAAA,QAAQ,EAAE,KAAKW,YAFjB;AAGE,MAAA,OAAO,EAAEhB,OAHX;AAIE,MAAA,OAAO,MAJT;AAKE,MAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CArBF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA/BF,eAgCE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,cAAc,IACbA,cAAc,CAACmC,GAAf,CAAmB,CAAC;AAAEtC,MAAAA,KAAF;AAASD,MAAAA;AAAT,KAAD,KAAsB;AACvC,0BACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBC,KAApB,CADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAED,KAFR;AAGE,QAAA,EAAE,EAAEA,KAHN;AAIE,QAAA,QAAQ,EAAE,KAAKiB,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOG2C,WAAW,CAAC5D,KAAD,CAAX,CAAmBuC,GAAnB,CAAwBwB,IAAD,iBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,IAAT,CADD,CAPH,CAFF,CADF,CADF;AAkBD,KAnBD,CAFJ,CAhCF,eAuDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,UAAU,MAA9C;AAA+C,MAAA,EAAE,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3D,cAAc,IACbA,cAAc,CAACmC,GAAf,CAAmB,CAAC;AAAEvC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAsB;AACvC,0BAAO;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BA,KAA1B,CAAP;AACD,KAFD,CAFJ,EAKG,KAAKE,KAAL,CAAWW,MAAX,iBACC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CADF,CADF,EAaGuB,SAAS,IACRA,SAAS,CAACE,GAAV,CAAc,CAACwB,IAAD,EAAOC,KAAP,KAAiB;AAC7B,YAAMC,IAAI,GAAG,4BAA4BF,IAAI,CAACG,GAA9C;AACA,0BACE;AAAO,QAAA,GAAG,EAAEF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG5D,cAAc,IACbA,cAAc,CAACmC,GAAf,CACE,CAAC;AAAEvC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,EAAmB+D,KAAnB,KAA6B;AAC3B,eAAOD,IAAI,CAAC9D,KAAD,CAAJ,KAAgB,OAAhB,gBACL;AAAI,UAAA,GAAG,EAAE+D,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG7E,MAAM,CAAC4E,IAAI,CAAC/D,KAAD,CAAL,CAAN,CAAoBmE,MAApB,CAA2B,OAA3B,CADH,CADK,gBAKL;AAAI,UAAA,GAAG,EAAEH,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,IAAI,CAAC/D,KAAD,CAArB,CALF;AAOD,OATH,CAFJ,EAaG,KAAKG,KAAL,CAAWW,MAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEmD,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdJ,CADF,CADF;AAuBD,KAzBD,CAdJ,CADF,CADF,CAvDF,CADF,CADF,CADF,CADF;AA6GD;;AAxMuC;;AA0M1C,MAAMG,eAAe,GAAIjE,KAAD,IAAW;AACjC,SAAO;AACLqB,IAAAA,QAAQ,EAAErB,KAAK,CAACqB,QADX;AAEL6C,IAAAA,IAAI,EAAElE,KAAK,CAACmE,IAAN,CAAWD;AAFZ,GAAP;AAID,CALD;;AAOA,eAAevF,OAAO,CAACsF,eAAD,EAAkB;AAAEpF,EAAAA;AAAF,CAAlB,CAAP,CAA0CkB,iBAA1C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  Table,\n  Button,\n  Container,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { array } from \"prop-types\";\nconst options = [\n  { value: \"numero\", label: \"NÂ°\" },\n  { value: \"color\", label: \"Color\" },\n  { value: \"prioridad\", label: \"Prioridad\" },\n  { value: \"equipo\", label: \"Equipo Autonomo\" },\n  { value: \"fecha\", label: \"Fecha apertura\" },\n  { value: \"descripcion\", label: \"Descripcion anomalia\" },\n  { value: \"estado\", label: \"Estado acutal\" },\n  { value: \"maquina\", label: \"Maquina / Instalacion\" },\n  { value: \"detecto\", label: \"Detecto\" },\n];\nclass MisTarjetasFiltro extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n  }\n  state = {\n    selectedOption: null,\n    numero: \"\",\n    color: \"\",\n    equipo: \"\",\n    prioridad: \"\",\n    fecha: \"\",\n    descripcion: \"\",\n    estado: \"\",\n    maquina: \"\",\n    detecto: \"\",\n    qrcode: true,\n  };\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  render() {\n    const { tarjetas } = this.props.tarjetas;\n    const { selectedOption } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n      detecto: this.state.detecto && this.state.detecto,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    const arrNumero = tarjetas.map(({ numero }) => numero);\n    const unicosNumero = Array.from(new Set(arrNumero));\n\n    const arrColores = tarjetas.map(({ color }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    const arrPrioridad = tarjetas.map(({ prioridad }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n\n    const arrFecha = tarjetas.map(({ fecha }) => fecha);\n    const unicosFecha = Array.from(new Set(arrFecha));\n\n    const arrDescripcion = tarjetas.map(({ descripcion }) => descripcion);\n    const unicosDescripcion = Array.from(new Set(arrDescripcion));\n\n    const arrEstado = tarjetas.map(({ estado }) => estado);\n    const unicosEstado = Array.from(new Set(arrEstado));\n\n    const arrMaquina = tarjetas.map(({ maquina }) => maquina);\n    const unicosMaquina = Array.from(new Set(arrMaquina));\n\n    const arrDetecto = tarjetas.map(({ detecto }) => detecto);\n    const unicosDetecto = Array.from(new Set(arrDetecto));\n\n    const globalArray = {\n      numero: unicosNumero,\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n      fecha: unicosFecha,\n      estado: unicosEstado,\n      descripcion: unicosDescripcion,\n      maquina: unicosMaquina,\n      detecto: unicosDetecto,\n    };\n    console.log(this.state);\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container>\n              <Row>\n                <Col>\n                  <div className=\"d-flex align-items-center\">\n                    <div className=\"\">\n                      <h2 className=\"mb-3\">Tabla dinamica de tarjetas</h2>\n                    </div>\n                    <div className=\"ml-auto d-flex no-block align-items-center\">\n                      <div className=\"dl\">\n                        <ReactHTMLTableToExcel\n                          className=\"btn btn-info\"\n                          table=\"emp\"\n                          filename=\"ReporteTarjetas\"\n                          sheet=\"Tarjetas\"\n                          buttonText=\"Exportar excel\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"mb-3\">\n                <h5>Seleccionar elementos para la tabla</h5>\n                <Select\n                  value={selectedOption}\n                  onChange={this.handleChange}\n                  options={options}\n                  isMulti\n                  placeholder=\"Seleccionar\"\n                />\n              </div>\n              <h5>Filtrar elementos</h5>\n              <Row className=\"mb-3\">\n                {selectedOption &&\n                  selectedOption.map(({ label, value }) => {\n                    return (\n                      <Col>\n                        <div>\n                          <Label for=\"color\">{label}</Label>\n                          <Input\n                            type=\"select\"\n                            name={value}\n                            id={value}\n                            onChange={this.onChange}\n                          >\n                            <option></option>\n                            {globalArray[value].map((item) => (\n                              <option>{item}</option>\n                            ))}\n                          </Input>\n                        </div>\n                      </Col>\n                    );\n                  })}\n              </Row>\n              <Card>\n                <CardBody>\n                  <Table className=\"no-wrap v-middle\" responsive id=\"emp\">\n                    <thead>\n                      <tr className=\"border-0\">\n                        {selectedOption &&\n                          selectedOption.map(({ value, label }) => {\n                            return <th className=\"border-0\">{label}</th>;\n                          })}\n                        {this.state.qrcode && (\n                          <th className=\"border-0\">QR Code</th>\n                        )}\n                      </tr>\n                    </thead>\n\n                    {newFilter &&\n                      newFilter.map((item, index) => {\n                        const link = \"http://192.168.0.4:3000\" + item._id;\n                        return (\n                          <tbody key={index}>\n                            <tr>\n                              {selectedOption &&\n                                selectedOption.map(\n                                  ({ value, label }, index) => {\n                                    return item[label] === \"fecha\" ? (\n                                      <td key={index}>\n                                        {moment(item[value]).format(\"l LTS\")}\n                                      </td>\n                                    ) : (\n                                      <td key={index}>{item[value]}</td>\n                                    );\n                                  }\n                                )}\n                              {this.state.qrcode && (\n                                <td>\n                                  <QRCode value={link} />\n                                </td>\n                              )}\n                            </tr>\n                          </tbody>\n                        );\n                      })}\n                  </Table>\n                </CardBody>\n              </Card>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n    user: state.auth.user,\n  };\n};\n\nexport default connect(mapStateToProps, { getTarjetas })(MisTarjetasFiltro);\n"]},"metadata":{},"sourceType":"module"}