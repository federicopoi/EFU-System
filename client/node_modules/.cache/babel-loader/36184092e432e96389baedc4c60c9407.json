{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/projecto-tpm/client/src/auth-components/login/loginpage.jsx\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../store/actions/authActions\";\nimport { clearErrors } from \"../../store/actions/errorActions\";\nimport { Alert, Label, Input, Form, FormGroup, Button, Col } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nexport class LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      }; //Attempt to login\n\n      this.props.login(user);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for login error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Administrador de tarjetas\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      onChange: this.onChange,\n      placeholder: \"myemail@email.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"examplePassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.onChange,\n      id: \"examplePassword\",\n      placeholder: \"********\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }))), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Submit\"))))));\n  }\n\n}\nLoginPage.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  login,\n  clearErrors\n})(LoginPage));","map":{"version":3,"sources":["/Users/fedepoi/projecto-tpm/client/src/auth-components/login/loginpage.jsx"],"names":["React","Component","Container","connect","PropTypes","login","clearErrors","Alert","Label","Input","Form","FormGroup","Button","Col","withRouter","LoginPage","state","email","password","msg","onChange","e","setState","target","name","value","onSubmit","preventDefault","user","props","componentDidUpdate","prevProps","error","isAuthenticated","id","history","push","render","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../store/actions/authActions\";\nimport { clearErrors } from \"../../store/actions/errorActions\";\nimport { Alert, Label, Input, Form, FormGroup, Button, Col } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nexport class LoginPage extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: null,\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //Check for login error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg,\n        });\n      } else {\n        this.setState({\n          msg: null,\n        });\n      }\n    }\n    if (isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password,\n    };\n    //Attempt to login\n    this.props.login(user);\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container className=\"App\">\n              <h2 className=\"mb-3\">Administrador de tarjetas</h2>\n              <Form className=\"form\" onSubmit={this.onSubmit}>\n                <Col>\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"exampleEmail\"\n                      onChange={this.onChange}\n                      placeholder=\"myemail@email.com\"\n                    />\n                  </FormGroup>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"examplePassword\">Contraseña</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={this.onChange}\n                      id=\"examplePassword\"\n                      placeholder=\"********\"\n                    />\n                  </FormGroup>\n                </Col>\n                {this.state.msg ? (\n                  <Alert color=\"danger\">{this.state.msg}</Alert>\n                ) : null}\n                <Button>Submit</Button>\n              </Form>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\nexport default withRouter(\n  connect(mapStateToProps, { login, clearErrors })(LoginPage)\n);\n"]},"metadata":{},"sourceType":"module"}