{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/plasticos-boulevares-tpm/client/src/components/a\\xF1adirtarjeta/A\\xF1adirTarjeta.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col, Alert } from \"reactstrap\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../store/actions/camposActions\";\nimport { connect } from \"react-redux\";\nimport RIModal from \"./RIModal\";\nimport { Redirect } from \"react-router-dom\";\nimport { agregarTarjeta, agregarTarjetaAmarilla } from \"../../store/actions/tarjetaActions\";\n\nclass AÃ±adirTarjeta extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numero: \"\",\n      descripcion: \"\",\n      color: \"\",\n      detecto: \"\",\n      prioridad: \"\",\n      familia: \"\",\n      maquina: \"\",\n      parteMaquina: \"\",\n      idMaquina: \"\",\n      equipo: \"\",\n      riesgoInicial: \"\",\n      tipodeRiesgo: \"\",\n      sugerencia: \"false\",\n      sustoExperimentado: false,\n      sustoObservado: false,\n      impactoAmbiente: false,\n      msg: null\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangeColor = e => {\n      const numeroTarjeta = this.props.tarjetas.tarjetas.filter(({\n        color\n      }) => color === e.target.value);\n      console.log(numeroTarjeta.length);\n      this.setState({\n        [e.target.name]: e.target.value,\n        numero: numeroTarjeta.length + 1\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        numero,\n        descripcion,\n        color,\n        detecto,\n        prioridad,\n        maquina,\n        parteMaquina,\n        familia,\n        equipo,\n        sustoExperimentado,\n        sustoObservado,\n        impactoAmbiente,\n        sugerencia,\n        tipodeRiesgo,\n        riesgoInicial\n      } = this.state; // Crear Tarjeta\n\n      const nuevaTarjeta = {\n        numero,\n        descripcion,\n        color,\n        detecto,\n        prioridad,\n        familia,\n        maquina,\n        parteMaquina,\n        equipo,\n        riesgoInicial,\n        tipodeRiesgo\n      }; // Crear Tarjeta Amarilla\n\n      const nuevaTarjetaAmarilla = {\n        numero,\n        descripcion,\n        color,\n        detecto,\n        prioridad,\n        maquina,\n        parteMaquina,\n        equipo,\n        sustoExperimentado,\n        sustoObservado,\n        impactoAmbiente,\n        familia,\n        sugerencia,\n        tipodeRiesgo,\n        riesgoInicial\n      };\n      this.state.color !== \"Amarilla\" ? this.props.agregarTarjeta(nuevaTarjeta) : this.props.agregarTarjetaAmarilla(nuevaTarjetaAmarilla);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTarjetas();\n    this.props.getCampos();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      // Check login error\n      console.log(error.msg.msg);\n\n      if (error.id === \"AGREGAR_TARJETA_ERROR\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.props.tarjetas.agregarsuccess) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/tarjetas/`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const {\n      campos\n    } = this.props.campos;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"A\\xF1adir nueva tarjeta\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"mt-4\",\n      onSubmit: this.onSubmit,\n      id: \"agregartarjeta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"Color *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"color\",\n      id: \"color\",\n      onChange: this.onChangeColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, \"Roja\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"Azul\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, \"Verde\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, \"Amarilla\"))), this.state.numero !== \"\" && /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Numero *\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, this.state.numero)))), this.state.color === \"Amarilla\" && /*#__PURE__*/React.createElement(Row, {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"sustoExperimentado\",\n      name: \"sustoExperimentado\",\n      onChange: e => {\n        this.onChange({\n          target: {\n            name: e.target.name,\n            value: e.target.checked\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }\n    }), \"Reporte de Incidente \\\"Susto\\\" experimentado\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"sustoObservado\",\n      name: \"sustoObservado\",\n      onChange: e => {\n        this.onChange({\n          target: {\n            name: e.target.name,\n            value: e.target.checked\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 27\n      }\n    }), \"Reporte de Incidente \\\"Susto\\\" observado\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"impactoAmbiente\",\n      name: \"impactoAmbiente\",\n      onChange: e => {\n        this.onChange({\n          target: {\n            name: e.target.name,\n            value: e.target.checked\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 27\n      }\n    }), \"El incidente puede afectar al Medio Ambiente\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"maquina\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, \"Maquina / Instalaci\\xF3n *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"maquina\",\n      id: \"maquina\",\n      onChange: e => {\n        const index = e.target.selectedIndex;\n        const el = e.target.childNodes[index];\n        const option = el.getAttribute(\"_id\");\n        this.setState({\n          idMaquina: option,\n          maquina: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"maquina\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 33\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 27\n      }\n    }, \"Riesgo Inicial *\")), /*#__PURE__*/React.createElement(RIModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"riesgoInicial\",\n      id: \"riesgoInicial\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"riesgoInicial\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 33\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 23\n      }\n    }, \"Detect\\xF3 *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"detecto\",\n      id: \"detecto\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, this.state.color !== \"Amarilla\" ? /*#__PURE__*/React.createElement(Label, {\n      for: \"descripcion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, \"Descripci\\xF3n *\") : /*#__PURE__*/React.createElement(Label, {\n      for: \"descripcion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, \"Descripcion del incidente \\\"SUSTO\\\" experimentado u observado *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"descripcion\",\n      id: \"descripcion\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"maquina\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 23\n      }\n    }, \"Parte de maquina *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"parteMaquina\",\n      id: \"parteMaquina\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value,\n      _id\n    }) => {\n      return _id === this.state.idMaquina;\n    }).map(({\n      parteMaquina\n    }) => {\n      return parteMaquina.map(item => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 40\n          }\n        }, item);\n      });\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"equipo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 23\n      }\n    }, \"Equipo Autonomo*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"equipo\",\n      id: \"equipo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"equipo\";\n    }).map(({\n      name,\n      value\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 38\n        }\n      }, value);\n    }))), this.state.color !== \"Amarilla\" && /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"familia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 25\n      }\n    }, \"Familia de anomalias *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"familia\",\n      id: \"familia\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 27\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 27\n      }\n    }, \"1 - Peque\\xF1as Deficiencia\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 27\n      }\n    }, \"2 - Condiciones basicas\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 27\n      }\n    }, \"3 - Puntos inaccesibles\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 27\n      }\n    }, \"4 - Focos de contaminacion\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 27\n      }\n    }, \"5 - Defecto de Calidad\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 27\n      }\n    }, \"6 - Elementos Innecesarios\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 27\n      }\n    }, \"7 - Lugares Inseguros\"))), this.state.color === \"Amarilla\" && /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"familia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    }, \"Familia de anomalias *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"familia\",\n      id: \"familia\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 27\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 27\n      }\n    }, \"8 - Actos Inseguros\"))), this.state.color === \"Amarilla\" && /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    }, \"\\xBFQue sugiere para que no se repita?*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"sugerencia\",\n      id: \"sugerencia\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    })), this.state.color !== \"Amarilla\" ? /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 25\n      }\n    }, \"Tipo de R / FC / LDA*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tipodeRiesgo\",\n      id: \"tipodeRiesgo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 27\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"tipo\";\n    }).map(({\n      name,\n      value\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 40\n        }\n      }, value);\n    }))) : /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 25\n      }\n    }, \"Tipo de R / FC / LDA *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tipodeRiesgo\",\n      id: \"tipodeRiesgo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 27\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"tipo\";\n    }).map(({\n      name,\n      value\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 40\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"prioridad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 23\n      }\n    }, \"Prioridad *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"prioridad\",\n      id: \"prioridad\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 25\n      }\n    }, \"Alta\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 25\n      }\n    }, \"Media\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 25\n      }\n    }, \"Baja\"))))), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 19\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 21\n      }\n    }, \"Subir\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas,\n    campos: state.campos,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  agregarTarjeta,\n  agregarTarjetaAmarilla,\n  getTarjetas,\n  getCampos\n})(AÃ±adirTarjeta);","map":{"version":3,"sources":["/Users/fedepoi/plasticos-boulevares-tpm/client/src/components/aÃ±adirtarjeta/AÃ±adirTarjeta.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Container","Row","Col","Alert","getTarjetas","getCampos","connect","RIModal","Redirect","agregarTarjeta","agregarTarjetaAmarilla","AÃ±adirTarjeta","state","numero","descripcion","color","detecto","prioridad","familia","maquina","parteMaquina","idMaquina","equipo","riesgoInicial","tipodeRiesgo","sugerencia","sustoExperimentado","sustoObservado","impactoAmbiente","msg","onChange","e","setState","target","name","value","onChangeColor","numeroTarjeta","props","tarjetas","filter","console","log","length","onSubmit","preventDefault","nuevaTarjeta","nuevaTarjetaAmarilla","componentDidMount","componentDidUpdate","prevProps","error","id","render","agregarsuccess","campos","checked","index","selectedIndex","el","childNodes","option","getAttribute","map","_id","item","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n  Row,\n  Col,\n  Alert,\n} from \"reactstrap\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../store/actions/camposActions\";\nimport { connect } from \"react-redux\";\nimport RIModal from \"./RIModal\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  agregarTarjeta,\n  agregarTarjetaAmarilla,\n} from \"../../store/actions/tarjetaActions\";\n\nclass AÃ±adirTarjeta extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n    this.props.getCampos();\n  }\n  state = {\n    numero: \"\",\n    descripcion: \"\",\n    color: \"\",\n    detecto: \"\",\n    prioridad: \"\",\n    familia: \"\",\n    maquina: \"\",\n    parteMaquina: \"\",\n    idMaquina: \"\",\n    equipo: \"\",\n    riesgoInicial: \"\",\n    tipodeRiesgo: \"\",\n    sugerencia: \"false\",\n    sustoExperimentado: false,\n    sustoObservado: false,\n    impactoAmbiente: false,\n    msg: null,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      // Check login error\n      console.log(error.msg.msg);\n      if (error.id === \"AGREGAR_TARJETA_ERROR\") {\n        this.setState({\n          msg: error.msg.msg,\n        });\n      } else {\n        this.setState({\n          msg: null,\n        });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onChangeColor = (e) => {\n    const numeroTarjeta = this.props.tarjetas.tarjetas.filter(\n      ({ color }) => color === e.target.value\n    );\n    console.log(numeroTarjeta.length);\n    this.setState({\n      [e.target.name]: e.target.value,\n      numero: numeroTarjeta.length + 1,\n    });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      numero,\n      descripcion,\n      color,\n      detecto,\n      prioridad,\n      maquina,\n      parteMaquina,\n      familia,\n      equipo,\n      sustoExperimentado,\n      sustoObservado,\n      impactoAmbiente,\n      sugerencia,\n      tipodeRiesgo,\n      riesgoInicial,\n    } = this.state;\n\n    // Crear Tarjeta\n    const nuevaTarjeta = {\n      numero,\n      descripcion,\n      color,\n      detecto,\n      prioridad,\n      familia,\n      maquina,\n      parteMaquina,\n      equipo,\n      riesgoInicial,\n      tipodeRiesgo,\n    };\n\n    // Crear Tarjeta Amarilla\n    const nuevaTarjetaAmarilla = {\n      numero,\n      descripcion,\n      color,\n      detecto,\n      prioridad,\n      maquina,\n      parteMaquina,\n      equipo,\n      sustoExperimentado,\n      sustoObservado,\n      impactoAmbiente,\n      familia,\n      sugerencia,\n      tipodeRiesgo,\n      riesgoInicial,\n    };\n    this.state.color !== \"Amarilla\"\n      ? this.props.agregarTarjeta(nuevaTarjeta)\n      : this.props.agregarTarjetaAmarilla(nuevaTarjetaAmarilla);\n  };\n  render() {\n    if (this.props.tarjetas.agregarsuccess) {\n      return <Redirect to={`/tarjetas/`} />;\n    }\n\n    const { campos } = this.props.campos;\n    console.log(this.state);\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container>\n              <h2 className=\"my-2\">AÃ±adir nueva tarjeta</h2>\n\n              <Form\n                className=\"mt-4\"\n                onSubmit={this.onSubmit}\n                id=\"agregartarjeta\"\n              >\n                <FormGroup>\n                  <Row>\n                    <Col lg={8}>\n                      <Label for=\"color\">Color *</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"color\"\n                        id=\"color\"\n                        onChange={this.onChangeColor}\n                      >\n                        <option>Seleccionar</option>\n                        <option>Roja</option>\n                        <option>Azul</option>\n                        <option>Verde</option>\n                        <option>Amarilla</option>\n                      </Input>\n                    </Col>\n                    {this.state.numero !== \"\" && (\n                      <Col lg={4}>\n                        <Label for=\"color\">Numero *</Label>\n                        <p>{this.state.numero}</p>\n                      </Col>\n                    )}\n                  </Row>\n                </FormGroup>\n\n                {this.state.color === \"Amarilla\" && (\n                  <Row className=\"my-4\">\n                    <Col>\n                      <FormGroup check>\n                        <Label check>\n                          <Input\n                            type=\"checkbox\"\n                            id=\"sustoExperimentado\"\n                            name=\"sustoExperimentado\"\n                            onChange={(e) => {\n                              this.onChange({\n                                target: {\n                                  name: e.target.name,\n                                  value: e.target.checked,\n                                },\n                              });\n                            }}\n                          />\n                          Reporte de Incidente \"Susto\" experimentado\n                        </Label>\n                      </FormGroup>\n                    </Col>\n                    <Col>\n                      <FormGroup check>\n                        <Label check>\n                          <Input\n                            type=\"checkbox\"\n                            id=\"sustoObservado\"\n                            name=\"sustoObservado\"\n                            onChange={(e) => {\n                              this.onChange({\n                                target: {\n                                  name: e.target.name,\n                                  value: e.target.checked,\n                                },\n                              });\n                            }}\n                          />\n                          Reporte de Incidente \"Susto\" observado\n                        </Label>\n                      </FormGroup>\n                    </Col>\n                    <Col>\n                      <FormGroup check>\n                        <Label check>\n                          <Input\n                            type=\"checkbox\"\n                            id=\"impactoAmbiente\"\n                            name=\"impactoAmbiente\"\n                            onChange={(e) => {\n                              this.onChange({\n                                target: {\n                                  name: e.target.name,\n                                  value: e.target.checked,\n                                },\n                              });\n                            }}\n                          />\n                          El incidente puede afectar al Medio Ambiente\n                        </Label>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                )}\n\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <Label for=\"maquina\">Maquina / InstalaciÃ³n *</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"maquina\"\n                        id=\"maquina\"\n                        onChange={(e) => {\n                          const index = e.target.selectedIndex;\n                          const el = e.target.childNodes[index];\n                          const option = el.getAttribute(\"_id\");\n                          this.setState({\n                            idMaquina: option,\n                            maquina: e.target.value,\n                          });\n                        }}\n                      >\n                        <option>Seleccionar</option>\n                        {campos &&\n                          campos\n                            .filter(({ name, value }) => {\n                              return name === \"maquina\";\n                            })\n                            .map(({ name, value, _id }, index) => {\n                              return (\n                                <option key={index} _id={_id}>\n                                  {value}\n                                </option>\n                              );\n                            })}\n                      </Input>\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Row>\n                        <Col>\n                          <Label for=\"detecto\">Riesgo Inicial *</Label>\n                        </Col>\n                        <RIModal></RIModal>\n                      </Row>\n\n                      <Input\n                        type=\"select\"\n                        name=\"riesgoInicial\"\n                        id=\"riesgoInicial\"\n                        onChange={this.onChange}\n                      >\n                        <option>Seleccionar</option>\n                        {campos &&\n                          campos\n                            .filter(({ name, value }) => {\n                              return name === \"riesgoInicial\";\n                            })\n                            .map(({ name, value, _id }, index) => {\n                              return (\n                                <option key={index} _id={_id}>\n                                  {value}\n                                </option>\n                              );\n                            })}\n                      </Input>\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"detecto\">DetectÃ³ *</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"detecto\"\n                        id=\"detecto\"\n                        onChange={this.onChange}\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      {this.state.color !== \"Amarilla\" ? (\n                        <Label for=\"descripcion\">DescripciÃ³n *</Label>\n                      ) : (\n                        <Label for=\"descripcion\">\n                          Descripcion del incidente \"SUSTO\" experimentado u\n                          observado *\n                        </Label>\n                      )}\n                      <Input\n                        type=\"textarea\"\n                        name=\"descripcion\"\n                        id=\"descripcion\"\n                        onChange={this.onChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col>\n                    <FormGroup>\n                      <Label for=\"maquina\">Parte de maquina *</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"parteMaquina\"\n                        id=\"parteMaquina\"\n                        onChange={this.onChange}\n                      >\n                        <option>Seleccionar</option>\n                        {campos &&\n                          campos\n                            .filter(({ name, value, _id }) => {\n                              return _id === this.state.idMaquina;\n                            })\n                            .map(({ parteMaquina }) => {\n                              return parteMaquina.map((item) => {\n                                return <option>{item}</option>;\n                              });\n                            })}\n                      </Input>\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"equipo\">Equipo Autonomo*</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"equipo\"\n                        id=\"equipo\"\n                        onChange={this.onChange}\n                      >\n                        <option>Seleccionar</option>\n                        {campos &&\n                          campos\n                            .filter(({ name, value }) => {\n                              return name === \"equipo\";\n                            })\n                            .map(({ name, value }, index) => {\n                              return <option key={index}>{value}</option>;\n                            })}\n                      </Input>\n                    </FormGroup>\n\n                    {this.state.color !== \"Amarilla\" && (\n                      <FormGroup>\n                        <Label for=\"familia\">Familia de anomalias *</Label>\n                        <Input\n                          type=\"select\"\n                          name=\"familia\"\n                          id=\"familia\"\n                          onChange={this.onChange}\n                        >\n                          <option>Seleccionar</option>\n                          <option>1 - PequeÃ±as Deficiencia</option>\n                          <option>2 - Condiciones basicas</option>\n                          <option>3 - Puntos inaccesibles</option>\n                          <option>4 - Focos de contaminacion</option>\n                          <option>5 - Defecto de Calidad</option>\n                          <option>6 - Elementos Innecesarios</option>\n                          <option>7 - Lugares Inseguros</option>\n                        </Input>\n                      </FormGroup>\n                    )}\n                    {this.state.color === \"Amarilla\" && (\n                      <FormGroup>\n                        <Label for=\"familia\">Familia de anomalias *</Label>\n                        <Input\n                          type=\"select\"\n                          name=\"familia\"\n                          id=\"familia\"\n                          onChange={this.onChange}\n                        >\n                          <option>Seleccionar</option>\n                          <option>8 - Actos Inseguros</option>\n                        </Input>\n                      </FormGroup>\n                    )}\n                    {this.state.color === \"Amarilla\" && (\n                      <FormGroup>\n                        <Label for=\"detecto\">\n                          Â¿Que sugiere para que no se repita?*\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          name=\"sugerencia\"\n                          id=\"sugerencia\"\n                          onChange={this.onChange}\n                        />\n                      </FormGroup>\n                    )}\n\n                    {this.state.color !== \"Amarilla\" ? (\n                      <FormGroup>\n                        <Label for=\"detecto\">Tipo de R / FC / LDA*</Label>\n                        <Input\n                          type=\"select\"\n                          name=\"tipodeRiesgo\"\n                          id=\"tipodeRiesgo\"\n                          onChange={this.onChange}\n                        >\n                          <option>Seleccionar</option>\n                          {campos &&\n                            campos\n                              .filter(({ name, value }) => {\n                                return name === \"tipo\";\n                              })\n                              .map(({ name, value }, index) => {\n                                return <option key={index}>{value}</option>;\n                              })}\n                        </Input>\n                      </FormGroup>\n                    ) : (\n                      <FormGroup>\n                        <Label for=\"detecto\">Tipo de R / FC / LDA *</Label>\n                        <Input\n                          type=\"select\"\n                          name=\"tipodeRiesgo\"\n                          id=\"tipodeRiesgo\"\n                          onChange={this.onChange}\n                        >\n                          <option>Seleccionar</option>\n                          {campos &&\n                            campos\n                              .filter(({ name, value }) => {\n                                return name === \"tipo\";\n                              })\n                              .map(({ name, value }, index) => {\n                                return <option key={index}>{value}</option>;\n                              })}\n                        </Input>\n                      </FormGroup>\n                    )}\n                    <FormGroup>\n                      <Label for=\"prioridad\">Prioridad *</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"prioridad\"\n                        id=\"prioridad\"\n                        onChange={this.onChange}\n                      >\n                        <option>Seleccionar</option>\n                        <option>Alta</option>\n                        <option>Media</option>\n                        <option>Baja</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n\n                {this.state.msg ? (\n                  <Alert color=\"danger\" className=\"mt-3\">\n                    {this.state.msg}\n                  </Alert>\n                ) : null}\n\n                <Row className=\"mt-3\">\n                  <Col>\n                    <Button>Subir</Button>\n                  </Col>\n                </Row>\n              </Form>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n    campos: state.campos,\n    error: state.error,\n  };\n};\nexport default connect(mapStateToProps, {\n  agregarTarjeta,\n  agregarTarjetaAmarilla,\n  getTarjetas,\n  getCampos,\n})(AÃ±adirTarjeta);\n"]},"metadata":{},"sourceType":"module"}