{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/plasticos-boulevares-tpm/client/src/components/a\\xF1adirtarjeta/A\\xF1adirTarjeta.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass AñadirTarjeta extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        formValues\n      } = this.state;\n      formValues[target.name] = target.value;\n      this.setState({\n        formValues\n      });\n      this.handleValidation(target);\n    };\n\n    this.handleValidation = target => {\n      const {\n        name,\n        value\n      } = target;\n      const fieldValidationErrors = this.state.formErrors;\n      const validity = this.state.formValidity;\n      const isEmail = name === \"email\";\n      const isPassword = name === \"password\";\n      const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      validity[name] = value.length > 0;\n      fieldValidationErrors[name] = validity[name] ? \"\" : `${name} is required and cannot be empty`;\n\n      if (validity[name]) {\n        if (isEmail) {\n          validity[name] = emailTest.test(value);\n          fieldValidationErrors[name] = validity[name] ? \"\" : `${name} should be a valid email address`;\n        }\n\n        if (isPassword) {\n          validity[name] = value.length >= 3;\n          fieldValidationErrors[name] = validity[name] ? \"\" : `${name} should be 3 characters minimum`;\n        }\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        formValidity: validity\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      const {\n        formValues,\n        formValidity\n      } = this.state;\n\n      if (Object.values(formValidity).every(Boolean)) {\n        alert(\"Form is validated! Submitting the form...\");\n        this.setState({\n          isSubmitting: false\n        });\n      } else {\n        for (let key in formValues) {\n          let target = {\n            name: key,\n            value: formValues[key]\n          };\n          this.handleValidation(target);\n        }\n\n        this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    this.state = {\n      formValues: {\n        email: \"\",\n        password: \"\"\n      },\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      formValidity: {\n        email: false,\n        password: false\n      },\n      isSubmitting: false\n    };\n  }\n\n  render() {\n    const {\n      formValues,\n      formErrors,\n      isSubmitting\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Login Form\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      className: `form-control ${formErrors.email ? \"is-invalid\" : \"\"}`,\n      placeholder: \"Enter email\",\n      onChange: this.handleChange,\n      value: formValues.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: `form-control ${formErrors.password ? \"is-invalid\" : \"\"}`,\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      value: formValues.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, formErrors.password)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, isSubmitting ? \"Please wait...\" : \"Submit\")))));\n  }\n\n}\n\nexport default AñadirTarjeta;","map":{"version":3,"sources":["/Users/fedepoi/plasticos-boulevares-tpm/client/src/components/añadirtarjeta/AñadirTarjeta.jsx"],"names":["React","ReactDOM","AñadirTarjeta","Component","constructor","props","handleChange","target","formValues","state","name","value","setState","handleValidation","fieldValidationErrors","formErrors","validity","formValidity","isEmail","isPassword","emailTest","length","test","handleSubmit","event","preventDefault","isSubmitting","Object","values","every","Boolean","alert","key","email","password","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass AñadirTarjeta extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        email: \"\",\n        password: \"\",\n      },\n      formErrors: {\n        email: \"\",\n        password: \"\",\n      },\n      formValidity: {\n        email: false,\n        password: false,\n      },\n      isSubmitting: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { formValues } = this.state;\n    formValues[target.name] = target.value;\n    this.setState({ formValues });\n    this.handleValidation(target);\n  };\n\n  handleValidation = (target) => {\n    const { name, value } = target;\n    const fieldValidationErrors = this.state.formErrors;\n    const validity = this.state.formValidity;\n    const isEmail = name === \"email\";\n    const isPassword = name === \"password\";\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    validity[name] = value.length > 0;\n    fieldValidationErrors[name] = validity[name]\n      ? \"\"\n      : `${name} is required and cannot be empty`;\n\n    if (validity[name]) {\n      if (isEmail) {\n        validity[name] = emailTest.test(value);\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be a valid email address`;\n      }\n      if (isPassword) {\n        validity[name] = value.length >= 3;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be 3 characters minimum`;\n      }\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      formValidity: validity,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ isSubmitting: true });\n    const { formValues, formValidity } = this.state;\n    if (Object.values(formValidity).every(Boolean)) {\n      alert(\"Form is validated! Submitting the form...\");\n      this.setState({ isSubmitting: false });\n    } else {\n      for (let key in formValues) {\n        let target = {\n          name: key,\n          value: formValues[key],\n        };\n        this.handleValidation(target);\n      }\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  render() {\n    const { formValues, formErrors, isSubmitting } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          <div className=\"col-lg-12 text-center\">\n            <h1 className=\"mt-5\">Login Form</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label>Email address</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  className={`form-control ${\n                    formErrors.email ? \"is-invalid\" : \"\"\n                  }`}\n                  placeholder=\"Enter email\"\n                  onChange={this.handleChange}\n                  value={formValues.email}\n                />\n                <div className=\"invalid-feedback\">{formErrors.email}</div>\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={`form-control ${\n                    formErrors.password ? \"is-invalid\" : \"\"\n                  }`}\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                  value={formValues.password}\n                />\n                <div className=\"invalid-feedback\">{formErrors.password}</div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? \"Please wait...\" : \"Submit\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AñadirTarjeta;\n"]},"metadata":{},"sourceType":"module"}