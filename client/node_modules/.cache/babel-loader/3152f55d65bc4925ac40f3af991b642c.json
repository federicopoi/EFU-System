{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/admin/camposparteMaquinaModal.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, Label, Input, FormGroup, NavLink, Alert, Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { parteMaquina } from \"../../store/actions/camposActions\";\nimport { getCampos } from \"../../store/actions/camposActions\";\n\nclass CamposParteMaquinaModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      maquina: \"\",\n      name: \"\"\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        _id,\n        name\n      } = this.state; // Crear Campo\n\n      const nuevoCampos = {\n        _id,\n        name\n      };\n      e.preventDefault();\n      this.props.parteMaquina(nuevoCampos);\n\n      if (this.state.value === \"\") {\n        return null;\n      } else {\n        return this.toggle();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n\n  render() {\n    const {\n      campos\n    } = this.props.campos;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"ml-3\",\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Agregar\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Seleccionar maquina\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"maquina\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Maquina / Instalaci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"maquina\",\n      id: \"maquina\",\n      onChange: e => {\n        this.setState({\n          _id: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name\n    }) => {\n      return name === \"maquina\";\n    }).map(({\n      name,\n      value,\n      _id\n    }) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 30\n        }\n      }, value);\n    })))), /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Agregar campo parte de maquina\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Parte de maquina\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Nombre del campo\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      block: true,\n      style: {\n        marginTop: \"2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"Subir\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  campos: state.campos\n});\n\nexport default connect(mapStateToProps, {\n  parteMaquina,\n  getCampos\n})(CamposParteMaquinaModal);","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/admin/camposparteMaquinaModal.jsx"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","Label","Input","FormGroup","NavLink","Alert","Row","Col","connect","parteMaquina","getCampos","CamposParteMaquinaModal","state","modal","maquina","name","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","_id","nuevoCampos","props","componentDidMount","render","campos","filter","map","marginTop","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  FormGroup,\n  NavLink,\n  Alert,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { parteMaquina } from \"../../store/actions/camposActions\";\nimport { getCampos } from \"../../store/actions/camposActions\";\n\nclass CamposParteMaquinaModal extends Component {\n  state = {\n    modal: false,\n    maquina: \"\",\n    name: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { _id, name } = this.state;\n\n    // Crear Campo\n    const nuevoCampos = {\n      _id,\n      name,\n    };\n    e.preventDefault();\n    this.props.parteMaquina(nuevoCampos);\n\n    if (this.state.value === \"\") {\n      return null;\n    } else {\n      return this.toggle();\n    }\n  };\n\n  render() {\n    const { campos } = this.props.campos;\n    return (\n      <div>\n        <Button className=\"ml-3\" onClick={this.toggle} href=\"#\">\n          Agregar\n        </Button>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Seleccionar maquina</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"maquina\">Maquina / Instalación</Label>\n              <Input\n                type=\"select\"\n                name=\"maquina\"\n                id=\"maquina\"\n                onChange={(e) => {\n                  this.setState({\n                    _id: e.target.value,\n                  });\n                }}\n              >\n                <option>Seleccionar</option>\n                {campos &&\n                  campos\n                    .filter(({ name }) => {\n                      return name === \"maquina\";\n                    })\n                    .map(({ name, value, _id }) => {\n                      return <option value={_id}>{value}</option>;\n                    })}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalHeader toggle={this.toggle}>\n            Agregar campo parte de maquina\n          </ModalHeader>\n\n          <ModalBody>\n            <Label for=\"name\">Parte de maquina</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Nombre del campo\"\n              className=\"mb-3\"\n              onChange={this.onChange}\n            />\n            <Form onSubmit={this.onSubmit}>\n              <Button color=\"dark\" block style={{ marginTop: \"2rem\" }}>\n                Subir\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  campos: state.campos,\n});\nexport default connect(mapStateToProps, { parteMaquina, getCampos })(\n  CamposParteMaquinaModal\n);\n"]},"metadata":{},"sourceType":"module"}