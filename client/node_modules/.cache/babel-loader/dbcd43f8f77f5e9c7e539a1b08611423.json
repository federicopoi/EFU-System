{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/plasticos-boulevares-tpm/client/src/components/detalletarjeta/cerrartarjeta/CerrarTarjetaModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { cerrarTarjeta } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, Label, Input, FormGroup, Alert } from \"reactstrap\";\nexport class CerrarTarjetaModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      _id: this.props._id,\n      inicioReparacionDia: \"\",\n      inicioReparacionHora: \"\",\n      finReparacionDia: \"\",\n      finReparacionHora: \"\",\n      responsable: \"\",\n      tiempoEmpleado: \"\",\n      causa: \"\",\n      riesgoFinal: \"\",\n      tareaRealizada: \"\",\n      tipoAccion: \"\",\n      materialUtilizado: \"\",\n      convertida: false,\n      msg: null\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        _id,\n        inicioReparacionDia,\n        inicioReparacionHora,\n        finReparacionDia,\n        finReparacionHora,\n        responsable,\n        tiempoEmpleado,\n        causa,\n        riesgoFinal,\n        tareaRealizada,\n        tipoAccion,\n        materialUtilizado,\n        convertida\n      } = this.state;\n      const horaInicio = inicioReparacionHora.split(\":\");\n      const horaFinal = finReparacionHora.split(\":\");\n      const InicioReparacionHoraFloat = parseFloat(horaInicio[0]);\n      const FinReparacionHoraFloat = parseFloat(horaFinal[0]);\n      const horaFinal1 = FinReparacionHoraFloat - InicioReparacionHoraFloat;\n      const tiemploEmpleadoString = `${horaFinal1}`; // Cerrar Tarjeta\n\n      const tarjetaActualizada = {\n        _id,\n        inicioReparacion: inicioReparacionDia + \" \" + inicioReparacionHora,\n        finReparacion: finReparacionDia + \" \" + finReparacionHora,\n        responsable,\n        tiempoEmpleado: tiemploEmpleadoString,\n        causa,\n        tareaRealizada,\n        tipoAccion,\n        riesgoFinal,\n        materialUtilizado,\n        convertida\n      };\n      this.props.cerrarTarjeta(tarjetaActualizada);\n\n      if (!_id || !inicioReparacionDia || !finReparacionDia || !inicioReparacionHora || !finReparacionHora || !responsable || !tiempoEmpleado || !causa || !riesgoFinal || !tipoAccion || !tareaRealizada || !materialUtilizado) {\n        return null;\n      } else {\n        return this.toggle();\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for login error\n      console.log(error.msg.msg);\n\n      if (error.id === \"CERRAR_TARJETA_ERROR\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n\n  render() {\n    const {\n      campos\n    } = this.props.campos;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.toggle,\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Cerrar Tarjeta\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, \"Cerrar Tarjeta\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Inicio de la Tarea\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"date\",\n      name: \"inicioReparacionDia\",\n      id: \"inicioReparacionDia\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"time\",\n      name: \"inicioReparacionHora\",\n      id: \"inicioReparacionHora\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Fin de la Tarea\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"date\",\n      name: \"finReparacionDia\",\n      id: \"finReparacionDia\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"time\",\n      name: \"finReparacionHora\",\n      id: \"finReparacionHora\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"responsable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, \"Responsable\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      name: \"responsable\",\n      id: \"responsable\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"Riesgo Final\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"riesgoFinal\",\n      id: \"riesgoFinal\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"riesgoFinal\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 27\n        }\n      }, value);\n    })), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Causa de la Anomalia\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      name: \"causa\",\n      id: \"causa\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Tarea Realizada\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      name: \"tareaRealizada\",\n      id: \"tareaRealizada\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"tipoAccion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, \"Tipo de acci\\xF3n a realizar *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tipoAccion\",\n      id: \"tipoAccion\",\n      className: \"mb-2\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, \"Contener\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, \"Reemplazar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, \"Simplificar\")), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \"Material Utilizado\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      name: \"materialUtilizado\",\n      id: \"materialUtilizado\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }), this.props.color !== \"Azul\" && /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"convertida\",\n      name: \"convertida\",\n      onChange: e => {\n        this.onChange({\n          target: {\n            name: e.target.name,\n            value: e.target.checked\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }), \"Tarjeta Convertida\")), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      block: true,\n      style: {\n        marginTop: \"2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"Subir\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  campos: state.campos\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  cerrarTarjeta,\n  getCampos\n})(CerrarTarjetaModal);","map":{"version":3,"sources":["/Users/fedepoi/plasticos-boulevares-tpm/client/src/components/detalletarjeta/cerrartarjeta/CerrarTarjetaModal.jsx"],"names":["React","Component","connect","clearErrors","cerrarTarjeta","getCampos","Button","Modal","ModalHeader","ModalBody","Form","Label","Input","FormGroup","Alert","CerrarTarjetaModal","state","modal","_id","props","inicioReparacionDia","inicioReparacionHora","finReparacionDia","finReparacionHora","responsable","tiempoEmpleado","causa","riesgoFinal","tareaRealizada","tipoAccion","materialUtilizado","convertida","msg","onChange","e","setState","target","name","value","toggle","onSubmit","preventDefault","horaInicio","split","horaFinal","InicioReparacionHoraFloat","parseFloat","FinReparacionHoraFloat","horaFinal1","tiemploEmpleadoString","tarjetaActualizada","inicioReparacion","finReparacion","componentDidUpdate","prevProps","error","console","log","id","componentDidMount","render","campos","cursor","filter","map","index","color","checked","marginTop","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { cerrarTarjeta } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  FormGroup,\n  Alert,\n} from \"reactstrap\";\nexport class CerrarTarjetaModal extends Component {\n  state = {\n    modal: false,\n    _id: this.props._id,\n    inicioReparacionDia: \"\",\n    inicioReparacionHora: \"\",\n    finReparacionDia: \"\",\n    finReparacionHora: \"\",\n    responsable: \"\",\n    tiempoEmpleado: \"\",\n    causa: \"\",\n    riesgoFinal: \"\",\n    tareaRealizada: \"\",\n    tipoAccion: \"\",\n    materialUtilizado: \"\",\n    convertida: false,\n    msg: null,\n  };\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //Check for login error\n      console.log(error.msg.msg);\n      if (error.id === \"CERRAR_TARJETA_ERROR\") {\n        this.setState({\n          msg: error.msg.msg,\n        });\n      } else {\n        this.setState({\n          msg: null,\n        });\n      }\n    }\n  }\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      _id,\n      inicioReparacionDia,\n      inicioReparacionHora,\n      finReparacionDia,\n      finReparacionHora,\n      responsable,\n      tiempoEmpleado,\n      causa,\n      riesgoFinal,\n      tareaRealizada,\n      tipoAccion,\n      materialUtilizado,\n      convertida,\n    } = this.state;\n\n    const horaInicio = inicioReparacionHora.split(\":\");\n    const horaFinal = finReparacionHora.split(\":\");\n\n    const InicioReparacionHoraFloat = parseFloat(horaInicio[0]);\n    const FinReparacionHoraFloat = parseFloat(horaFinal[0]);\n\n    const horaFinal1 = FinReparacionHoraFloat - InicioReparacionHoraFloat;\n\n    const tiemploEmpleadoString = `${horaFinal1}`;\n\n    // Cerrar Tarjeta\n    const tarjetaActualizada = {\n      _id,\n      inicioReparacion: inicioReparacionDia + \" \" + inicioReparacionHora,\n      finReparacion: finReparacionDia + \" \" + finReparacionHora,\n      responsable,\n      tiempoEmpleado: tiemploEmpleadoString,\n      causa,\n      tareaRealizada,\n      tipoAccion,\n      riesgoFinal,\n      materialUtilizado,\n      convertida,\n    };\n\n    this.props.cerrarTarjeta(tarjetaActualizada);\n\n    if (\n      !_id ||\n      !inicioReparacionDia ||\n      !finReparacionDia ||\n      !inicioReparacionHora ||\n      !finReparacionHora ||\n      !responsable ||\n      !tiempoEmpleado ||\n      !causa ||\n      !riesgoFinal ||\n      !tipoAccion ||\n      !tareaRealizada ||\n      !materialUtilizado\n    ) {\n      return null;\n    } else {\n      return this.toggle();\n    }\n  };\n  componentDidMount() {\n    this.props.getCampos();\n  }\n  render() {\n    const { campos } = this.props.campos;\n\n    return (\n      <div>\n        <p onClick={this.toggle} style={{ cursor: \"pointer\" }} className=\"my-3\">\n          Cerrar Tarjeta\n        </p>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Cerrar Tarjeta</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"updaters\">Inicio de la Tarea</Label>\n                <Input\n                  onChange={this.onChange}\n                  type=\"date\"\n                  name=\"inicioReparacionDia\"\n                  id=\"inicioReparacionDia\"\n                  className=\"mb-2\"\n                ></Input>\n                <Input\n                  onChange={this.onChange}\n                  type=\"time\"\n                  name=\"inicioReparacionHora\"\n                  id=\"inicioReparacionHora\"\n                  className=\"mb-2\"\n                ></Input>\n\n                <Label for=\"updaters\">Fin de la Tarea</Label>\n                <Input\n                  onChange={this.onChange}\n                  type=\"date\"\n                  name=\"finReparacionDia\"\n                  id=\"finReparacionDia\"\n                  className=\"mb-2\"\n                ></Input>\n                <Input\n                  onChange={this.onChange}\n                  type=\"time\"\n                  name=\"finReparacionHora\"\n                  id=\"finReparacionHora\"\n                  className=\"mb-2\"\n                ></Input>\n\n                <Label for=\"responsable\">Responsable</Label>\n                <Input\n                  onChange={this.onChange}\n                  type=\"text\"\n                  name=\"responsable\"\n                  id=\"responsable\"\n                  className=\"mb-2\"\n                ></Input>\n\n                <Label for=\"detecto\">Riesgo Final</Label>\n                <Input\n                  type=\"select\"\n                  name=\"riesgoFinal\"\n                  id=\"riesgoFinal\"\n                  onChange={this.onChange}\n                >\n                  <option>Seleccionar</option>\n                  {campos &&\n                    campos\n                      .filter(({ name, value }) => {\n                        return name === \"riesgoFinal\";\n                      })\n                      .map(({ name, value, _id }, index) => {\n                        return (\n                          <option key={index} _id={_id}>\n                            {value}\n                          </option>\n                        );\n                      })}\n                </Input>\n\n                <Label for=\"updaters\">Causa de la Anomalia</Label>\n                <Input\n                  onChange={this.onChange}\n                  type=\"text\"\n                  name=\"causa\"\n                  id=\"causa\"\n                  className=\"mb-2\"\n                ></Input>\n\n                <Label for=\"updaters\">Tarea Realizada</Label>\n                <Input\n                  onChange={this.onChange}\n                  type=\"text\"\n                  name=\"tareaRealizada\"\n                  id=\"tareaRealizada\"\n                  className=\"mb-2\"\n                ></Input>\n\n                <Label for=\"tipoAccion\">Tipo de acción a realizar *</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tipoAccion\"\n                  id=\"tipoAccion\"\n                  className=\"mb-2\"\n                  onChange={this.onChange}\n                >\n                  <option>Seleccionar</option>\n                  <option>Eliminar</option>\n                  <option>Contener</option>\n                  <option>Reemplazar</option>\n                  <option>Simplificar</option>\n                </Input>\n\n                <Label for=\"updaters\">Material Utilizado</Label>\n                <Input\n                  onChange={this.onChange}\n                  type=\"text\"\n                  name=\"materialUtilizado\"\n                  id=\"materialUtilizado\"\n                  className=\"mb-2\"\n                ></Input>\n\n                {this.props.color !== \"Azul\" && (\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        id=\"convertida\"\n                        name=\"convertida\"\n                        onChange={(e) => {\n                          this.onChange({\n                            target: {\n                              name: e.target.name,\n                              value: e.target.checked,\n                            },\n                          });\n                        }}\n                      />\n                      Tarjeta Convertida\n                    </Label>\n                  </FormGroup>\n                )}\n                {this.state.msg ? (\n                  <Alert color=\"danger\" className=\"mt-3\">\n                    {this.state.msg}\n                  </Alert>\n                ) : null}\n                <Button color=\"dark\" block style={{ marginTop: \"2rem\" }}>\n                  Subir\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  error: state.error,\n  campos: state.campos,\n});\nexport default connect(mapStateToProps, {\n  clearErrors,\n  cerrarTarjeta,\n  getCampos,\n})(CerrarTarjetaModal);\n"]},"metadata":{},"sourceType":"module"}