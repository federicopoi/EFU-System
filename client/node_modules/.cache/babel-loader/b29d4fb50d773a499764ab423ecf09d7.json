{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/dasboard/tablemodal/TableModal.jsx\";\nimport React, { useState } from \"react\";\nimport { Card, CardBody, Table } from \"reactstrap\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport MaterialTable from \"material-table\";\n\nconst TableModal = props => {\n  // const newFechas = props.fechas.unshift(\"Mes\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"\",\n    data: tarjetas,\n    options: {\n      filtering: true,\n      sorting: true,\n      exportButton: true,\n      search: true,\n      pageSize: 10,\n      emptyRowsWhenPaging: true,\n      pageSizeOptions: [10, 20, 100, tarjetas.length],\n      grouping: true\n    },\n    localization: {\n      pagination: {\n        labelDisplayedRows: \"{from}-{to} of {count}\",\n        labelRowsSelect: \"filas\"\n      },\n      toolbar: {\n        nRowsSelected: \"{0} row(s) selected\",\n        searchPlaceholder: \"Buscar\",\n        searchTooltip: \"Buscar\",\n        exportTitle: \"Exportar\",\n        exportAriaLabel: \"Exportar\"\n      },\n      grouping: {\n        placeholder: \"Arrastra los encabezados aquí para agruparlos por\"\n      },\n      header: {\n        actions: \"Acciones\"\n      },\n      body: {\n        emptyDataSourceMessage: \"Sin datos para mostrar\",\n        filterRow: {\n          filterTooltip: \"Filtrar\"\n        }\n      }\n    },\n    columns: [{\n      title: \"N°\",\n      field: \"numero\",\n      render: (value, renderType) => customRender(value, renderType, renderCellData, \"numero\", \"_id\")\n    }, {\n      title: \"Color\",\n      field: \"color\",\n      render: (value, renderType) => customRender(value, renderType, renderCellData2, \"color\")\n    }, {\n      title: \"Equipo Autonomo\",\n      field: \"equipo\"\n    }, {\n      title: \"Prioridad\",\n      field: \"prioridad\"\n    }, {\n      title: \"Fecha apertura\",\n      field: \"fecha\",\n      render: rowData => moment(rowData.fecha).format(\"DD/MM/YYYY LTS\")\n    }, {\n      title: \"Descripción anomalia\",\n      field: \"descripcion\"\n    }, {\n      title: \"Estado actual\",\n      field: \"estado\"\n    }, {\n      title: \"\",\n      render: rowData => /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `/tarjeta/${rowData._id}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        className: \"btn bg-secondary border border-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Ver detalle\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Tabla\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto d-flex no-block align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n    className: \"btn btn-info\",\n    table: \"emp\",\n    filename: \"ReporteTarjetas\",\n    sheet: \"Tarjetas\",\n    buttonText: \"Exportar excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Table, {\n    className: \"no-wrap v-middle\",\n    responsive: true,\n    id: \"emp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Mes\"), props.fechas.map(item => {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }\n    }, item);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Acumuladas (abiertas)\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 26\n      }\n    }, props.tarjetasFiltro1[index]);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Acumuladas (cerradas)\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 26\n      }\n    }, props.tarjetasFiltro2[index]);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Porcentaje (cerradas)\"), props.fechas.map((item, index) => {\n    const porcentaje = props.tarjetasFiltro3[index] / props.tarjetasFiltro1[index] * 100;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 26\n      }\n    }, porcentaje.toString().slice(0, 4), \"%\");\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Por mes abiertas\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 26\n      }\n    }, props.tarjetasmesabiertas[index]);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Por mes cerradas\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 26\n      }\n    }, props.tarjetasmescerradas[index]);\n  })))))));\n};\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/dasboard/tablemodal/TableModal.jsx"],"names":["React","useState","Card","CardBody","Table","ReactHTMLTableToExcel","MaterialTable","TableModal","props","tarjetas","filtering","sorting","exportButton","search","pageSize","emptyRowsWhenPaging","pageSizeOptions","length","grouping","pagination","labelDisplayedRows","labelRowsSelect","toolbar","nRowsSelected","searchPlaceholder","searchTooltip","exportTitle","exportAriaLabel","placeholder","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","title","field","render","value","renderType","customRender","renderCellData","renderCellData2","rowData","moment","fecha","format","pathname","_id","fechas","map","item","index","tarjetasFiltro1","tarjetasFiltro2","porcentaje","tarjetasFiltro3","toString","slice","tarjetasmesabiertas","tarjetasmescerradas"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardBody, Table } from \"reactstrap\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport MaterialTable from \"material-table\";\n\nconst TableModal = (props) => {\n  // const newFechas = props.fechas.unshift(\"Mes\");\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <MaterialTable\n            title=\"\"\n            data={tarjetas}\n            options={{\n              filtering: true,\n              sorting: true,\n              exportButton: true,\n              search: true,\n              pageSize: 10,\n              emptyRowsWhenPaging: true,\n              pageSizeOptions: [10, 20, 100, tarjetas.length],\n              grouping: true,\n            }}\n            localization={{\n              pagination: {\n                labelDisplayedRows: \"{from}-{to} of {count}\",\n                labelRowsSelect: \"filas\",\n              },\n              toolbar: {\n                nRowsSelected: \"{0} row(s) selected\",\n                searchPlaceholder: \"Buscar\",\n                searchTooltip: \"Buscar\",\n                exportTitle: \"Exportar\",\n                exportAriaLabel: \"Exportar\",\n              },\n              grouping: {\n                placeholder:\n                  \"Arrastra los encabezados aquí para agruparlos por\",\n              },\n              header: {\n                actions: \"Acciones\",\n              },\n              body: {\n                emptyDataSourceMessage: \"Sin datos para mostrar\",\n                filterRow: {\n                  filterTooltip: \"Filtrar\",\n                },\n              },\n            }}\n            columns={[\n              {\n                title: \"N°\",\n                field: \"numero\",\n                render: (value, renderType) =>\n                  customRender(\n                    value,\n                    renderType,\n                    renderCellData,\n                    \"numero\",\n                    \"_id\"\n                  ),\n              },\n              {\n                title: \"Color\",\n                field: \"color\",\n                render: (value, renderType) =>\n                  customRender(value, renderType, renderCellData2, \"color\"),\n              },\n              { title: \"Equipo Autonomo\", field: \"equipo\" },\n              { title: \"Prioridad\", field: \"prioridad\" },\n              {\n                title: \"Fecha apertura\",\n                field: \"fecha\",\n                render: (rowData) =>\n                  moment(rowData.fecha).format(\"DD/MM/YYYY LTS\"),\n              },\n              { title: \"Descripción anomalia\", field: \"descripcion\" },\n              {\n                title: \"Estado actual\",\n                field: \"estado\",\n              },\n              {\n                title: \"\",\n                render: (rowData) => (\n                  <Link to={{ pathname: `/tarjeta/${rowData._id}` }}>\n                    <Button\n                      color=\"success\"\n                      className=\"btn bg-secondary border border-secondary\"\n                    >\n                      Ver detalle\n                    </Button>\n                  </Link>\n                ),\n              },\n            ]}\n          />\n          <div className=\"d-flex align-items-center\">\n            <div className=\"\">\n              <h3 className=\"mb-3\">Tabla</h3>\n            </div>\n            <div className=\"ml-auto d-flex no-block align-items-center\">\n              <div className=\"dl\">\n                <ReactHTMLTableToExcel\n                  className=\"btn btn-info\"\n                  table=\"emp\"\n                  filename=\"ReporteTarjetas\"\n                  sheet=\"Tarjetas\"\n                  buttonText=\"Exportar excel\"\n                />\n              </div>\n            </div>\n          </div>\n          <Table className=\"no-wrap v-middle\" responsive id=\"emp\">\n            <thead>\n              <tr className=\"border-0\">\n                <th className=\"border-0\">Mes</th>\n                {props.fechas.map((item) => {\n                  return <th className=\"border-0\">{item}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Acumuladas (abiertas)</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasFiltro1[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Acumuladas (cerradas)</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasFiltro2[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Porcentaje (cerradas)</td>\n                {props.fechas.map((item, index) => {\n                  const porcentaje =\n                    (props.tarjetasFiltro3[index] /\n                      props.tarjetasFiltro1[index]) *\n                    100;\n                  return <td>{porcentaje.toString().slice(0, 4)}%</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Por mes abiertas</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasmesabiertas[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Por mes cerradas</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasmescerradas[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}