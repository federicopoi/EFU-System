{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/projecto-tpm/client/src/components/a\\xF1adirtarjeta/FileUpload.js\";\nimport React, { useState, Fragment } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\n\nconst FileUpload = props => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(props.id);\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n      const {\n        filePath\n      } = res.data;\n      const filename = props.id;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  console.log(props.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Subir Imagen\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Subir imagen\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, props.id)), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"100%\"\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }))) : null))));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/fedepoi/projecto-tpm/client/src/components/a√±adirtarjeta/FileUpload.js"],"names":["React","useState","Fragment","Button","Modal","ModalHeader","ModalBody","ModalFooter","Message","Progress","axios","FileUpload","props","buttonLabel","className","modal","setModal","toggle","file","setFile","filename","setFilename","id","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","filePath","data","fileName","err","response","status","msg","console","log","width"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\n\nconst FileUpload = (props) => {\n  const { buttonLabel, className } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(props.id);\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        },\n      });\n\n      const { filePath } = res.data;\n      const filename = props.id;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n  console.log(props.id);\n  return (\n    <div>\n      <Button onClick={toggle}>Subir Imagen</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Subir imagen</ModalHeader>\n        <ModalBody>\n          <Fragment>\n            {message ? <Message msg={message} /> : null}\n            <form onSubmit={onSubmit}>\n              <div className=\"custom-file mb-4\">\n                <input\n                  type=\"file\"\n                  className=\"custom-file-input\"\n                  id=\"customFile\"\n                  onChange={onChange}\n                />\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                  {props.id}\n                </label>\n              </div>\n\n              <Progress percentage={uploadPercentage} />\n\n              <input\n                type=\"submit\"\n                value=\"Upload\"\n                className=\"btn btn-primary btn-block mt-4\"\n              />\n            </form>\n            {uploadedFile ? (\n              <div className=\"row mt-5\">\n                <div className=\"col-md-6 m-auto\">\n                  <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n                  <img\n                    style={{ width: \"100%\" }}\n                    src={uploadedFile.filePath}\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n            ) : null}\n          </Fragment>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}