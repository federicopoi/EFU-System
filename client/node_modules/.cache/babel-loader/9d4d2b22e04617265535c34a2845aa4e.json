{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/efu-system/client/src/components/detalletarjeta/editartarjeta/EditarTarjetaModalAmarilla.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editarTarjetaAmarilla } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, Label, Input, FormGroup, NavLink, Alert, Row, Col } from \"reactstrap\";\n\nclass EditarTarjetaModalAmarilla extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      numero: \"\",\n      _id: this.props.tarjeta._id,\n      descripcion: this.props.tarjeta.descripcion,\n      detecto: this.props.tarjeta.detecto,\n      prioridad: this.props.tarjeta.prioridad,\n      familia: this.props.tarjeta.familia,\n      maquina: this.props.tarjeta.maquina,\n      equipo: this.props.tarjeta.equipo,\n      riesgoInicial: this.props.tarjeta.riesgoInicial,\n      tipodeRiesgo: this.props.tarjeta.tipodeRiesgo,\n      sugerencia: this.props.tarjeta.sugerencia,\n      parteMaquina: this.props.tarjeta.parteMaquina,\n      tareaRealizada: this.props.tarjeta.tareaRealizada,\n      responsable: this.props.tarjeta.responsable,\n      accionesComplementarias: this.props.tarjeta.accionesComplementarias,\n      causa: this.props.tarjeta.causa,\n      riesgoFinal: this.props.tarjeta.riesgoFinal,\n      tipoAccion: this.props.tarjeta.tipoAccion,\n      idMaquina: \"\"\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      e.target.value !== \"Seleccionar\" && this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        _id,\n        descripcion,\n        detecto,\n        prioridad,\n        maquina,\n        parteMaquina,\n        familia,\n        equipo,\n        sugerencia,\n        tipodeRiesgo,\n        riesgoInicial,\n        responsable,\n        tareaRealizada,\n        riesgoFinal,\n        tipoAccion,\n        accionesComplementarias\n      } = this.state;\n      const tarjetaEditada = {\n        _id,\n        descripcion,\n        detecto,\n        prioridad,\n        maquina,\n        parteMaquina,\n        familia,\n        equipo,\n        sugerencia,\n        tipodeRiesgo,\n        riesgoInicial,\n        responsable,\n        tareaRealizada,\n        riesgoFinal,\n        tipoAccion,\n        accionesComplementarias\n      };\n      this.props.editarTarjetaAmarilla(tarjetaEditada);\n      this.toggle();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for login error\n      console.log(error.msg.msg);\n\n      if (error.id === \"EDITAR_TARJETA_ERROR\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      campos\n    } = this.props.campos;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.toggle,\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Editar Tarjeta\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Editar Tarjeta\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Tarjeta Frente\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"mt-3\",\n      onSubmit: this.onSubmit,\n      id: \"agregartarjeta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"maquina\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Maquina / Instalaci\\xF3n *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"maquina\",\n      id: \"maquina\" // defaultValue={this.state.maquina}\n      ,\n      onChange: e => {\n        const index = e.target.selectedIndex;\n        const el = e.target.childNodes[index];\n        const option = el.getAttribute(\"_id\");\n        this.setState({\n          idMaquina: option,\n          maquina: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"maquina\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 31\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Riesgo Inicial *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      defaultValue: this.state.riesgoInicial,\n      name: \"riesgoInicial\",\n      id: \"riesgoInicial\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"riesgoInicial\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 31\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Detect\\xF3 *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"detecto\",\n      defaultValue: this.state.detecto,\n      id: \"detecto\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"descripcion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"Descripci\\xF3n *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"descripcion\",\n      defaultValue: this.state.descripcion,\n      id: \"descripcion\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"maquina\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, \"Parte de maquina *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"parteMaquina\",\n      id: \"parteMaquina\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value,\n      _id\n    }) => {\n      return _id === this.state.idMaquina;\n    }).map(({\n      parteMaquina\n    }) => {\n      return parteMaquina.map(item => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 38\n          }\n        }, item);\n      });\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"equipo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, \"Equipo Autonomo*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"equipo\",\n      defaultValue: this.state.equipo,\n      id: \"equipo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"equipo\";\n    }).map(({\n      name,\n      value\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 36\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"familia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, \"Familia de anomalias *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"familia\",\n      defaultValue: this.state.familia,\n      id: \"familia\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }, \"1 - Peque\\xF1as Deficiencia\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"2 - Condiciones basicas\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }, \"3 - Puntos inaccesibles\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    }, \"4 - Focos de contaminacion\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }, \"5 - Defecto de Calidad\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, \"6 - Elementos Innecesarios\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, \"8 - Actos Inseguros\"))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, \"Tipo de R / FC / LDA *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tipodeRiesgo\",\n      id: \"tipodeRiesgo\",\n      defaultValue: this.state.tipodeRiesgo,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"tipo\";\n    }).map(({\n      name,\n      value\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 36\n        }\n      }, value);\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"prioridad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }, \"Prioridad *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"prioridad\",\n      defaultValue: this.state.prioridad,\n      id: \"prioridad\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 23\n      }\n    }, \"Alta\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }\n    }, \"Media\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 23\n      }\n    }, \"Baja\"))))), this.props.tarjeta.estado === \"Cerrada\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }, \"Tarjeta Dorso\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"accionRealizada\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, \"Acci\\xF3n Realizada\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      defaultValue: this.state.tareaRealizada,\n      name: \"tareaRealizada\",\n      id: \"tareaRealizada\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"tipoAccion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, \"Tipo de acci\\xF3n *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tipoAccion\",\n      id: \"tipoAccion\",\n      defaultValue: this.state.tipoAccion,\n      className: \"mb-2\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 23\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 23\n      }\n    }, \"Contener\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 23\n      }\n    }, \"Reemplazar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, \"Simplificar\")), /*#__PURE__*/React.createElement(Label, {\n      for: \"responsable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, \"Responsable\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      defaultValue: this.state.responsable,\n      name: \"responsable\",\n      id: \"responsable\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"responsable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    }, \"Riesgo Final\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"select\",\n      name: \"riesgoFinal\",\n      id: \"riesgoFinal\",\n      className: \"mb-2\",\n      defaultValue: this.state.riesgoFinal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 23\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"riesgoFinal\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 31\n        }\n      }, value);\n    })), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }\n    }, \"Acciones Complementarias\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.onChange,\n      type: \"text\",\n      defaultValue: this.state.accionesComplementarias,\n      name: \"accionesComplementarias\",\n      id: \"accionesComplementarias\",\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }))), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }, \"Subir\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  campos: state.campos\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  editarTarjetaAmarilla,\n  getCampos\n})(EditarTarjetaModalAmarilla);","map":{"version":3,"sources":["/Users/fedepoi/efu-system/client/src/components/detalletarjeta/editartarjeta/EditarTarjetaModalAmarilla.jsx"],"names":["React","Component","connect","editarTarjetaAmarilla","getCampos","clearErrors","Button","Modal","ModalHeader","ModalBody","Form","Label","Input","FormGroup","NavLink","Alert","Row","Col","EditarTarjetaModalAmarilla","state","modal","numero","_id","props","tarjeta","descripcion","detecto","prioridad","familia","maquina","equipo","riesgoInicial","tipodeRiesgo","sugerencia","parteMaquina","tareaRealizada","responsable","accionesComplementarias","causa","riesgoFinal","tipoAccion","idMaquina","toggle","setState","onChange","e","target","value","name","onSubmit","preventDefault","tarjetaEditada","componentDidUpdate","prevProps","error","console","log","msg","id","render","campos","cursor","index","selectedIndex","el","childNodes","option","getAttribute","filter","map","item","estado","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editarTarjetaAmarilla } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  FormGroup,\n  NavLink,\n  Alert,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass EditarTarjetaModalAmarilla extends Component {\n  state = {\n    modal: false,\n    numero: \"\",\n    _id: this.props.tarjeta._id,\n    descripcion: this.props.tarjeta.descripcion,\n    detecto: this.props.tarjeta.detecto,\n    prioridad: this.props.tarjeta.prioridad,\n    familia: this.props.tarjeta.familia,\n    maquina: this.props.tarjeta.maquina,\n    equipo: this.props.tarjeta.equipo,\n    riesgoInicial: this.props.tarjeta.riesgoInicial,\n    tipodeRiesgo: this.props.tarjeta.tipodeRiesgo,\n    sugerencia: this.props.tarjeta.sugerencia,\n    parteMaquina: this.props.tarjeta.parteMaquina,\n    tareaRealizada: this.props.tarjeta.tareaRealizada,\n    responsable: this.props.tarjeta.responsable,\n    accionesComplementarias: this.props.tarjeta.accionesComplementarias,\n    causa: this.props.tarjeta.causa,\n    riesgoFinal: this.props.tarjeta.riesgoFinal,\n    tipoAccion: this.props.tarjeta.tipoAccion,\n    idMaquina: \"\",\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //Check for login error\n      console.log(error.msg.msg);\n      if (error.id === \"EDITAR_TARJETA_ERROR\") {\n        this.setState({\n          msg: error.msg.msg,\n        });\n      } else {\n        this.setState({\n          msg: null,\n        });\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n  onChange = (e) => {\n    e.target.value !== \"Seleccionar\" &&\n      this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      _id,\n      descripcion,\n      detecto,\n      prioridad,\n      maquina,\n      parteMaquina,\n      familia,\n      equipo,\n      sugerencia,\n      tipodeRiesgo,\n      riesgoInicial,\n      responsable,\n      tareaRealizada,\n      riesgoFinal,\n      tipoAccion,\n      accionesComplementarias,\n    } = this.state;\n\n    const tarjetaEditada = {\n      _id,\n      descripcion,\n      detecto,\n      prioridad,\n      maquina,\n      parteMaquina,\n      familia,\n      equipo,\n      sugerencia,\n      tipodeRiesgo,\n      riesgoInicial,\n      responsable,\n      tareaRealizada,\n      riesgoFinal,\n      tipoAccion,\n      accionesComplementarias,\n    };\n    this.props.editarTarjetaAmarilla(tarjetaEditada);\n    this.toggle();\n  };\n\n  render() {\n    const { campos } = this.props.campos;\n\n    return (\n      <div>\n        <p onClick={this.toggle} style={{ cursor: \"pointer\" }} className=\"my-3\">\n          Editar Tarjeta\n        </p>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Editar Tarjeta</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <h4 className=\"text-center\">Tarjeta Frente</h4>\n            <Form className=\"mt-3\" onSubmit={this.onSubmit} id=\"agregartarjeta\">\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"maquina\">Maquina / Instalación *</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"maquina\"\n                      id=\"maquina\"\n                      // defaultValue={this.state.maquina}\n                      onChange={(e) => {\n                        const index = e.target.selectedIndex;\n                        const el = e.target.childNodes[index];\n                        const option = el.getAttribute(\"_id\");\n                        this.setState({\n                          idMaquina: option,\n                          maquina: e.target.value,\n                        });\n                      }}\n                    >\n                      <option>Seleccionar</option>\n                      {campos &&\n                        campos\n                          .filter(({ name, value }) => {\n                            return name === \"maquina\";\n                          })\n                          .map(({ name, value, _id }, index) => {\n                            return (\n                              <option key={index} _id={_id}>\n                                {value}\n                              </option>\n                            );\n                          })}\n                    </Input>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label for=\"detecto\">Riesgo Inicial *</Label>\n                    <Input\n                      type=\"select\"\n                      defaultValue={this.state.riesgoInicial}\n                      name=\"riesgoInicial\"\n                      id=\"riesgoInicial\"\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      {campos &&\n                        campos\n                          .filter(({ name, value }) => {\n                            return name === \"riesgoInicial\";\n                          })\n                          .map(({ name, value, _id }, index) => {\n                            return (\n                              <option key={index} _id={_id}>\n                                {value}\n                              </option>\n                            );\n                          })}\n                    </Input>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"detecto\">Detectó *</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"detecto\"\n                      defaultValue={this.state.detecto}\n                      id=\"detecto\"\n                      onChange={this.onChange}\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label for=\"descripcion\">Descripción *</Label>\n                    <Input\n                      type=\"textarea\"\n                      name=\"descripcion\"\n                      defaultValue={this.state.descripcion}\n                      id=\"descripcion\"\n                      onChange={this.onChange}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"maquina\">Parte de maquina *</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"parteMaquina\"\n                      id=\"parteMaquina\"\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      {campos &&\n                        campos\n                          .filter(({ name, value, _id }) => {\n                            return _id === this.state.idMaquina;\n                          })\n                          .map(({ parteMaquina }) => {\n                            return parteMaquina.map((item) => {\n                              return <option>{item}</option>;\n                            });\n                          })}\n                    </Input>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"equipo\">Equipo Autonomo*</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"equipo\"\n                      defaultValue={this.state.equipo}\n                      id=\"equipo\"\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      {campos &&\n                        campos\n                          .filter(({ name, value }) => {\n                            return name === \"equipo\";\n                          })\n                          .map(({ name, value }, index) => {\n                            return <option key={index}>{value}</option>;\n                          })}\n                    </Input>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label for=\"familia\">Familia de anomalias *</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"familia\"\n                      defaultValue={this.state.familia}\n                      id=\"familia\"\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      <option>1 - Pequeñas Deficiencia</option>\n                      <option>2 - Condiciones basicas</option>\n                      <option>3 - Puntos inaccesibles</option>\n                      <option>4 - Focos de contaminacion</option>\n                      <option>5 - Defecto de Calidad</option>\n                      <option>6 - Elementos Innecesarios</option>\n                      <option>8 - Actos Inseguros</option>\n                    </Input>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label for=\"detecto\">Tipo de R / FC / LDA *</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"tipodeRiesgo\"\n                      id=\"tipodeRiesgo\"\n                      defaultValue={this.state.tipodeRiesgo}\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      {campos &&\n                        campos\n                          .filter(({ name, value }) => {\n                            return name === \"tipo\";\n                          })\n                          .map(({ name, value }, index) => {\n                            return <option key={index}>{value}</option>;\n                          })}\n                    </Input>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"prioridad\">Prioridad *</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"prioridad\"\n                      defaultValue={this.state.prioridad}\n                      id=\"prioridad\"\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      <option>Alta</option>\n                      <option>Media</option>\n                      <option>Baja</option>\n                    </Input>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              {this.props.tarjeta.estado === \"Cerrada\" && (\n                <div>\n                  <h4 className=\"text-center\">Tarjeta Dorso</h4>\n                  <FormGroup>\n                    <Label for=\"accionRealizada\">Acción Realizada</Label>\n                    <Input\n                      onChange={this.onChange}\n                      type=\"text\"\n                      defaultValue={this.state.tareaRealizada}\n                      name=\"tareaRealizada\"\n                      id=\"tareaRealizada\"\n                      className=\"mb-2\"\n                    ></Input>\n                    <Label for=\"tipoAccion\">Tipo de acción *</Label>\n                    <Input\n                      type=\"select\"\n                      name=\"tipoAccion\"\n                      id=\"tipoAccion\"\n                      defaultValue={this.state.tipoAccion}\n                      className=\"mb-2\"\n                      onChange={this.onChange}\n                    >\n                      <option>Seleccionar</option>\n                      <option>Eliminar</option>\n                      <option>Contener</option>\n                      <option>Reemplazar</option>\n                      <option>Simplificar</option>\n                    </Input>\n                    <Label for=\"responsable\">Responsable</Label>\n                    <Input\n                      onChange={this.onChange}\n                      type=\"text\"\n                      defaultValue={this.state.responsable}\n                      name=\"responsable\"\n                      id=\"responsable\"\n                      className=\"mb-2\"\n                    ></Input>\n\n                    <Label for=\"responsable\">Riesgo Final</Label>\n                    <Input\n                      onChange={this.onChange}\n                      type=\"select\"\n                      name=\"riesgoFinal\"\n                      id=\"riesgoFinal\"\n                      className=\"mb-2\"\n                      defaultValue={this.state.riesgoFinal}\n                    >\n                      <option>Seleccionar</option>\n                      {campos &&\n                        campos\n                          .filter(({ name, value }) => {\n                            return name === \"riesgoFinal\";\n                          })\n                          .map(({ name, value, _id }, index) => {\n                            return (\n                              <option key={index} _id={_id}>\n                                {value}\n                              </option>\n                            );\n                          })}\n                    </Input>\n\n                    <Label for=\"updaters\">Acciones Complementarias</Label>\n                    <Input\n                      onChange={this.onChange}\n                      type=\"text\"\n                      defaultValue={this.state.accionesComplementarias}\n                      name=\"accionesComplementarias\"\n                      id=\"accionesComplementarias\"\n                      className=\"mb-2\"\n                    ></Input>\n                  </FormGroup>\n                </div>\n              )}\n\n              {this.state.msg ? (\n                <Alert color=\"danger\" className=\"mt-3\">\n                  {this.state.msg}\n                </Alert>\n              ) : null}\n\n              <Row className=\"mt-3\">\n                <Col>\n                  <Button>Subir</Button>\n                </Col>\n              </Row>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  error: state.error,\n  campos: state.campos,\n});\nexport default connect(mapStateToProps, {\n  clearErrors,\n  editarTarjetaAmarilla,\n  getCampos,\n})(EditarTarjetaModalAmarilla);\n"]},"metadata":{},"sourceType":"module"}