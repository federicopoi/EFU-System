{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/dasboard/tablemodal/TableModal.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, Card, CardBody, Table } from \"reactstrap\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\n\nconst TableModal = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Tabla\"), /*#__PURE__*/React.createElement(Table, {\n    className: \"no-wrap v-middle\",\n    responsive: true,\n    id: \"emp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Mes\"), props.fechas.map(item => {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 26\n      }\n    }, item);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Acumuladas (abiertas)\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 26\n      }\n    }, props.tarjetasFiltro1[index]);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Acumuladas (cerradas)\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }\n    }, props.tarjetasFiltro2[index]);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Porcentaje (cerradas)\"), props.fechas.map((item, index) => {\n    const porcentaje = props.tarjetasFiltro3[index] / props.tarjetasFiltro1[index] * 100;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }\n    }, porcentaje.toString().slice(0, 4), \"%\");\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Por mes abiertas\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }\n    }, props.tarjetasmesabiertas[index]);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Por mes cerradas\"), props.fechas.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }\n    }, props.tarjetasmescerradas[index]);\n  })))))));\n};\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/dasboard/tablemodal/TableModal.jsx"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","Card","CardBody","Table","ReactHTMLTableToExcel","TableModal","props","fechas","map","item","index","tarjetasFiltro1","tarjetasFiltro2","porcentaje","tarjetasFiltro3","toString","slice","tarjetasmesabiertas","tarjetasmescerradas"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,KAPF,QAQO,YARP;AASA,OAAOC,qBAAP,MAAkC,2BAAlC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,UAAU,MAA9C;AAA+C,IAAA,EAAE,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AAC1B,wBAAO;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,IAA1B,CAAP;AACD,GAFA,CAFH,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEGH,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CAAL,CAAP;AACD,GAFA,CAFH,CADF,CATF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEGJ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACM,eAAN,CAAsBF,KAAtB,CAAL,CAAP;AACD,GAFA,CAFH,CADF,CAjBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEGJ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,UAAMG,UAAU,GACbP,KAAK,CAACQ,eAAN,CAAsBJ,KAAtB,IACCJ,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CADF,GAEA,GAHF;AAIA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,UAAU,CAACE,QAAX,GAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAL,MAAP;AACD,GANA,CAFH,CADF,CAzBF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACW,mBAAN,CAA0BP,KAA1B,CAAL,CAAP;AACD,GAFA,CAFH,CADF,CArCF,eA6CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGJ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACY,mBAAN,CAA0BR,KAA1B,CAAL,CAAP;AACD,GAFA,CAFH,CADF,CA7CF,CAFF,CADF,CADF,CADF;AA+DD,CAhED;;AAkEA,eAAeL,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Card,\n  CardBody,\n  Table,\n} from \"reactstrap\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\n\nconst TableModal = (props) => {\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <h3>Tabla</h3>\n          <Table className=\"no-wrap v-middle\" responsive id=\"emp\">\n            <thead>\n              <tr className=\"border-0\">\n                <th className=\"border-0\">Mes</th>\n                {props.fechas.map((item) => {\n                  return <th className=\"border-0\">{item}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Acumuladas (abiertas)</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasFiltro1[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Acumuladas (cerradas)</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasFiltro2[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Porcentaje (cerradas)</td>\n                {props.fechas.map((item, index) => {\n                  const porcentaje =\n                    (props.tarjetasFiltro3[index] /\n                      props.tarjetasFiltro1[index]) *\n                    100;\n                  return <td>{porcentaje.toString().slice(0, 4)}%</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Por mes abiertas</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasmesabiertas[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n            <tbody>\n              <tr>\n                <td>Por mes cerradas</td>\n                {props.fechas.map((item, index) => {\n                  return <td>{props.tarjetasmescerradas[index]}</td>;\n                })}\n              </tr>\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}