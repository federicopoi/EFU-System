{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/projecto-tpm/client/src/components/tarjetas/MisTarjetasFiltro.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\nimport { Card, CardBody, Row, Col, Table, Container, Input, Label } from \"reactstrap\";\nimport Select from \"react-select\";\n\nclass MisTarjetasFiltro extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null,\n      numero: \"\",\n      color: \"\",\n      equipo: \"\",\n      prioridad: \"\",\n      fecha: \"\",\n      descripcion: \"\",\n      estado: \"\",\n      maquina: \"\",\n      detecto: \"\",\n      familia: \"\",\n      tipodeRiesgo: \"\",\n      riesgoInicial: \"\",\n      riesgoFinal: \"\",\n      qrcode: false\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTarjetas();\n    const options = this.props.tarjetas[0] && Object.keys(this.props.tarjetas[0]).map((key, i) => {\n      return this.setState({\n        key\n      });\n    });\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props.tarjetas;\n    const {\n      selectedOption\n    } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n      detecto: this.state.detecto && this.state.detecto,\n      familia: this.state.familia && this.state.familia,\n      tipodeRiesgo: this.state.tipodeRiesgo && this.state.tipodeRiesgo,\n      riesgoFinal: this.state.riesgoFinal && this.state.riesgoFinal,\n      riesgoInicial: this.state.riesgoInicial && this.state.riesgoInicial\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    const arrNumero = tarjetas.map(({\n      numero\n    }) => numero);\n    const unicosNumero = Array.from(new Set(arrNumero));\n    const arrColores = tarjetas.map(({\n      color\n    }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n    const arrPrioridad = tarjetas.map(({\n      prioridad\n    }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n    const arrFecha = tarjetas.map(({\n      fecha\n    }) => fecha);\n    const unicosFecha = Array.from(new Set(arrFecha));\n    const arrDescripcion = tarjetas.map(({\n      descripcion\n    }) => descripcion);\n    const unicosDescripcion = Array.from(new Set(arrDescripcion));\n    const arrEstado = tarjetas.map(({\n      estado\n    }) => estado);\n    const unicosEstado = Array.from(new Set(arrEstado));\n    const arrMaquina = tarjetas.map(({\n      maquina\n    }) => maquina);\n    const unicosMaquina = Array.from(new Set(arrMaquina));\n    const arrDetecto = tarjetas.map(({\n      detecto\n    }) => detecto);\n    const unicosDetecto = Array.from(new Set(arrDetecto));\n    const arrFamilia = tarjetas.map(({\n      familia\n    }) => familia);\n    const unicosFamilia = Array.from(new Set(arrFamilia));\n    const arrtipoRiesgo = tarjetas.map(({\n      tipodeRiesgo\n    }) => tipodeRiesgo);\n    const unicostipoRiesgo = Array.from(new Set(arrtipoRiesgo));\n    const arrriesgoIncial = tarjetas.map(({\n      riesgoIncial\n    }) => riesgoIncial);\n    const unicosriesgoInicial = Array.from(new Set(arrriesgoIncial));\n    const arrriesgoFinal = tarjetas.map(({\n      riesgoFinal\n    }) => riesgoFinal);\n    const unicosriesgoFinal = Array.from(new Set(arrriesgoFinal));\n    const globalArray = {\n      numero: unicosNumero,\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n      fecha: unicosFecha,\n      estado: unicosEstado,\n      descripcion: unicosDescripcion,\n      maquina: unicosMaquina,\n      detecto: unicosDetecto,\n      familia: unicosFamilia,\n      tipodeRiesgo: unicostipoRiesgo,\n      riesgoIncial: unicosriesgoInicial,\n      riesgoFinal: unicosriesgoFinal\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }, \"Tabla dinamica de tarjetas\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto d-flex no-block align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      className: \"btn btn-info\",\n      table: \"emp\",\n      filename: \"ReporteTarjetas\",\n      sheet: \"Tarjetas\",\n      buttonText: \"Exportar excel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, \"Seleccionar elementos para la tabla\"), /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: \"Seleccionar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Filtrar elementos\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto d-flex no-block align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"qrcode\",\n      name: \"qrcode\",\n      onChange: e => {\n        this.onChange({\n          target: {\n            name: e.target.name,\n            value: e.target.checked\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }), \"Qr Code\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, selectedOption && selectedOption.map(({\n      label,\n      value\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }, label), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: value,\n        id: value,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 31\n        }\n      }), globalArray[value].map(item => /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }\n      }, item))))));\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"no-wrap v-middle\",\n      responsive: true,\n      id: \"emp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, selectedOption && selectedOption.map(({\n      value,\n      label\n    }) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 36\n        }\n      }, label);\n    }), this.state.qrcode && /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    }, \"QR Code\"))), newFilter && newFilter.map((item, index) => {\n      const link = \"http://192.168.0.5:3000\" + item._id;\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }\n      }, selectedOption && selectedOption.map(({\n        value,\n        label\n      }, index) => {\n        return item[label] === \"fecha\" ? /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 39\n          }\n        }, moment(item[value]).format(\"l LTS\")) : /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 39\n          }\n        }, item[value]);\n      }), this.state.qrcode && /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        value: link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 35\n        }\n      }))));\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas\n})(MisTarjetasFiltro);","map":{"version":3,"sources":["/Users/fedepoi/projecto-tpm/client/src/components/tarjetas/MisTarjetasFiltro.jsx"],"names":["React","Component","connect","getTarjetas","ReactHTMLTableToExcel","QRCode","moment","Card","CardBody","Row","Col","Table","Container","Input","Label","Select","MisTarjetasFiltro","state","selectedOption","numero","color","equipo","prioridad","fecha","descripcion","estado","maquina","detecto","familia","tipodeRiesgo","riesgoInicial","riesgoFinal","qrcode","handleChange","setState","onChange","e","target","name","value","componentDidMount","props","options","tarjetas","Object","keys","map","key","i","render","filter","multiFilter","arr","filters","filterKeys","eachObj","every","eachKey","length","includes","newFilter","arrNumero","unicosNumero","Array","from","Set","arrColores","unicosColores","arrEquipos","unicosEquipos","arrPrioridad","unicosPrioridad","arrFecha","unicosFecha","arrDescripcion","unicosDescripcion","arrEstado","unicosEstado","arrMaquina","unicosMaquina","arrDetecto","unicosDetecto","arrFamilia","unicosFamilia","arrtipoRiesgo","unicostipoRiesgo","arrriesgoIncial","riesgoIncial","unicosriesgoInicial","arrriesgoFinal","unicosriesgoFinal","globalArray","checked","label","item","index","link","_id","format","mapStateToProps","user","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  Table,\n  Container,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport Select from \"react-select\";\n\nclass MisTarjetasFiltro extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n    const options =\n      this.props.tarjetas[0] &&\n      Object.keys(this.props.tarjetas[0]).map((key, i) => {\n        return this.setState({ key });\n      });\n  }\n  state = {\n    selectedOption: null,\n    numero: \"\",\n    color: \"\",\n    equipo: \"\",\n    prioridad: \"\",\n    fecha: \"\",\n    descripcion: \"\",\n    estado: \"\",\n    maquina: \"\",\n    detecto: \"\",\n    familia: \"\",\n    tipodeRiesgo: \"\",\n    riesgoInicial: \"\",\n    riesgoFinal: \"\",\n    qrcode: false,\n  };\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  render() {\n    const { tarjetas } = this.props.tarjetas;\n    const { selectedOption } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n      detecto: this.state.detecto && this.state.detecto,\n      familia: this.state.familia && this.state.familia,\n      tipodeRiesgo: this.state.tipodeRiesgo && this.state.tipodeRiesgo,\n      riesgoFinal: this.state.riesgoFinal && this.state.riesgoFinal,\n      riesgoInicial: this.state.riesgoInicial && this.state.riesgoInicial,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    const arrNumero = tarjetas.map(({ numero }) => numero);\n    const unicosNumero = Array.from(new Set(arrNumero));\n\n    const arrColores = tarjetas.map(({ color }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    const arrPrioridad = tarjetas.map(({ prioridad }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n\n    const arrFecha = tarjetas.map(({ fecha }) => fecha);\n    const unicosFecha = Array.from(new Set(arrFecha));\n\n    const arrDescripcion = tarjetas.map(({ descripcion }) => descripcion);\n    const unicosDescripcion = Array.from(new Set(arrDescripcion));\n\n    const arrEstado = tarjetas.map(({ estado }) => estado);\n    const unicosEstado = Array.from(new Set(arrEstado));\n\n    const arrMaquina = tarjetas.map(({ maquina }) => maquina);\n    const unicosMaquina = Array.from(new Set(arrMaquina));\n\n    const arrDetecto = tarjetas.map(({ detecto }) => detecto);\n    const unicosDetecto = Array.from(new Set(arrDetecto));\n\n    const arrFamilia = tarjetas.map(({ familia }) => familia);\n    const unicosFamilia = Array.from(new Set(arrFamilia));\n\n    const arrtipoRiesgo = tarjetas.map(({ tipodeRiesgo }) => tipodeRiesgo);\n    const unicostipoRiesgo = Array.from(new Set(arrtipoRiesgo));\n\n    const arrriesgoIncial = tarjetas.map(({ riesgoIncial }) => riesgoIncial);\n    const unicosriesgoInicial = Array.from(new Set(arrriesgoIncial));\n\n    const arrriesgoFinal = tarjetas.map(({ riesgoFinal }) => riesgoFinal);\n    const unicosriesgoFinal = Array.from(new Set(arrriesgoFinal));\n\n    const globalArray = {\n      numero: unicosNumero,\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n      fecha: unicosFecha,\n      estado: unicosEstado,\n      descripcion: unicosDescripcion,\n      maquina: unicosMaquina,\n      detecto: unicosDetecto,\n      familia: unicosFamilia,\n      tipodeRiesgo: unicostipoRiesgo,\n      riesgoIncial: unicosriesgoInicial,\n      riesgoFinal: unicosriesgoFinal,\n    };\n\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container>\n              <Row>\n                <Col>\n                  <div className=\"d-flex align-items-center\">\n                    <div className=\"\">\n                      <h2 className=\"mb-3\">Tabla dinamica de tarjetas</h2>\n                    </div>\n                    <div className=\"ml-auto d-flex no-block align-items-center\">\n                      <div className=\"dl\">\n                        <ReactHTMLTableToExcel\n                          className=\"btn btn-info\"\n                          table=\"emp\"\n                          filename=\"ReporteTarjetas\"\n                          sheet=\"Tarjetas\"\n                          buttonText=\"Exportar excel\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"mb-3\">\n                <h5>Seleccionar elementos para la tabla</h5>\n                <Select\n                  value={selectedOption}\n                  onChange={this.handleChange}\n                  options={options}\n                  isMulti\n                  placeholder=\"Seleccionar\"\n                />\n              </div>\n\n              <div className=\"d-flex align-items-center\">\n                <div className=\"\">\n                  <div>\n                    <h5>Filtrar elementos</h5>\n                  </div>\n                </div>\n                <div className=\"ml-auto d-flex no-block align-items-center\">\n                  <Label check>\n                    <Input\n                      type=\"checkbox\"\n                      id=\"qrcode\"\n                      name=\"qrcode\"\n                      onChange={(e) => {\n                        this.onChange({\n                          target: {\n                            name: e.target.name,\n                            value: e.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                    Qr Code\n                  </Label>\n                </div>\n              </div>\n              <Row className=\"mb-3\">\n                {selectedOption &&\n                  selectedOption.map(({ label, value }) => {\n                    return (\n                      <div>\n                        <Col>\n                          <div>\n                            <Label for=\"color\">{label}</Label>\n                            <Input\n                              type=\"select\"\n                              name={value}\n                              id={value}\n                              onChange={this.onChange}\n                            >\n                              <option></option>\n                              {globalArray[value].map((item) => (\n                                <option>{item}</option>\n                              ))}\n                            </Input>\n                          </div>\n                        </Col>\n                      </div>\n                    );\n                  })}\n              </Row>\n\n              <Card>\n                <CardBody>\n                  <Table className=\"no-wrap v-middle\" responsive id=\"emp\">\n                    <thead>\n                      <tr className=\"border-0\">\n                        {selectedOption &&\n                          selectedOption.map(({ value, label }) => {\n                            return <th className=\"border-0\">{label}</th>;\n                          })}\n                        {this.state.qrcode && (\n                          <th className=\"border-0\">QR Code</th>\n                        )}\n                      </tr>\n                    </thead>\n\n                    {newFilter &&\n                      newFilter.map((item, index) => {\n                        const link = \"http://192.168.0.5:3000\" + item._id;\n                        return (\n                          <tbody key={index}>\n                            <tr>\n                              {selectedOption &&\n                                selectedOption.map(\n                                  ({ value, label }, index) => {\n                                    return item[label] === \"fecha\" ? (\n                                      <td key={index}>\n                                        {moment(item[value]).format(\"l LTS\")}\n                                      </td>\n                                    ) : (\n                                      <td key={index}>{item[value]}</td>\n                                    );\n                                  }\n                                )}\n                              {this.state.qrcode && (\n                                <td>\n                                  <QRCode value={link} />\n                                </td>\n                              )}\n                            </tr>\n                          </tbody>\n                        );\n                      })}\n                  </Table>\n                </CardBody>\n              </Card>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n    user: state.auth.user,\n  };\n};\n\nexport default connect(mapStateToProps, { getTarjetas })(MisTarjetasFiltro);\n"]},"metadata":{},"sourceType":"module"}