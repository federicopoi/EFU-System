{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/auth-components/register/registerpage.jsx\";\nimport React, { Component } from \"react\";\nimport { Card } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../store/actions/authActions\";\nimport { clearErrors } from \"../../store/actions/errorActions\";\nimport { Label, Input, Alert } from \"reactstrap\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport class RegisterPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      legajo: null,\n      pin: null,\n      role: \"\",\n      msg: null,\n      errors: {\n        legajo: \"\",\n        pin: \"\"\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case \"legajo\":\n          errors.fullName = value.length < 6 ? \"Full Name must be 6 characters long!\" : \"\";\n          break;\n\n        case \"pin\":\n          errors.password = value.length < 8 ? \"Password must be 8 characters long!\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password,\n        role,\n        acceso\n      } = this.state; // Create usre object\n\n      const newUser = {\n        email,\n        password,\n        role\n      }; // Atempt to register\n      // this.props.register(newUser);\n\n      console.log(newUser);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        console.info(\"Valid Form\");\n      } else {\n        console.error(\"Invalid Form\");\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.props.success) {\n      this.props.history.push(\"/admin\");\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, this.props.user && this.props.user.role === \"Admin\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fullName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"fullName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fullName\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), errors.fullName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    }, errors.fullName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 27\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Password must be eight characters in length.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Create\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  success: state.auth.success,\n  error: state.error,\n  user: state.auth.user,\n  users: state.users\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterPage));","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/auth-components/register/registerpage.jsx"],"names":["React","Component","Card","connect","PropTypes","register","clearErrors","Label","Input","Alert","withRouter","Redirect","AvForm","AvField","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","RegisterPage","state","legajo","pin","role","msg","onChange","e","setState","target","name","value","handleChange","event","preventDefault","fullName","password","onSubmit","email","acceso","newUser","console","log","handleSubmit","info","error","componentDidUpdate","prevProps","isAuthenticated","props","id","success","history","push","render","user","mapStateToProps","auth","users"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../store/actions/authActions\";\nimport { clearErrors } from \"../../store/actions/errorActions\";\nimport { Label, Input, Alert } from \"reactstrap\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport class RegisterPage extends Component {\n  state = {\n    legajo: null,\n    pin: null,\n    role: \"\",\n    msg: null,\n    errors: {\n      legajo: \"\",\n      pin: \"\",\n    },\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg,\n        });\n      } else {\n        this.setState({\n          msg: null,\n        });\n      }\n    }\n    if (this.props.success) {\n      this.props.history.push(\"/admin\");\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case \"legajo\":\n        errors.fullName =\n          value.length < 6 ? \"Full Name must be 6 characters long!\" : \"\";\n        break;\n      case \"pin\":\n        errors.password =\n          value.length < 8 ? \"Password must be 8 characters long!\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ errors, [name]: value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password, role, acceso } = this.state;\n\n    // Create usre object\n    const newUser = {\n      email,\n      password,\n      role,\n    };\n\n    // Atempt to register\n    // this.props.register(newUser);\n    console.log(newUser);\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateForm(this.state.errors)) {\n      console.info(\"Valid Form\");\n    } else {\n      console.error(\"Invalid Form\");\n    }\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row align-items-center h-100\">\n          <div className=\"col-6 mx-auto\">\n            {this.props.user && this.props.user.role === \"Admin\" && (\n              <div>\n                <div className=\"wrapper\">\n                  <div className=\"form-wrapper\">\n                    <h2>Create Account</h2>\n                    <form onSubmit={this.handleSubmit} noValidate>\n                      <div className=\"fullName\">\n                        <label htmlFor=\"fullName\">Full Name</label>\n                        <input\n                          type=\"text\"\n                          name=\"fullName\"\n                          onChange={this.handleChange}\n                          noValidate\n                        />\n                        {errors.fullName.length > 0 && (\n                          <span className=\"error\">{errors.fullName}</span>\n                        )}\n                      </div>\n                      <div className=\"email\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          onChange={this.handleChange}\n                          noValidate\n                        />\n                        {errors.email.length > 0 && (\n                          <span className=\"error\">{errors.email}</span>\n                        )}\n                      </div>\n                      <div className=\"password\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          onChange={this.handleChange}\n                          noValidate\n                        />\n                        {errors.password.length > 0 && (\n                          <span className=\"error\">{errors.password}</span>\n                        )}\n                      </div>\n                      <div className=\"info\">\n                        <small>\n                          Password must be eight characters in length.\n                        </small>\n                      </div>\n                      <div className=\"submit\">\n                        <button>Create</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  success: state.auth.success,\n  error: state.error,\n  user: state.auth.user,\n  users: state.users,\n});\nexport default withRouter(\n  connect(mapStateToProps, { register, clearErrors })(RegisterPage)\n);\n"]},"metadata":{},"sourceType":"module"}