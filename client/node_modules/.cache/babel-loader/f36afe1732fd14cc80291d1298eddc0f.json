{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/tarjetasfiltroglobal/TarjetasFiltroGlobal.jsx\";\nimport React, { Component } from \"react\";\nimport { Input, Label } from \"reactstrap\";\nimport CanvasJSReact from \"../canvasjs.react\";\nimport moment from \"moment\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoFiltroGlobal extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      if (e.target.name === \"color\" && e.target.value === \"Azul\") {\n        this.setState({\n          [e.target.name]: e.target.value,\n          colorHex: \"#007bff\"\n        });\n      } else if (e.target.name === \"color\" && e.target.value === \"Roja\") {\n        this.setState({\n          [e.target.name]: e.target.value,\n          colorHex: \"#dc3545\"\n        });\n      } else if (e.target.name === \"color\" && e.target.value === \"Verde\") {\n        this.setState({\n          [e.target.name]: e.target.value,\n          colorHex: \"#28a745\"\n        });\n      } else if (e.target.name === \"color\" && e.target.value === \"Amarilla\") {\n        this.setState({\n          [e.target.name]: e.target.value,\n          colorHex: \"#F7E91B\"\n        });\n      } else if (e.target.name !== \"color\") {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.state = {\n      color: \"\",\n      equipo: \"\",\n      prioridad: \"\"\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props;\n    var filter = {\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    const arrColores = tarjetas.map(({\n      color\n    }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n    const arrPrioridad = tarjetas.map(({\n      prioridad\n    }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n    const globalArray = {\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos\n    }; // Formulas para \"Filtro acumuladas abiertas\"\n    // Filtro todos los meses en el que hay tarjetas abiertas Filtro\n\n    const fechasTarjetasFiltro = newFilter.map(({\n      fecha\n    }) => fecha.substr(0, 7)); // Filtro todos los meses en el que hay tarjetas cerradas Filtro\n\n    const fechasTarjetasFiltroCerradas = newFilter.filter(({\n      estado,\n      color,\n      equipo\n    }) => estado === \"Cerrada\").map(({\n      finReparacion\n    }) => finReparacion.substr(0, 7)); // Borro todos los meses repetidos\n\n    let fechasTarjetasFiltro1 = new Set(fechasTarjetasFiltro);\n    const fechasTarjetasFiltroUnicas = [...fechasTarjetasFiltro1]; // Borro todos los meses repetidos\n\n    let fechasTarjetasFiltro1Cerradas = new Set(fechasTarjetasFiltroCerradas);\n    const fechasTarjetasFiltroUnicasCerradas = [...fechasTarjetasFiltro1Cerradas];\n    var c = fechasTarjetasFiltroUnicas.concat(fechasTarjetasFiltroUnicasCerradas);\n    var fechastarjetasUnicas = c.filter((item, pos) => c.indexOf(item) === pos);\n    const startDate = moment(fechastarjetasUnicas.sort()[0]);\n    const endDate = moment(fechastarjetasUnicas.sort().slice(-1)[1]);\n    const fechastarjetasUnicasRango = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greated than start date.\";\n    }\n\n    while (startDate.isBefore(endDate)) {\n      fechastarjetasUnicasRango.push(startDate.format(\"YYYY-MM\"));\n      startDate.add(1, \"month\");\n    } // Numero total de tarjetas de cada mes (no acumulado)\n\n\n    let array = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        color,\n        equipo\n      }) => fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    });\n    const arrTarjetasFiltroAcumuladas = array.map((elem, index) => array.slice(0, index + 1).reduce((a, b) => a + b)); // Datos para el grafico\n\n    const FiltroAcumuladasAbiertasData = [fechastarjetasUnicasRango.sort().map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: arrTarjetasFiltroAcumuladas[index]\n      };\n    })]; // Formulas para \"Filtro acumuladas cerradas\"\n    // Numero total de tarjetas de cada mes (no acumulado)\n\n    let arrayCerradas = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        finReparacion,\n        color,\n        equipo\n      }) => estado === \"Cerrada\" && finReparacion.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const arrTarjetasFiltroAcumuladasCerradas = arrayCerradas.map((elem, index) => arrayCerradas.slice(0, index + 1).reduce((aa, bb) => aa + bb)); // Datos para el grafico\n\n    const FiltroAcumuladasAbiertasDataCerradas = [fechastarjetasUnicasRango.sort().map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: arrTarjetasFiltroAcumuladasCerradas[index]\n      };\n    })]; // Formulas para \"Porcentaje acumuladas cerradas porcentaje\"\n    // Numero total de tarjetas de cada mes (no acumulado)\n\n    let arrayCerradasPorcentaje = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        finReparacion,\n        color,\n        equipo\n      }) => estado === \"Cerrada\" && finReparacion.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const arrTarjetasFiltroAcumuladasCerradasPorcentaje = arrayCerradasPorcentaje.map((elem, index) => arrayCerradasPorcentaje.slice(0, index + 1).reduce((aa, bb) => aa + bb)); // Datos para el grafico de cerradas porcentaje\n\n    const FiltroAcumuladasAbiertasDataCerradasPorcentaje = [fechastarjetasUnicasRango.map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: arrTarjetasFiltroAcumuladasCerradasPorcentaje[index] / arrTarjetasFiltroAcumuladas[index] * 100\n      };\n    })];\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\",\n      // Observe ToolTip Number Format\n      digitGroupSeparator: \".\",\n      // Observe axisY labels\n      months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\n    });\n    const options = {\n      culture: \"es\",\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n        interval: 1,\n        intervalType: \"month\"\n      },\n      axisY: {\n        title: \"Cantidad de tarjetas\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\"\n      },\n      axisY2: {\n        title: \"% de Cierre\",\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: this.state.colorHex,\n        type: \"column\",\n        name: \"Tarjetas acumuladas (abiertas)\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: FiltroAcumuladasAbiertasData[0]\n      }, {\n        type: \"line\",\n        name: \"Tarjetas acumuladas (cerradas)\",\n        showInLegend: true,\n        dataPoints: FiltroAcumuladasAbiertasDataCerradas[0]\n      }, {\n        type: \"line\",\n        color: \"#121212\",\n        name: \"Porcentaje Tarjetas Cerradas\",\n        showInLegend: true,\n        axisYType: \"secondary\",\n        yValueFormatString: \"#,##0\",\n        dataPoints: FiltroAcumuladasAbiertasDataCerradasPorcentaje[0]\n      }]\n    };\n    console.log(newFilter);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"color\",\n      id: \"color\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, \"Azul\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }, \"Roja\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, \"Amarilla\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, \"Verde\")), /*#__PURE__*/React.createElement(Label, {\n      for: \"equipo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, \"Equipo\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"equipo\",\n      id: \"equipo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }), unicosEquipos.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 20\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(Label, {\n      for: \"prioridad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, \"Prioridad\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"prioridad\",\n      id: \"prioridad\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }\n    }, \"Alta\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }\n    }, \"Media\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }, \"Baja\")), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      culture: \"en\",\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default GraficoFiltroGlobal;","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/tarjetasfiltroglobal/TarjetasFiltroGlobal.jsx"],"names":["React","Component","Input","Label","CanvasJSReact","moment","CanvasJSChart","CanvasJS","GraficoFiltroGlobal","constructor","onChange","e","target","name","value","setState","colorHex","state","color","equipo","prioridad","toggleDataSeries","bind","dataSeries","visible","chart","render","tarjetas","props","filter","multiFilter","arr","filters","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","arrColores","map","unicosColores","Array","from","Set","arrEquipos","unicosEquipos","arrPrioridad","unicosPrioridad","globalArray","fechasTarjetasFiltro","fecha","substr","fechasTarjetasFiltroCerradas","estado","finReparacion","fechasTarjetasFiltro1","fechasTarjetasFiltroUnicas","fechasTarjetasFiltro1Cerradas","fechasTarjetasFiltroUnicasCerradas","c","concat","fechastarjetasUnicas","item","pos","indexOf","startDate","sort","endDate","slice","fechastarjetasUnicasRango","isBefore","push","format","add","array","index","replace","arrTarjetasFiltroAcumuladas","elem","reduce","a","b","FiltroAcumuladasAbiertasData","x","Date","parseInt","y","arrayCerradas","arrTarjetasFiltroAcumuladasCerradas","aa","bb","FiltroAcumuladasAbiertasDataCerradas","arrayCerradasPorcentaje","arrTarjetasFiltroAcumuladasCerradasPorcentaje","FiltroAcumuladasAbiertasDataCerradasPorcentaje","addCultureInfo","decimalSeparator","digitGroupSeparator","months","options","culture","animationEnabled","axisX","valueFormatString","interval","intervalType","axisY","title","lineColor","tickColor","labelFontColor","axisY2","suffix","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","type","showInLegend","xValueFormatString","dataPoints","axisYType","yValueFormatString","console","log","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, Label } from \"reactstrap\";\nimport CanvasJSReact from \"../canvasjs.react\";\nimport moment from \"moment\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\n\nexport class GraficoFiltroGlobal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: \"\",\n      equipo: \"\",\n      prioridad: \"\",\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n    this.chart.render();\n  }\n\n  onChange = (e) => {\n    if (e.target.name === \"color\" && e.target.value === \"Azul\") {\n      this.setState({\n        [e.target.name]: e.target.value,\n        colorHex: \"#007bff\",\n      });\n    } else if (e.target.name === \"color\" && e.target.value === \"Roja\") {\n      this.setState({\n        [e.target.name]: e.target.value,\n        colorHex: \"#dc3545\",\n      });\n    } else if (e.target.name === \"color\" && e.target.value === \"Verde\") {\n      this.setState({\n        [e.target.name]: e.target.value,\n        colorHex: \"#28a745\",\n      });\n    } else if (e.target.name === \"color\" && e.target.value === \"Amarilla\") {\n      this.setState({\n        [e.target.name]: e.target.value,\n        colorHex: \"#F7E91B\",\n      });\n    } else if (e.target.name !== \"color\") {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  render() {\n    const { tarjetas } = this.props;\n\n    var filter = {\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    const arrColores = tarjetas.map(({ color }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    const arrPrioridad = tarjetas.map(({ prioridad }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n\n    const globalArray = {\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n    };\n\n    // Formulas para \"Filtro acumuladas abiertas\"\n\n    // Filtro todos los meses en el que hay tarjetas abiertas Filtro\n    const fechasTarjetasFiltro = newFilter.map(({ fecha }) =>\n      fecha.substr(0, 7)\n    );\n\n    // Filtro todos los meses en el que hay tarjetas cerradas Filtro\n    const fechasTarjetasFiltroCerradas = newFilter\n      .filter(({ estado, color, equipo }) => estado === \"Cerrada\")\n      .map(({ finReparacion }) => finReparacion.substr(0, 7));\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasFiltro1 = new Set(fechasTarjetasFiltro);\n    const fechasTarjetasFiltroUnicas = [...fechasTarjetasFiltro1];\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasFiltro1Cerradas = new Set(fechasTarjetasFiltroCerradas);\n    const fechasTarjetasFiltroUnicasCerradas = [\n      ...fechasTarjetasFiltro1Cerradas,\n    ];\n\n    var c = fechasTarjetasFiltroUnicas.concat(\n      fechasTarjetasFiltroUnicasCerradas\n    );\n    var fechastarjetasUnicas = c.filter((item, pos) => c.indexOf(item) === pos);\n\n    const startDate = moment(fechastarjetasUnicas.sort()[0]);\n    const endDate = moment(fechastarjetasUnicas.sort().slice(-1)[1]);\n\n    const fechastarjetasUnicasRango = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greated than start date.\";\n    }\n\n    while (startDate.isBefore(endDate)) {\n      fechastarjetasUnicasRango.push(startDate.format(\"YYYY-MM\"));\n      startDate.add(1, \"month\");\n    }\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, color, equipo }) =>\n          fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n          item.slice(5, 7)\n      ).length;\n    });\n\n    const arrTarjetasFiltroAcumuladas = array.map((elem, index) =>\n      array.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    // Datos para el grafico\n    const FiltroAcumuladasAbiertasData = [\n      fechastarjetasUnicasRango.sort().map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: arrTarjetasFiltroAcumuladas[index],\n        };\n      }),\n    ];\n\n    // Formulas para \"Filtro acumuladas cerradas\"\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let arrayCerradas = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, finReparacion, color, equipo }) =>\n          estado === \"Cerrada\" &&\n          finReparacion.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n            item.slice(5, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const arrTarjetasFiltroAcumuladasCerradas = arrayCerradas.map(\n      (elem, index) =>\n        arrayCerradas.slice(0, index + 1).reduce((aa, bb) => aa + bb)\n    );\n\n    // Datos para el grafico\n    const FiltroAcumuladasAbiertasDataCerradas = [\n      fechastarjetasUnicasRango.sort().map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: arrTarjetasFiltroAcumuladasCerradas[index],\n        };\n      }),\n    ];\n\n    // Formulas para \"Porcentaje acumuladas cerradas porcentaje\"\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let arrayCerradasPorcentaje = fechastarjetasUnicasRango\n      .sort()\n      .map((item, index) => {\n        return newFilter.filter(\n          ({ estado, finReparacion, color, equipo }) =>\n            estado === \"Cerrada\" &&\n            finReparacion.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n              item.slice(5, 7)\n        ).length;\n      });\n\n    // Acumulado de tarjetas por mes\n    const arrTarjetasFiltroAcumuladasCerradasPorcentaje = arrayCerradasPorcentaje.map(\n      (elem, index) =>\n        arrayCerradasPorcentaje.slice(0, index + 1).reduce((aa, bb) => aa + bb)\n    );\n    // Datos para el grafico de cerradas porcentaje\n\n    const FiltroAcumuladasAbiertasDataCerradasPorcentaje = [\n      fechastarjetasUnicasRango.map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y:\n            (arrTarjetasFiltroAcumuladasCerradasPorcentaje[index] /\n              arrTarjetasFiltroAcumuladas[index]) *\n            100,\n        };\n      }),\n    ];\n\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\", // Observe ToolTip Number Format\n      digitGroupSeparator: \".\", // Observe axisY labels\n\n      months: [\n        \"Enero\",\n        \"Febrero\",\n        \"Marzo\",\n        \"Abril\",\n        \"Mayo\",\n        \"Junio\",\n        \"Julio\",\n        \"Agosto\",\n        \"Septiembre\",\n        \"Octubre\",\n        \"Noviembre\",\n        \"Diciembre\",\n      ],\n    });\n    const options = {\n      culture: \"es\",\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n\n        interval: 1,\n        intervalType: \"month\",\n      },\n      axisY: {\n        title: \"Cantidad de tarjetas\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\",\n      },\n      axisY2: {\n        title: \"% de Cierre\",\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\",\n      },\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: this.state.colorHex,\n          type: \"column\",\n          name: \"Tarjetas acumuladas (abiertas)\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n          dataPoints: FiltroAcumuladasAbiertasData[0],\n        },\n        {\n          type: \"line\",\n          name: \"Tarjetas acumuladas (cerradas)\",\n          showInLegend: true,\n          dataPoints: FiltroAcumuladasAbiertasDataCerradas[0],\n        },\n        {\n          type: \"line\",\n          color: \"#121212\",\n          name: \"Porcentaje Tarjetas Cerradas\",\n          showInLegend: true,\n          axisYType: \"secondary\",\n          yValueFormatString: \"#,##0\",\n          dataPoints: FiltroAcumuladasAbiertasDataCerradasPorcentaje[0],\n        },\n      ],\n    };\n\n    console.log(newFilter);\n    return (\n      <div>\n        <Label for=\"color\">Color</Label>\n        <Input type=\"select\" name=\"color\" id=\"color\" onChange={this.onChange}>\n          <option></option>\n          <option>Azul</option>\n          <option>Roja</option>\n          <option>Amarilla</option>\n          <option>Verde</option>\n        </Input>\n        <Label for=\"equipo\">Equipo</Label>\n        <Input type=\"select\" name=\"equipo\" id=\"equipo\" onChange={this.onChange}>\n          <option></option>\n          {unicosEquipos.map((item, index) => {\n            return <option key={index}>{item}</option>;\n          })}\n        </Input>\n        <Label for=\"prioridad\">Prioridad</Label>\n        <Input\n          type=\"select\"\n          name=\"prioridad\"\n          id=\"prioridad\"\n          onChange={this.onChange}\n        >\n          <option></option>\n          <option>Alta</option>\n          <option>Media</option>\n          <option>Baja</option>\n        </Input>\n\n        <CanvasJSChart\n          culture=\"en\"\n          options={options}\n          onRef={(ref) => (this.chart = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GraficoFiltroGlobal;\n"]},"metadata":{},"sourceType":"module"}