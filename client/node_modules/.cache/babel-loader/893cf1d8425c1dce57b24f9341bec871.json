{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/dasboard/indiceautonomia/GraficoAutonomia.jsx\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nimport TableModalAutonomia from \"../tablemodalautonomia/TableModalAutonomia\";\nimport { Row, Col, Card, CardBody, Label, Input } from \"reactstrap\";\nimport moment from \"moment\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoAutonomia extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      e.target.value === \"Seleccionar meses\" ? this.setState({\n        [e.target.name]: 12\n      }) : this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      equipo: \"\",\n      numberMonths: \"12\"\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props;\n    var filter = {\n      equipo: this.state.equipo && this.state.equipo\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    console.log(newFilter);\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos)); // Formulas para \"Indice de autonomia\"\n    // Filtro todos los meses en el que hay tarjetas convertidas\n\n    const fechasTarjetasConvertidas = newFilter // .filter(({ estado, convertida }) => convertida === true)\n    .map(({\n      fecha\n    }) => fecha.substr(0, 7)); // Borro todos los meses repetidos\n\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n    const startDate = moment(fechasTarjetasConvertidasUnicas.sort()[0]);\n    const endDate = moment(fechasTarjetasConvertidasUnicas.sort().slice(-1)[1]);\n    const fechastarjetasUnicasRango = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greated than start date.\";\n    }\n\n    while (startDate.isBefore(endDate)) {\n      fechastarjetasUnicasRango.push(startDate.format(\"YYYY-MM\"));\n      startDate.add(1, \"month\");\n    }\n\n    const fechastarjetasUnicasRangoCut = fechastarjetasUnicasRango.slice(Math.max(fechastarjetasUnicasRango.length - this.state.numberMonths, 0)); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array1 = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        color\n      }) => color === \"Azul\" && estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array1Acum = array1.map((elem, index) => array1.slice(0, index + 1).reduce((a, b) => a + b)); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array2 = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        convertida\n      }) => convertida === true && estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array2Acum = array2.map((elem, index) => array2.slice(0, index + 1).reduce((a, b) => a + b));\n    console.log(array2Acum); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array3 = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha\n      }) => estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array3Acum = array3.map((elem, index) => array3.slice(0, index + 1).reduce((a, b) => a + b)); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let arrayAcumFinal = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return (array1Acum[index] + array2Acum[index]) / array3Acum[index] * 100;\n    });\n    console.log(arrayAcumFinal); // Datos para el grafico\n\n    const ConvertidasData = [fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: arrayAcumFinal[index]\n      };\n    })];\n    const arrayMonths = [];\n\n    for (let i = 1; i < fechastarjetasUnicasRango.length + 1; i++) {\n      arrayMonths.push(i);\n    }\n\n    arrayMonths.reverse();\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\",\n      // Observe ToolTip Number Format\n      digitGroupSeparator: \".\",\n      // Observe axisY labels\n      months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\n    });\n    const options = {\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n        interval: 1,\n        intervalType: \"month\"\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: \"#1BA7F7\",\n        type: \"column\",\n        name: \"Indice de autonomia\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: ConvertidasData[0]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 5,\n      md: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, \"Indice de autonomia\"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      culture: \"en\",\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"numberMonths\",\n      id: \"numberMonths\",\n      className: \"mt-2\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, \"Seleccionar meses\"), arrayMonths && arrayMonths.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }, `Ãšltimos ${item} meses`);\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      lg: 7,\n      md: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableModalAutonomia, {\n      tarjetasFiltro1: arrayAcumFinal,\n      fechas: fechasTarjetasConvertidasUnicas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, \"Filtros\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"equipo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, \"Equipo\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"equipo\",\n      id: \"equipo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 19\n      }\n    }), unicosEquipos.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 28\n        }\n      }, item);\n    })))))));\n  }\n\n}\nexport default GraficoAutonomia;","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/dasboard/indiceautonomia/GraficoAutonomia.jsx"],"names":["React","Component","CanvasJSReact","TableModalAutonomia","Row","Col","Card","CardBody","Label","Input","moment","CanvasJSChart","CanvasJS","GraficoAutonomia","constructor","onChange","e","target","value","setState","name","state","equipo","numberMonths","toggleDataSeries","bind","dataSeries","visible","chart","render","tarjetas","props","filter","multiFilter","arr","filters","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","console","log","arrEquipos","map","unicosEquipos","Array","from","Set","fechasTarjetasConvertidas","fecha","substr","fechasTarjetasConvertidas1","fechasTarjetasConvertidasUnicas","startDate","sort","endDate","slice","fechastarjetasUnicasRango","isBefore","push","format","add","fechastarjetasUnicasRangoCut","Math","max","array1","item","index","estado","color","array1Acum","elem","reduce","a","b","array2","convertida","array2Acum","array3","array3Acum","arrayAcumFinal","ConvertidasData","x","Date","parseInt","y","arrayMonths","i","reverse","addCultureInfo","decimalSeparator","digitGroupSeparator","months","options","animationEnabled","culture","axisX","valueFormatString","interval","intervalType","axisY","suffix","lineColor","tickColor","labelFontColor","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","type","showInLegend","xValueFormatString","dataPoints","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nimport TableModalAutonomia from \"../tablemodalautonomia/TableModalAutonomia\";\nimport { Row, Col, Card, CardBody, Label, Input } from \"reactstrap\";\nimport moment from \"moment\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoAutonomia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      equipo: \"\",\n      numberMonths: \"12\",\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n  onChange = (e) => {\n    e.target.value === \"Seleccionar meses\"\n      ? this.setState({\n          [e.target.name]: 12,\n        })\n      : this.setState({\n          [e.target.name]: e.target.value,\n        });\n  };\n\n  render() {\n    const { tarjetas } = this.props;\n\n    var filter = {\n      equipo: this.state.equipo && this.state.equipo,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    console.log(newFilter);\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    // Formulas para \"Indice de autonomia\"\n\n    // Filtro todos los meses en el que hay tarjetas convertidas\n    const fechasTarjetasConvertidas = newFilter\n      // .filter(({ estado, convertida }) => convertida === true)\n      .map(({ fecha }) => fecha.substr(0, 7));\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n\n    const startDate = moment(fechasTarjetasConvertidasUnicas.sort()[0]);\n    const endDate = moment(fechasTarjetasConvertidasUnicas.sort().slice(-1)[1]);\n\n    const fechastarjetasUnicasRango = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greated than start date.\";\n    }\n\n    while (startDate.isBefore(endDate)) {\n      fechastarjetasUnicasRango.push(startDate.format(\"YYYY-MM\"));\n      startDate.add(1, \"month\");\n    }\n\n    const fechastarjetasUnicasRangoCut = fechastarjetasUnicasRango.slice(\n      Math.max(fechastarjetasUnicasRango.length - this.state.numberMonths, 0)\n    );\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array1 = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, color }) =>\n          color === \"Azul\" &&\n          estado === \"Cerrada\" &&\n          fecha.slice(0, 7) === item.slice(0, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array1Acum = array1.map((elem, index) =>\n      array1.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array2 = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, convertida }) =>\n          convertida === true &&\n          estado === \"Cerrada\" &&\n          fecha.slice(0, 7) === item.slice(0, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array2Acum = array2.map((elem, index) =>\n      array2.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    console.log(array2Acum);\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array3 = fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha }) =>\n          estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array3Acum = array3.map((elem, index) =>\n      array3.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let arrayAcumFinal = fechastarjetasUnicasRangoCut\n      .sort()\n      .map((item, index) => {\n        return (\n          ((array1Acum[index] + array2Acum[index]) / array3Acum[index]) * 100\n        );\n      });\n\n    console.log(arrayAcumFinal);\n\n    // Datos para el grafico\n    const ConvertidasData = [\n      fechastarjetasUnicasRangoCut.sort().map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: arrayAcumFinal[index],\n        };\n      }),\n    ];\n\n    const arrayMonths = [];\n\n    for (let i = 1; i < fechastarjetasUnicasRango.length + 1; i++) {\n      arrayMonths.push(i);\n    }\n\n    arrayMonths.reverse();\n\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\", // Observe ToolTip Number Format\n      digitGroupSeparator: \".\", // Observe axisY labels\n\n      months: [\n        \"Enero\",\n        \"Febrero\",\n        \"Marzo\",\n        \"Abril\",\n        \"Mayo\",\n        \"Junio\",\n        \"Julio\",\n        \"Agosto\",\n        \"Septiembre\",\n        \"Octubre\",\n        \"Noviembre\",\n        \"Diciembre\",\n      ],\n    });\n    const options = {\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n\n        interval: 1,\n        intervalType: \"month\",\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\",\n      },\n\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: \"#1BA7F7\",\n          type: \"column\",\n          name: \"Indice de autonomia\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n          dataPoints: ConvertidasData[0],\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <Row>\n          <Col lg={5} md={12} sm={12}>\n            <Card>\n              <CardBody>\n                <h3 className=\"mb-3\">Indice de autonomia</h3>\n\n                <CanvasJSChart\n                  culture=\"en\"\n                  options={options}\n                  onRef={(ref) => (this.chart = ref)}\n                />\n                <Input\n                  type=\"select\"\n                  name=\"numberMonths\"\n                  id=\"numberMonths\"\n                  className=\"mt-2\"\n                  onChange={this.onChange}\n                >\n                  <option>Seleccionar meses</option>\n                  {arrayMonths &&\n                    arrayMonths.map((item, index) => {\n                      return (\n                        <option key={index} value={item}>\n                          {`Ãšltimos ${item} meses`}\n                        </option>\n                      );\n                    })}\n                </Input>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={7} md={12} sm={12}>\n            <TableModalAutonomia\n              tarjetasFiltro1={arrayAcumFinal}\n              fechas={fechasTarjetasConvertidasUnicas}\n            ></TableModalAutonomia>\n\n            <Card>\n              <CardBody>\n                <h3>Filtros</h3>\n                <Label for=\"equipo\">Equipo</Label>\n                <Input\n                  type=\"select\"\n                  name=\"equipo\"\n                  id=\"equipo\"\n                  onChange={this.onChange}\n                >\n                  <option></option>\n                  {unicosEquipos.map((item, index) => {\n                    return <option key={index}>{item}</option>;\n                  })}\n                </Input>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default GraficoAutonomia;\n"]},"metadata":{},"sourceType":"module"}