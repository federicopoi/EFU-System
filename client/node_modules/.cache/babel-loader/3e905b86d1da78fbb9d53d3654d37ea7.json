{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/dasboard/mapasderiesgo/GraficoRiesgo.jsx\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nimport { Label, Input } from \"reactstrap\";\nimport TableModalAutonomia from \"../tablemodalautonomia/TableModalAutonomia\";\nimport { Row, Col, Card, CardBody } from \"reactstrap\";\nimport moment from \"moment\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoRiesgo extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      equipo: \"\"\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props;\n    var filter = {\n      equipo: this.state.equipo && this.state.equipo\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    console.log(newFilter);\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos)); // Formulas para \"Indice de autonomia\"\n    // Filtro todos los meses en el que hay tarjetas convertidas\n\n    const fechasTarjetasConvertidas = newFilter // .filter(({ estado, convertida }) => convertida === true)\n    .map(({\n      fecha\n    }) => fecha.substr(0, 7)); // Borro todos los meses repetidos\n\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n    const startDate = moment(fechasTarjetasConvertidasUnicas.sort()[0]);\n    const endDate = moment(fechasTarjetasConvertidasUnicas.sort().slice(-1)[1]);\n    const fechastarjetasUnicasRango = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greated than start date.\";\n    }\n\n    while (startDate.isBefore(endDate)) {\n      fechastarjetasUnicasRango.push(startDate.format(\"YYYY-MM\"));\n      startDate.add(1, \"month\");\n    }\n\n    console.log(fechastarjetasUnicasRango); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array1 = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        color\n      }) => color === \"Azul\" && estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array1Acum = array1.map((elem, index) => array1.slice(0, index + 1).reduce((a, b) => a + b));\n    console.log(array1Acum); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array2 = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha,\n        convertida\n      }) => convertida === true && estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array2Acum = array2.map((elem, index) => array2.slice(0, index + 1).reduce((a, b) => a + b));\n    console.log(array2Acum); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array3 = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(({\n        estado,\n        fecha\n      }) => estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)).length;\n    }); // Acumulado de tarjetas por mes\n\n    const array3Acum = array3.map((elem, index) => array3.slice(0, index + 1).reduce((a, b) => a + b));\n    console.log(array3Acum); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let arrayAcumFinal = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return (array1Acum[index] + array2Acum[index]) / array3Acum[index] * 100;\n    });\n    console.log(arrayAcumFinal); // Datos para el grafico\n\n    const ConvertidasData = [fechastarjetasUnicasRango.sort().map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: arrayAcumFinal[index]\n      };\n    })];\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\",\n      // Observe ToolTip Number Format\n      digitGroupSeparator: \".\",\n      // Observe axisY labels\n      months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\n    });\n    const options = {\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n        interval: 1,\n        intervalType: \"month\"\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: \"#1BA7F7\",\n        type: \"column\",\n        name: \"Indice de autonomia\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: ConvertidasData[0]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      md: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Tabla\"), /*#__PURE__*/React.createElement(TableModalAutonomia, {\n      tarjetasFiltro1: arrayAcumFinal,\n      fechas: fechasTarjetasConvertidasUnicas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \"Filtros\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"equipo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \"Equipo\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"equipo\",\n      id: \"equipo\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }), unicosEquipos.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 28\n        }\n      }, item);\n    })))))));\n  }\n\n}\nexport default GraficoRiesgo;","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/dasboard/mapasderiesgo/GraficoRiesgo.jsx"],"names":["React","Component","CanvasJSReact","Label","Input","TableModalAutonomia","Row","Col","Card","CardBody","moment","CanvasJSChart","CanvasJS","GraficoRiesgo","constructor","onChange","e","setState","target","name","value","state","equipo","toggleDataSeries","bind","dataSeries","visible","chart","render","tarjetas","props","filter","multiFilter","arr","filters","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","console","log","arrEquipos","map","unicosEquipos","Array","from","Set","fechasTarjetasConvertidas","fecha","substr","fechasTarjetasConvertidas1","fechasTarjetasConvertidasUnicas","startDate","sort","endDate","slice","fechastarjetasUnicasRango","isBefore","push","format","add","array1","item","index","estado","color","array1Acum","elem","reduce","a","b","array2","convertida","array2Acum","array3","array3Acum","arrayAcumFinal","ConvertidasData","x","Date","parseInt","y","addCultureInfo","decimalSeparator","digitGroupSeparator","months","options","animationEnabled","culture","axisX","valueFormatString","interval","intervalType","axisY","suffix","lineColor","tickColor","labelFontColor","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","type","showInLegend","xValueFormatString","dataPoints"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nimport { Label, Input } from \"reactstrap\";\nimport TableModalAutonomia from \"../tablemodalautonomia/TableModalAutonomia\";\nimport { Row, Col, Card, CardBody } from \"reactstrap\";\nimport moment from \"moment\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoRiesgo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      equipo: \"\",\n    };\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const { tarjetas } = this.props;\n\n    var filter = {\n      equipo: this.state.equipo && this.state.equipo,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    console.log(newFilter);\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    // Formulas para \"Indice de autonomia\"\n\n    // Filtro todos los meses en el que hay tarjetas convertidas\n    const fechasTarjetasConvertidas = newFilter\n      // .filter(({ estado, convertida }) => convertida === true)\n      .map(({ fecha }) => fecha.substr(0, 7));\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n\n    const startDate = moment(fechasTarjetasConvertidasUnicas.sort()[0]);\n    const endDate = moment(fechasTarjetasConvertidasUnicas.sort().slice(-1)[1]);\n\n    const fechastarjetasUnicasRango = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greated than start date.\";\n    }\n\n    while (startDate.isBefore(endDate)) {\n      fechastarjetasUnicasRango.push(startDate.format(\"YYYY-MM\"));\n      startDate.add(1, \"month\");\n    }\n\n    console.log(fechastarjetasUnicasRango);\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array1 = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, color }) =>\n          color === \"Azul\" &&\n          estado === \"Cerrada\" &&\n          fecha.slice(0, 7) === item.slice(0, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array1Acum = array1.map((elem, index) =>\n      array1.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    console.log(array1Acum);\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array2 = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha, convertida }) =>\n          convertida === true &&\n          estado === \"Cerrada\" &&\n          fecha.slice(0, 7) === item.slice(0, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array2Acum = array2.map((elem, index) =>\n      array2.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    console.log(array2Acum);\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array3 = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return newFilter.filter(\n        ({ estado, fecha }) =>\n          estado === \"Cerrada\" && fecha.slice(0, 7) === item.slice(0, 7)\n      ).length;\n    });\n\n    // Acumulado de tarjetas por mes\n    const array3Acum = array3.map((elem, index) =>\n      array3.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n\n    console.log(array3Acum);\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let arrayAcumFinal = fechastarjetasUnicasRango.sort().map((item, index) => {\n      return (\n        ((array1Acum[index] + array2Acum[index]) / array3Acum[index]) * 100\n      );\n    });\n\n    console.log(arrayAcumFinal);\n\n    // Datos para el grafico\n    const ConvertidasData = [\n      fechastarjetasUnicasRango.sort().map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: arrayAcumFinal[index],\n        };\n      }),\n    ];\n\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\", // Observe ToolTip Number Format\n      digitGroupSeparator: \".\", // Observe axisY labels\n\n      months: [\n        \"Enero\",\n        \"Febrero\",\n        \"Marzo\",\n        \"Abril\",\n        \"Mayo\",\n        \"Junio\",\n        \"Julio\",\n        \"Agosto\",\n        \"Septiembre\",\n        \"Octubre\",\n        \"Noviembre\",\n        \"Diciembre\",\n      ],\n    });\n    const options = {\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n\n        interval: 1,\n        intervalType: \"month\",\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\",\n      },\n\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: \"#1BA7F7\",\n          type: \"column\",\n          name: \"Indice de autonomia\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n          dataPoints: ConvertidasData[0],\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <Row>\n          <Col lg={8} md={12} sm={12}>\n            <Card>\n              <CardBody>\n                <h3>Tabla</h3>\n                <TableModalAutonomia\n                  tarjetasFiltro1={arrayAcumFinal}\n                  fechas={fechasTarjetasConvertidasUnicas}\n                ></TableModalAutonomia>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardBody>\n                <h3>Filtros</h3>\n                <Label for=\"equipo\">Equipo</Label>\n                <Input\n                  type=\"select\"\n                  name=\"equipo\"\n                  id=\"equipo\"\n                  onChange={this.onChange}\n                >\n                  <option></option>\n                  {unicosEquipos.map((item, index) => {\n                    return <option key={index}>{item}</option>;\n                  })}\n                </Input>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default GraficoRiesgo;\n"]},"metadata":{},"sourceType":"module"}