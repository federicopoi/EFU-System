{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/tarjetasamarillas/GraficoAmarillas.jsx\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport class GraficoAmarillas extends Component {\n  constructor() {\n    super();\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props; // Formulas para \"Amarillas acumuladas abiertas\"\n    // Filtro todos los meses en el que hay tarjetas abiertas amarillas\n\n    const fechasTarjetasAmarillas = tarjetas.filter(({\n      estado,\n      color\n    }) => estado === \"Abierto\" && color === \"Amarilla\").map(({\n      fecha\n    }) => fecha.substr(0, 7)); // Borro todos los meses repetidos\n\n    let fechasTarjetasAmarillas1 = new Set(fechasTarjetasAmarillas);\n    const fechasTarjetasAmarillasUnicas = [...fechasTarjetasAmarillas1];\n    let array = fechasTarjetasAmarillasUnicas.map((item, index) => {\n      return tarjetas.filter(({\n        estado,\n        fecha,\n        color\n      }) => color === \"Amarilla\" && estado === \"Abierto\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    });\n    console.log(array);\n    const newArr = array.map((elem, index) => array.slice(0, index + 1).reduce((a, b) => a + b));\n    const TodasFechasTotal = [fechasTarjetasAmarillasUnicas.sort().map((item, index) => {\n      const yNumber = tarjetas.filter(({\n        estado,\n        fecha,\n        color\n      }) => estado === \"Abierto\" && color === \"Amarilla\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: newArr[index]\n      };\n    })];\n    const options = {\n      animationEnabled: true,\n      axisX: {\n        valueFormatString: \"MMMM\"\n      },\n      axisY: {\n        title: \"Cantidad de tarjetas\",\n        lineColor: \"#4F81BC\",\n        tickColor: \"#4F81BC\",\n        labelFontColor: \"#4F81BC\"\n      },\n      axisY2: {\n        title: \"% de Cierre\",\n        suffix: \"%\",\n        lineColor: \"#C0504E\",\n        tickColor: \"#C0504E\",\n        labelFontColor: \"#C0504E\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: \"#DBE034\",\n        type: \"column\",\n        name: \"Amarillas acumuladas (abiertas)\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: TodasFechasTotal[0]\n      }, {\n        type: \"line\",\n        name: \"Porcentaje Amarillas Cerradas\",\n        showInLegend: true,\n        yValueFormatString: \"$#,##0\",\n        dataPoints: [{\n          x: new Date(2020, 0),\n          y: 7\n        }, {\n          x: new Date(2020, 1),\n          y: 5\n        }, {\n          x: new Date(2020, 2),\n          y: 6\n        }, {\n          x: new Date(2020, 3),\n          y: 7\n        }, {\n          x: new Date(2020, 4),\n          y: 8\n        }, {\n          x: new Date(2020, 5),\n          y: 5\n        }, {\n          x: new Date(2020, 6),\n          y: 3\n        }, {\n          x: new Date(2020, 7),\n          y: 5\n        }, {\n          x: new Date(2020, 8),\n          y: 2\n        }, {\n          x: new Date(2020, 9),\n          y: 2\n        }, {\n          x: new Date(2020, 10),\n          y: 4\n        }, {\n          x: new Date(2020, 11),\n          y: 3\n        }]\n      }, {\n        type: \"line\",\n        name: \"Porcentaje Amarillas Cerradas\",\n        showInLegend: true,\n        axisYType: \"secondary\",\n        yValueFormatString: \"$#,##0\",\n        dataPoints: [{\n          x: new Date(2020, 0),\n          y: 10\n        }, {\n          x: new Date(2020, 1),\n          y: 2\n        }, {\n          x: new Date(2020, 2),\n          y: 66\n        }, {\n          x: new Date(2020, 3),\n          y: 3\n        }, {\n          x: new Date(2020, 4),\n          y: 4\n        }, {\n          x: new Date(2020, 5),\n          y: 5\n        }, {\n          x: new Date(2020, 7),\n          y: 4\n        }, {\n          x: new Date(2020, 7),\n          y: 4\n        }, {\n          x: new Date(2020, 8),\n          y: 6\n        }, {\n          x: new Date(2020, 9),\n          y: 3\n        }, {\n          x: new Date(2020, 10),\n          y: 4\n        }, {\n          x: new Date(2020, 11),\n          y: 5\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default GraficoAmarillas;","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/tarjetasamarillas/GraficoAmarillas.jsx"],"names":["React","Component","CanvasJSReact","CanvasJSChart","GraficoAmarillas","constructor","toggleDataSeries","bind","e","dataSeries","visible","chart","render","tarjetas","props","fechasTarjetasAmarillas","filter","estado","color","map","fecha","substr","fechasTarjetasAmarillas1","Set","fechasTarjetasAmarillasUnicas","array","item","index","replace","slice","length","console","log","newArr","elem","reduce","a","b","TodasFechasTotal","sort","yNumber","x","Date","parseInt","y","options","animationEnabled","axisX","valueFormatString","axisY","title","lineColor","tickColor","labelFontColor","axisY2","suffix","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","type","name","showInLegend","xValueFormatString","dataPoints","yValueFormatString","axisYType","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport class GraficoAmarillas extends Component {\n  constructor() {\n    super();\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n  render() {\n    const { tarjetas } = this.props;\n\n    // Formulas para \"Amarillas acumuladas abiertas\"\n\n    // Filtro todos los meses en el que hay tarjetas abiertas amarillas\n    const fechasTarjetasAmarillas = tarjetas\n      .filter(\n        ({ estado, color }) => estado === \"Abierto\" && color === \"Amarilla\"\n      )\n      .map(({ fecha }) => fecha.substr(0, 7));\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasAmarillas1 = new Set(fechasTarjetasAmarillas);\n    const fechasTarjetasAmarillasUnicas = [...fechasTarjetasAmarillas1];\n\n    let array = fechasTarjetasAmarillasUnicas.map((item, index) => {\n      return tarjetas.filter(\n        ({ estado, fecha, color }) =>\n          color === \"Amarilla\" &&\n          estado === \"Abierto\" &&\n          fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n            item.slice(5, 7)\n      ).length;\n    });\n\n    console.log(array);\n\n    const newArr = array.map((elem, index) =>\n      array.slice(0, index + 1).reduce((a, b) => a + b)\n    );\n    const TodasFechasTotal = [\n      fechasTarjetasAmarillasUnicas.sort().map((item, index) => {\n        const yNumber = tarjetas.filter(\n          ({ estado, fecha, color }) =>\n            estado === \"Abierto\" &&\n            color === \"Amarilla\" &&\n            fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n              item.slice(5, 7)\n        ).length;\n\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: newArr[index],\n        };\n      }),\n    ];\n\n    const options = {\n      animationEnabled: true,\n\n      axisX: {\n        valueFormatString: \"MMMM\",\n      },\n      axisY: {\n        title: \"Cantidad de tarjetas\",\n        lineColor: \"#4F81BC\",\n        tickColor: \"#4F81BC\",\n        labelFontColor: \"#4F81BC\",\n      },\n      axisY2: {\n        title: \"% de Cierre\",\n        suffix: \"%\",\n\n        lineColor: \"#C0504E\",\n        tickColor: \"#C0504E\",\n        labelFontColor: \"#C0504E\",\n      },\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: \"#DBE034\",\n          type: \"column\",\n          name: \"Amarillas acumuladas (abiertas)\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n\n          dataPoints: TodasFechasTotal[0],\n        },\n        {\n          type: \"line\",\n\n          name: \"Porcentaje Amarillas Cerradas\",\n          showInLegend: true,\n          yValueFormatString: \"$#,##0\",\n          dataPoints: [\n            { x: new Date(2020, 0), y: 7 },\n            { x: new Date(2020, 1), y: 5 },\n            { x: new Date(2020, 2), y: 6 },\n            { x: new Date(2020, 3), y: 7 },\n            { x: new Date(2020, 4), y: 8 },\n            { x: new Date(2020, 5), y: 5 },\n            { x: new Date(2020, 6), y: 3 },\n            { x: new Date(2020, 7), y: 5 },\n            { x: new Date(2020, 8), y: 2 },\n            { x: new Date(2020, 9), y: 2 },\n            { x: new Date(2020, 10), y: 4 },\n            { x: new Date(2020, 11), y: 3 },\n          ],\n        },\n        {\n          type: \"line\",\n\n          name: \"Porcentaje Amarillas Cerradas\",\n          showInLegend: true,\n          axisYType: \"secondary\",\n          yValueFormatString: \"$#,##0\",\n          dataPoints: [\n            { x: new Date(2020, 0), y: 10 },\n            { x: new Date(2020, 1), y: 2 },\n            { x: new Date(2020, 2), y: 66 },\n            { x: new Date(2020, 3), y: 3 },\n            { x: new Date(2020, 4), y: 4 },\n            { x: new Date(2020, 5), y: 5 },\n            { x: new Date(2020, 7), y: 4 },\n            { x: new Date(2020, 7), y: 4 },\n            { x: new Date(2020, 8), y: 6 },\n            { x: new Date(2020, 9), y: 3 },\n            { x: new Date(2020, 10), y: 4 },\n            { x: new Date(2020, 11), y: 5 },\n          ],\n        },\n      ],\n    };\n    return (\n      <div>\n        <CanvasJSChart options={options} onRef={(ref) => (this.chart = ref)} />\n      </div>\n    );\n  }\n}\n\nexport default GraficoAmarillas;\n"]},"metadata":{},"sourceType":"module"}