{"ast":null,"code":"import { GET_TARJETAS, CARGANDO_TARJETAS, AGREGAR_TARJETA, CERRAR_TARJETA, BORRAR_TARJETA, AGREGAR_TARJETA_AMARILLA, CERRAR_TARJETA_AMARILLA, EDITAR_TARJETA } from \"../actions/types\";\nconst initState = {\n  tarjetas: [],\n  cargando: false,\n  agregarsuccess: false\n};\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_TARJETAS:\n      return { ...state,\n        tarjetas: action.payload,\n        cargando: false,\n        agregarsuccess: false\n      };\n\n    case AGREGAR_TARJETA:\n    case AGREGAR_TARJETA_AMARILLA:\n      return { ...state,\n        tarjetas: [action.payload, ...state.tarjetas],\n        agregarsuccess: true\n      };\n\n    case CERRAR_TARJETA:\n    case CERRAR_TARJETA_AMARILLA:\n    case EDITAR_TARJETA:\n      return Object.assign({}, state, {\n        tarjetas: state.tarjetas.map(tarjeta => {\n          return tarjeta._id === action.payload._id ? action.payload : tarjeta;\n        }),\n        // replace matched item and returns the array\n        agregarsuccess: true\n      });\n\n    case BORRAR_TARJETA:\n      return { ...state,\n        tarjetas: state.tarjetas.filter(tarjeta => tarjeta._id !== action.payload)\n      };\n\n    case CARGANDO_TARJETAS:\n      return { ...state,\n        cargando: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/fedepoi/cofco-tpm/client/src/store/reducers/tarjetaReducer.js"],"names":["GET_TARJETAS","CARGANDO_TARJETAS","AGREGAR_TARJETA","CERRAR_TARJETA","BORRAR_TARJETA","AGREGAR_TARJETA_AMARILLA","CERRAR_TARJETA_AMARILLA","EDITAR_TARJETA","initState","tarjetas","cargando","agregarsuccess","state","action","type","payload","Object","assign","map","tarjeta","_id","filter"],"mappings":"AAAA,SACEA,YADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,wBANF,EAOEC,uBAPF,EAQEC,cARF,QASO,kBATP;AAUA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,QAAQ,EAAE,KAFM;AAGhBC,EAAAA,cAAc,EAAE;AAHA,CAAlB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,SAAlB,EAA6BK,MAA7B,EAAqC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAFZ;AAGLL,QAAAA,QAAQ,EAAE,KAHL;AAILC,QAAAA,cAAc,EAAE;AAJX,OAAP;;AAMF,SAAKT,eAAL;AACA,SAAKG,wBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,QAA1B,CAFL;AAGLE,QAAAA,cAAc,EAAE;AAHX,OAAP;;AAKF,SAAKR,cAAL;AACA,SAAKG,uBAAL;AACA,SAAKC,cAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeS,GAAf,CAAoBC,OAAD,IAAa;AACxC,iBAAOA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACE,OAAP,CAAeK,GAA/B,GAAqCP,MAAM,CAACE,OAA5C,GAAsDI,OAA7D;AACD,SAFS,CADoB;AAG1B;AACJR,QAAAA,cAAc,EAAE;AAJc,OAAzB,CAAP;;AAMF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeY,MAAf,CACPF,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACE,OAD5B;AAFL,OAAP;;AAMF,SAAKd,iBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF;AACE,aAAOE,KAAP;AArCJ;AAuCD","sourcesContent":["import {\n  GET_TARJETAS,\n  CARGANDO_TARJETAS,\n  AGREGAR_TARJETA,\n  CERRAR_TARJETA,\n  BORRAR_TARJETA,\n  AGREGAR_TARJETA_AMARILLA,\n  CERRAR_TARJETA_AMARILLA,\n  EDITAR_TARJETA,\n} from \"../actions/types\";\nconst initState = {\n  tarjetas: [],\n  cargando: false,\n  agregarsuccess: false,\n};\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_TARJETAS:\n      return {\n        ...state,\n        tarjetas: action.payload,\n        cargando: false,\n        agregarsuccess: false,\n      };\n    case AGREGAR_TARJETA:\n    case AGREGAR_TARJETA_AMARILLA:\n      return {\n        ...state,\n        tarjetas: [action.payload, ...state.tarjetas],\n        agregarsuccess: true,\n      };\n    case CERRAR_TARJETA:\n    case CERRAR_TARJETA_AMARILLA:\n    case EDITAR_TARJETA:\n      return Object.assign({}, state, {\n        tarjetas: state.tarjetas.map((tarjeta) => {\n          return tarjeta._id === action.payload._id ? action.payload : tarjeta;\n        }), // replace matched item and returns the array\n        agregarsuccess: true,\n      });\n    case BORRAR_TARJETA:\n      return {\n        ...state,\n        tarjetas: state.tarjetas.filter(\n          (tarjeta) => tarjeta._id !== action.payload\n        ),\n      };\n    case CARGANDO_TARJETAS:\n      return {\n        ...state,\n        cargando: true,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}