{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/projecto-tpm/client/src/components/tarjetas/MisTarjetasFiltro.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { agregarFilter, getFilters } from \"../../store/actions/filterActions\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\nimport { Card, CardBody, Row, Col, Table, Container, Input, Label, Button, Form } from \"reactstrap\";\nimport Select from \"react-select\";\nimport PresetModal from \"./PresetModal\";\nconst options = [{\n  value: \"numero\",\n  label: \"NÂ°\"\n}, {\n  value: \"color\",\n  label: \"Color\"\n}, {\n  value: \"prioridad\",\n  label: \"Prioridad\"\n}, {\n  value: \"equipo\",\n  label: \"Equipo Autonomo\"\n}, {\n  value: \"fecha\",\n  label: \"Fecha apertura\"\n}, {\n  value: \"descripcion\",\n  label: \"Descripcion anomalia\"\n}, {\n  value: \"estado\",\n  label: \"Estado actual\"\n}, {\n  value: \"maquina\",\n  label: \"Maquina / Instalacion\"\n}, {\n  value: \"detecto\",\n  label: \"Detecto\"\n}, {\n  value: \"familia\",\n  label: \"Familia de anomalia\"\n}, {\n  value: \"tipodeRiesgo\",\n  label: \"Tipo de Riesgo\"\n}];\n\nclass MisTarjetasFiltro extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null,\n      numero: \"\",\n      color: \"\",\n      equipo: \"\",\n      prioridad: \"\",\n      fecha: \"\",\n      descripcion: \"\",\n      estado: \"\",\n      maquina: \"\",\n      detecto: \"\",\n      familia: \"\",\n      tipodeRiesgo: \"\",\n      qrcode: false\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.onChange = e => {\n      if ([e.target.name] === \"familia\") {\n        this.setState({\n          [e.target.name]: e.target.value + this.state[e.target.name]\n        });\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTarjetas();\n    this.props.getFilters();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props.tarjetas;\n    const {\n      filters\n    } = this.props.filters;\n    const {\n      selectedOption\n    } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n      maquina: this.state.maquina && this.state.maquina,\n      detecto: this.state.detecto && this.state.detecto,\n      familia: this.state.familia && this.state.familia,\n      tipodeRiesgo: this.state.tipodeRiesgo && this.state.tipodeRiesgo\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter(eachObj => {\n        return filterKeys.every(eachKey => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n\n    const newFilter = multiFilter(tarjetas, filter);\n    const arrNumero = tarjetas.map(({\n      numero\n    }) => numero);\n    const unicosNumero = Array.from(new Set(arrNumero));\n    const arrColores = tarjetas.map(({\n      color\n    }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n    const arrEquipos = tarjetas.map(({\n      equipo\n    }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n    const arrPrioridad = tarjetas.map(({\n      prioridad\n    }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n    const arrFecha = tarjetas.map(({\n      fecha\n    }) => fecha);\n    const unicosFecha = Array.from(new Set(arrFecha));\n    const arrDescripcion = tarjetas.map(({\n      descripcion\n    }) => descripcion);\n    const unicosDescripcion = Array.from(new Set(arrDescripcion));\n    const arrEstado = tarjetas.map(({\n      estado\n    }) => estado);\n    const unicosEstado = Array.from(new Set(arrEstado));\n    const arrMaquina = tarjetas.map(({\n      maquina\n    }) => maquina);\n    const unicosMaquina = Array.from(new Set(arrMaquina));\n    const arrDetecto = tarjetas.map(({\n      detecto\n    }) => detecto);\n    const unicosDetecto = Array.from(new Set(arrDetecto));\n    const arrFamilia = tarjetas.map(({\n      familia\n    }) => familia);\n    const unicosFamilia = Array.from(new Set(arrFamilia));\n    const arrTipo = tarjetas.map(({\n      tipodeRiesgo\n    }) => tipodeRiesgo);\n    const unicosTipo = Array.from(new Set(arrTipo));\n    const globalArray = {\n      numero: unicosNumero,\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n      fecha: unicosFecha,\n      estado: unicosEstado,\n      descripcion: unicosDescripcion,\n      maquina: unicosMaquina,\n      detecto: unicosDetecto,\n      familia: unicosFamilia,\n      tipo: unicosTipo\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, \"Tabla dinamica de tarjetas\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto d-flex no-block align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      className: \"btn btn-info\",\n      table: \"emp\",\n      filename: \"ReporteTarjetas\",\n      sheet: \"Tarjetas\",\n      buttonText: \"Exportar excel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, \"Seleccionar elementos para la tabla\"), /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: \"Seleccionar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, filters && filters.map(({\n      nombre,\n      selectedOption,\n      numero,\n      color,\n      equipo,\n      prioridad,\n      fecha,\n      descripcion,\n      estado,\n      maquina,\n      detecto,\n      familia,\n      qrcode\n    }) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        className: \"my-2 mx-2\",\n        onClick: () => {\n          this.setState({\n            selectedOption,\n            numero,\n            color,\n            equipo,\n            prioridad,\n            fecha,\n            descripcion,\n            estado,\n            maquina,\n            detecto,\n            familia,\n            qrcode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 27\n        }\n      }, nombre);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, \"Filtrar elementos\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto d-flex no-block align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"qrcode\",\n      name: \"qrcode\",\n      onChange: e => {\n        this.onChange({\n          target: {\n            name: e.target.name,\n            value: e.target.checked\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }), \"Qr Code\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"ml-3\",\n      onClick: () => {\n        this.setState({\n          numero: \"\",\n          color: \"\",\n          prioridad: \"\",\n          equipo: \"\",\n          fecha: \"\",\n          estado: \"\",\n          descripcion: \"\",\n          maquina: \"\",\n          detecto: \"\",\n          familia: \"\",\n          selectedOption: null\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PresetModal, {\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, selectedOption && selectedOption.map(({\n      label,\n      value\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }\n      }, label), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: value,\n        id: value,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 31\n        }\n      }), globalArray[value].map(item => /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 33\n        }\n      }, item))))));\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"no-wrap v-middle\",\n      responsive: true,\n      id: \"emp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 23\n      }\n    }, selectedOption && selectedOption.map(({\n      value,\n      label\n    }) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 36\n        }\n      }, label);\n    }), this.state.qrcode && /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 27\n      }\n    }, \"QR Code\"))), newFilter && newFilter.map((item, index) => {\n      const link = window.location.href.replace(\"/tarjetasfiltro\", \"/tarjeta/\");\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 29\n        }\n      }, selectedOption && selectedOption.map(({\n        value,\n        label\n      }, index) => {\n        return item[label] === \"fecha\" ? /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 39\n          }\n        }, moment(item[value]).fromNow()) : /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 39\n          }\n        }, item[value]);\n      }), this.state.qrcode && /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        value: link + item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 35\n        }\n      }, \"Tarjeta \", item.color, \" N\\xB0\", item.numero))));\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas,\n    filters: state.filters,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas,\n  agregarFilter,\n  getFilters\n})(MisTarjetasFiltro);","map":{"version":3,"sources":["/Users/fedepoi/projecto-tpm/client/src/components/tarjetas/MisTarjetasFiltro.jsx"],"names":["React","Component","connect","getTarjetas","agregarFilter","getFilters","ReactHTMLTableToExcel","QRCode","moment","Card","CardBody","Row","Col","Table","Container","Input","Label","Button","Form","Select","PresetModal","options","value","label","MisTarjetasFiltro","state","selectedOption","numero","color","equipo","prioridad","fecha","descripcion","estado","maquina","detecto","familia","tipodeRiesgo","qrcode","handleChange","setState","onChange","e","target","name","componentDidMount","props","render","tarjetas","filters","filter","multiFilter","arr","filterKeys","Object","keys","eachObj","every","eachKey","length","includes","newFilter","arrNumero","map","unicosNumero","Array","from","Set","arrColores","unicosColores","arrEquipos","unicosEquipos","arrPrioridad","unicosPrioridad","arrFecha","unicosFecha","arrDescripcion","unicosDescripcion","arrEstado","unicosEstado","arrMaquina","unicosMaquina","arrDetecto","unicosDetecto","arrFamilia","unicosFamilia","arrTipo","unicosTipo","globalArray","tipo","nombre","checked","onSubmit","item","index","link","window","location","href","replace","fromNow","_id","mapStateToProps","user","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { agregarFilter, getFilters } from \"../../store/actions/filterActions\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  Table,\n  Container,\n  Input,\n  Label,\n  Button,\n  Form,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport PresetModal from \"./PresetModal\";\n\nconst options = [\n  { value: \"numero\", label: \"NÂ°\" },\n  { value: \"color\", label: \"Color\" },\n  { value: \"prioridad\", label: \"Prioridad\" },\n  { value: \"equipo\", label: \"Equipo Autonomo\" },\n  { value: \"fecha\", label: \"Fecha apertura\" },\n  { value: \"descripcion\", label: \"Descripcion anomalia\" },\n  { value: \"estado\", label: \"Estado actual\" },\n  { value: \"maquina\", label: \"Maquina / Instalacion\" },\n  { value: \"detecto\", label: \"Detecto\" },\n  { value: \"familia\", label: \"Familia de anomalia\" },\n  { value: \"tipodeRiesgo\", label: \"Tipo de Riesgo\" },\n];\nclass MisTarjetasFiltro extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n    this.props.getFilters();\n  }\n  state = {\n    selectedOption: null,\n    numero: \"\",\n    color: \"\",\n    equipo: \"\",\n    prioridad: \"\",\n    fecha: \"\",\n    descripcion: \"\",\n    estado: \"\",\n    maquina: \"\",\n    detecto: \"\",\n    familia: \"\",\n    tipodeRiesgo: \"\",\n    qrcode: false,\n  };\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  onChange = (e) => {\n    if ([e.target.name] === \"familia\") {\n      this.setState({\n        [e.target.name]: e.target.value + this.state[e.target.name],\n      });\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  render() {\n    const { tarjetas } = this.props.tarjetas;\n    const { filters } = this.props.filters;\n    const { selectedOption } = this.state;\n    var filter = {\n      numero: this.state.numero && this.state.numero,\n      color: this.state.color && this.state.color,\n      equipo: this.state.equipo && this.state.equipo,\n      prioridad: this.state.prioridad && this.state.prioridad,\n      fecha: this.state.fecha && this.state.fecha,\n      descripcion: this.state.descripcion && this.state.descripcion,\n      estado: this.state.estado && this.state.estado,\n      maquina: this.state.maquina && this.state.maquina,\n      detecto: this.state.detecto && this.state.detecto,\n      familia: this.state.familia && this.state.familia,\n      tipodeRiesgo: this.state.tipodeRiesgo && this.state.tipodeRiesgo,\n    };\n\n    const multiFilter = (arr, filters) => {\n      const filterKeys = Object.keys(filters);\n      return arr.filter((eachObj) => {\n        return filterKeys.every((eachKey) => {\n          if (!filters[eachKey].length) {\n            return true; // passing an empty filter means that filter is ignored.\n          }\n          return filters[eachKey].includes(eachObj[eachKey]);\n        });\n      });\n    };\n    const newFilter = multiFilter(tarjetas, filter);\n\n    const arrNumero = tarjetas.map(({ numero }) => numero);\n    const unicosNumero = Array.from(new Set(arrNumero));\n\n    const arrColores = tarjetas.map(({ color }) => color);\n    const unicosColores = Array.from(new Set(arrColores));\n\n    const arrEquipos = tarjetas.map(({ equipo }) => equipo);\n    const unicosEquipos = Array.from(new Set(arrEquipos));\n\n    const arrPrioridad = tarjetas.map(({ prioridad }) => prioridad);\n    const unicosPrioridad = Array.from(new Set(arrPrioridad));\n\n    const arrFecha = tarjetas.map(({ fecha }) => fecha);\n    const unicosFecha = Array.from(new Set(arrFecha));\n\n    const arrDescripcion = tarjetas.map(({ descripcion }) => descripcion);\n    const unicosDescripcion = Array.from(new Set(arrDescripcion));\n\n    const arrEstado = tarjetas.map(({ estado }) => estado);\n    const unicosEstado = Array.from(new Set(arrEstado));\n\n    const arrMaquina = tarjetas.map(({ maquina }) => maquina);\n    const unicosMaquina = Array.from(new Set(arrMaquina));\n\n    const arrDetecto = tarjetas.map(({ detecto }) => detecto);\n    const unicosDetecto = Array.from(new Set(arrDetecto));\n\n    const arrFamilia = tarjetas.map(({ familia }) => familia);\n    const unicosFamilia = Array.from(new Set(arrFamilia));\n\n    const arrTipo = tarjetas.map(({ tipodeRiesgo }) => tipodeRiesgo);\n    const unicosTipo = Array.from(new Set(arrTipo));\n\n    const globalArray = {\n      numero: unicosNumero,\n      color: unicosColores,\n      prioridad: unicosPrioridad,\n      equipo: unicosEquipos,\n      fecha: unicosFecha,\n      estado: unicosEstado,\n      descripcion: unicosDescripcion,\n      maquina: unicosMaquina,\n      detecto: unicosDetecto,\n      familia: unicosFamilia,\n      tipo: unicosTipo,\n    };\n\n    return (\n      <div>\n        <div className=\"page-wrapper d-block\">\n          <div className=\"page-content container-fluid\">\n            <Container>\n              <Row>\n                <Col>\n                  <div className=\"d-flex align-items-center\">\n                    <div className=\"\">\n                      <h2 className=\"mb-3\">Tabla dinamica de tarjetas</h2>\n                    </div>\n                    <div className=\"ml-auto d-flex no-block align-items-center\">\n                      <div className=\"dl\">\n                        <ReactHTMLTableToExcel\n                          className=\"btn btn-info\"\n                          table=\"emp\"\n                          filename=\"ReporteTarjetas\"\n                          sheet=\"Tarjetas\"\n                          buttonText=\"Exportar excel\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              <div className=\"mb-3\">\n                <h5>Seleccionar elementos para la tabla</h5>\n                <Select\n                  value={selectedOption}\n                  onChange={this.handleChange}\n                  options={options}\n                  isMulti\n                  placeholder=\"Seleccionar\"\n                />\n              </div>\n\n              <Row>\n                <Col>\n                  {filters &&\n                    filters.map(\n                      ({\n                        nombre,\n                        selectedOption,\n                        numero,\n                        color,\n                        equipo,\n                        prioridad,\n                        fecha,\n                        descripcion,\n                        estado,\n                        maquina,\n                        detecto,\n                        familia,\n                        qrcode,\n                      }) => {\n                        return (\n                          <Button\n                            className=\"my-2 mx-2\"\n                            onClick={() => {\n                              this.setState({\n                                selectedOption,\n                                numero,\n                                color,\n                                equipo,\n                                prioridad,\n                                fecha,\n                                descripcion,\n                                estado,\n                                maquina,\n                                detecto,\n                                familia,\n                                qrcode,\n                              });\n                            }}\n                          >\n                            {nombre}\n                          </Button>\n                        );\n                      }\n                    )}\n                </Col>\n              </Row>\n\n              <div className=\"d-flex align-items-center\">\n                <div className=\"\">\n                  <div>\n                    <h5>Filtrar elementos</h5>\n                  </div>\n                </div>\n                <div className=\"ml-auto d-flex no-block align-items-center\">\n                  <Label check>\n                    <Input\n                      type=\"checkbox\"\n                      id=\"qrcode\"\n                      name=\"qrcode\"\n                      onChange={(e) => {\n                        this.onChange({\n                          target: {\n                            name: e.target.name,\n                            value: e.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                    Qr Code\n                  </Label>\n                  <Button\n                    className=\"ml-3\"\n                    onClick={() => {\n                      this.setState({\n                        numero: \"\",\n                        color: \"\",\n                        prioridad: \"\",\n                        equipo: \"\",\n                        fecha: \"\",\n                        estado: \"\",\n                        descripcion: \"\",\n                        maquina: \"\",\n                        detecto: \"\",\n                        familia: \"\",\n                        selectedOption: null,\n                      });\n                    }}\n                  >\n                    Reset\n                  </Button>\n                  <Form onSubmit={this.onSubmit}>\n                    <PresetModal state={this.state}></PresetModal>\n                  </Form>\n                </div>\n              </div>\n              <Row className=\"mb-3\">\n                {selectedOption &&\n                  selectedOption.map(({ label, value }) => {\n                    return (\n                      <div>\n                        <Col>\n                          <div>\n                            <Label for=\"color\">{label}</Label>\n                            <Input\n                              type=\"select\"\n                              name={value}\n                              id={value}\n                              onChange={this.onChange}\n                            >\n                              <option></option>\n                              {globalArray[value].map((item) => (\n                                <option>{item}</option>\n                              ))}\n                            </Input>\n                          </div>\n                        </Col>\n                      </div>\n                    );\n                  })}\n              </Row>\n\n              <Card>\n                <CardBody>\n                  <Table className=\"no-wrap v-middle\" responsive id=\"emp\">\n                    <thead>\n                      <tr className=\"border-0\">\n                        {selectedOption &&\n                          selectedOption.map(({ value, label }) => {\n                            return <th className=\"border-0\">{label}</th>;\n                          })}\n                        {this.state.qrcode && (\n                          <th className=\"border-0\">QR Code</th>\n                        )}\n                      </tr>\n                    </thead>\n\n                    {newFilter &&\n                      newFilter.map((item, index) => {\n                        const link = window.location.href.replace(\n                          \"/tarjetasfiltro\",\n                          \"/tarjeta/\"\n                        );\n\n                        return (\n                          <tbody key={index}>\n                            <tr>\n                              {selectedOption &&\n                                selectedOption.map(\n                                  ({ value, label }, index) => {\n                                    return item[label] === \"fecha\" ? (\n                                      <td key={index}>\n                                        {moment(item[value]).fromNow()}\n                                      </td>\n                                    ) : (\n                                      <td key={index}>{item[value]}</td>\n                                    );\n                                  }\n                                )}\n                              {this.state.qrcode && (\n                                <td>\n                                  <QRCode value={link + item._id} />\n                                  <h4 className=\"mt-3\">\n                                    Tarjeta {item.color} NÂ°{item.numero}\n                                  </h4>\n                                </td>\n                              )}\n                            </tr>\n                          </tbody>\n                        );\n                      })}\n                  </Table>\n                </CardBody>\n              </Card>\n            </Container>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n    filters: state.filters,\n    user: state.auth.user,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas,\n  agregarFilter,\n  getFilters,\n})(MisTarjetasFiltro);\n"]},"metadata":{},"sourceType":"module"}