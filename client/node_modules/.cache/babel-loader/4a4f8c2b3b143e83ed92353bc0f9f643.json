{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/tarjetas/MisTarjetas.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { loadUser } from \"../../store/actions/authActions\";\nimport { Card, CardBody, Row, Col, Table, Button, Container } from \"reactstrap\";\nimport moment from \"moment\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort,\n    sortConfig\n  };\n};\n\nexport const TarjetasTable = props => {\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSortableData(props.tarjetas);\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  const [count, setCount] = useState({\n    prev: 0,\n    next: 100\n  });\n  const [hasMore, setHasMore] = useState(true);\n  const [current, setCurrent] = useState(items.slice(count.prev, count.next));\n\n  const getMoreData = () => {\n    if (current.length === items.length) {\n      setHasMore(false);\n      return;\n    }\n\n    setTimeout(() => {\n      setCurrent(current.concat(items.slice(count.prev + 100, count.next + 100)));\n    }, 2000);\n    setCount(prevState => ({\n      prev: prevState.prev + 100,\n      next: prevState.next + 100\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-wrapper d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-sm-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, \"Tarjetas\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto d-sm-flex no-block align-items-center mb-3 d-sm-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Todas las tarjetas en la base de datos\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto d-sm-flex no-block align-items-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/agregartarjeta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Agregar Tarjeta\"))))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"no-wrap v-middle\",\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, \"N\\xB0\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"numero\"),\n    className: getClassNamesFor(\"numero\"),\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, \"Color\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"color\"),\n    className: getClassNamesFor(\"color\"),\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }, \"Equipo autonomo\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"equipo\"),\n    className: getClassNamesFor(\"equipo\"),\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, \"Prioridad\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"prioridad\"),\n    className: getClassNamesFor(\"prioridad\"),\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }, \"Fecha apertura\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"fecha\"),\n    color: \"link\",\n    className: getClassNamesFor(\"fecha\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 23\n    }\n  }, \"Descripcion anomalia\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"descripcion\"),\n    color: \"link\",\n    className: getClassNamesFor(\"descripcion\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }, \"Estado actual\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => requestSort(\"estado\"),\n    color: \"link\",\n    className: getClassNamesFor(\"estado\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  })))), current && current.map(({\n    numero,\n    color,\n    prioridad,\n    equipo,\n    fecha,\n    descripcion,\n    estado,\n    _id\n  }) => {\n    const timeDiferrence = moment().diff(fecha, \"days\");\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex no-block align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/tarjeta/${_id}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-0 font-16 font-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 39\n      }\n    }, numero)))))));\n  })), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: current.length,\n    next: getMoreData,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 27\n      }\n    }, \"Cargando...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }), props.tarjetas && props.tarjetas.map(({\n    estado,\n    color,\n    detecto,\n    numero,\n    descripcion,\n    prioridad,\n    familia,\n    fecha,\n    maquina,\n    parteMaquina,\n    equipo,\n    sugerencia,\n    tipodeRiesgo,\n    riesgoInicial,\n    sustoExperimentado,\n    sustoObservado,\n    impactoAmbiente,\n    planta,\n    photo\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, color === \"Azul\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"trapezoidAzul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }), color === \"Verde\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"trapezoidVerde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 29\n      }\n    }), color === \"Roja\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"trapezoidRojo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }), color === \"Amarilla\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"trapezoidAmarilla\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"my-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-16 font-medium text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 35\n      }\n    }, \"Descripci\\xF3n:\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-14 font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 35\n      }\n    }, descripcion)))), color === \"Azul\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"rectangleAzul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 31\n      }\n    }), color === \"Verde\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"rectangleVerde text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 31\n      }\n    }), color === \"Roja\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"rectangleRojo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 31\n      }\n    }), color === \"Amarilla\" && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"rectangleAmarilla\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 31\n      }\n    })));\n  })))))));\n};\nexport class MisTarjetas extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n    this.props.loadUser();\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (this.props.isAuthenticated === false && this.props.isLoading === false) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 14\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TarjetasTable, {\n      tarjetas: this.props.tarjetas.tarjetas,\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tarjetas: state.tarjetas,\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTarjetas,\n  loadUser\n})(MisTarjetas);","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/tarjetas/MisTarjetas.jsx"],"names":["React","Component","useState","connect","getTarjetas","loadUser","Card","CardBody","Row","Col","Table","Button","Container","moment","Link","Redirect","InfiniteScroll","useSortableData","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","TarjetasTable","props","tarjetas","getClassNamesFor","name","undefined","count","setCount","prev","next","hasMore","setHasMore","current","setCurrent","slice","getMoreData","length","setTimeout","concat","prevState","map","numero","color","prioridad","equipo","fecha","descripcion","estado","_id","timeDiferrence","diff","pathname","detecto","familia","maquina","parteMaquina","sugerencia","tipodeRiesgo","riesgoInicial","sustoExperimentado","sustoObservado","impactoAmbiente","planta","photo","MisTarjetas","componentDidMount","window","scrollTo","render","isAuthenticated","isLoading","user","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTarjetas } from \"../../store/actions/tarjetaActions\";\nimport { loadUser } from \"../../store/actions/authActions\";\nimport { Card, CardBody, Row, Col, Table, Button, Container } from \"reactstrap\";\nimport moment from \"moment\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nexport const TarjetasTable = (props) => {\n  const { items, requestSort, sortConfig } = useSortableData(props.tarjetas);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  const [count, setCount] = useState({\n    prev: 0,\n    next: 100,\n  });\n  const [hasMore, setHasMore] = useState(true);\n  const [current, setCurrent] = useState(items.slice(count.prev, count.next));\n  const getMoreData = () => {\n    if (current.length === items.length) {\n      setHasMore(false);\n      return;\n    }\n    setTimeout(() => {\n      setCurrent(\n        current.concat(items.slice(count.prev + 100, count.next + 100))\n      );\n    }, 2000);\n    setCount((prevState) => ({\n      prev: prevState.prev + 100,\n      next: prevState.next + 100,\n    }));\n  };\n\n  return (\n    <div>\n      <div className=\"page-wrapper d-block\">\n        <div className=\"page-content container-fluid\">\n          <Container>\n            <Row>\n              <Col>\n                <div className=\"d-sm-flex align-items-center\">\n                  <div className=\"\">\n                    <div>\n                      <h2 className=\"mb-3\">Tarjetas</h2>\n                    </div>\n\n                    <div className=\"ml-auto d-sm-flex no-block align-items-center mb-3 d-sm-flex\">\n                      <div className=\"dl\">\n                        <h5 className=\"font-weight-normal\">\n                          Todas las tarjetas en la base de datos\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"ml-auto d-sm-flex no-block align-items-center mb-3\">\n                    <Col>\n                      <Link to=\"/agregartarjeta\">\n                        <Button color=\"success\" className=\"btn\">\n                          Agregar Tarjeta\n                        </Button>\n                      </Link>\n                    </Col>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n\n            <Card>\n              <CardBody>\n                <Table className=\"no-wrap v-middle\" responsive>\n                  <thead>\n                    <tr className=\"border-0\">\n                      <th className=\"border-0\">\n                        N°\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"numero\")}\n                          className={getClassNamesFor(\"numero\")}\n                          color=\"link\"\n                        ></Button>\n                      </th>\n                      <th className=\"border-0\">\n                        Color\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"color\")}\n                          className={getClassNamesFor(\"color\")}\n                          color=\"link\"\n                        ></Button>\n                      </th>\n                      <th className=\"border-0\">\n                        Equipo autonomo\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"equipo\")}\n                          className={getClassNamesFor(\"equipo\")}\n                          color=\"link\"\n                        ></Button>\n                      </th>\n                      <th className=\"border-0\">\n                        Prioridad\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"prioridad\")}\n                          className={getClassNamesFor(\"prioridad\")}\n                          color=\"link\"\n                        ></Button>\n                      </th>\n\n                      <th className=\"border-0\">\n                        Fecha apertura\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"fecha\")}\n                          color=\"link\"\n                          className={getClassNamesFor(\"fecha\")}\n                        ></Button>\n                      </th>\n                      <th className=\"border-0\">\n                        Descripcion anomalia\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"descripcion\")}\n                          color=\"link\"\n                          className={getClassNamesFor(\"descripcion\")}\n                        ></Button>\n                      </th>\n                      <th className=\"border-0\">\n                        Estado actual\n                        <Button\n                          type=\"button\"\n                          onClick={() => requestSort(\"estado\")}\n                          color=\"link\"\n                          className={getClassNamesFor(\"estado\")}\n                        ></Button>\n                      </th>\n                    </tr>\n                  </thead>\n                  {current &&\n                    current.map(\n                      ({\n                        numero,\n                        color,\n                        prioridad,\n                        equipo,\n                        fecha,\n                        descripcion,\n                        estado,\n                        _id,\n                      }) => {\n                        const timeDiferrence = moment().diff(fecha, \"days\");\n                        return (\n                          <tbody key={_id}>\n                            <tr>\n                              <td>\n                                <div className=\"d-flex no-block align-items-center\">\n                                  <div className=\"\">\n                                    <Link to={{ pathname: `/tarjeta/${_id}` }}>\n                                      <h5 className=\"mb-0 font-16 font-medium\">\n                                        {numero}\n                                      </h5>\n                                    </Link>\n                                  </div>\n                                </div>\n                              </td>\n                            </tr>\n                          </tbody>\n                        );\n                      }\n                    )}\n                </Table>\n                <InfiniteScroll\n                  dataLength={current.length}\n                  next={getMoreData}\n                  hasMore={hasMore}\n                  loader={<h4>Cargando...</h4>}\n                ></InfiniteScroll>\n                {props.tarjetas &&\n                  props.tarjetas.map(\n                    ({\n                      estado,\n                      color,\n                      detecto,\n                      numero,\n                      descripcion,\n                      prioridad,\n                      familia,\n                      fecha,\n                      maquina,\n                      parteMaquina,\n                      equipo,\n                      sugerencia,\n                      tipodeRiesgo,\n                      riesgoInicial,\n                      sustoExperimentado,\n                      sustoObservado,\n                      impactoAmbiente,\n                      planta,\n                      photo,\n                    }) => {\n                      return (\n                        <div>\n                          {color === \"Azul\" && (\n                            <div class=\"trapezoidAzul\"></div>\n                          )}\n                          {color === \"Verde\" && (\n                            <div class=\"trapezoidVerde\"></div>\n                          )}\n                          {color === \"Roja\" && (\n                            <div class=\"trapezoidRojo\"></div>\n                          )}\n                          {color === \"Amarilla\" && (\n                            <div class=\"trapezoidAmarilla\"></div>\n                          )}\n\n                          <Card className=\"card\">\n                            <CardBody>\n                              <Row className=\"my-3 text-center\">\n                                <Col>\n                                  <h5 className=\"font-16 font-medium text-center\">\n                                    Descripción:\n                                  </h5>\n                                </Col>\n                              </Row>\n\n                              <Row className=\"text-center\">\n                                <Col>\n                                  <h5 className=\"font-14 font-weight-normal\">\n                                    {descripcion}\n                                  </h5>\n                                </Col>\n                              </Row>\n                            </CardBody>\n                            {color === \"Azul\" && (\n                              <div class=\"rectangleAzul\"></div>\n                            )}\n                            {color === \"Verde\" && (\n                              <div class=\"rectangleVerde text-center\"></div>\n                            )}\n                            {color === \"Roja\" && (\n                              <div class=\"rectangleRojo\"></div>\n                            )}\n                            {color === \"Amarilla\" && (\n                              <div class=\"rectangleAmarilla\"></div>\n                            )}\n                          </Card>\n                        </div>\n                      );\n                    }\n                  )}\n              </CardBody>\n            </Card>\n          </Container>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport class MisTarjetas extends Component {\n  componentDidMount() {\n    this.props.getTarjetas();\n    this.props.loadUser();\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (this.props.isAuthenticated === false && this.props.isLoading === false)\n      return <Redirect to=\"/login\" />;\n\n    return (\n      <div>\n        <TarjetasTable\n          tarjetas={this.props.tarjetas.tarjetas}\n          user={this.props.user}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tarjetas: state.tarjetas,\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    user: state.auth.user,\n  };\n};\nexport default connect(mapStateToProps, { getTarjetas, loadUser })(MisTarjetas);\n"]},"metadata":{},"sourceType":"module"}