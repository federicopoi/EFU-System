{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/efu-system/client/src/components/detalletarjeta/cerrartarjeta/CerrarTarjetaAmarillaModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { cerrarTarjetaAmarilla } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, Label, Input, FormGroup, Alert } from \"reactstrap\";\nexport class CerrarTarjetaAmarillaModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        formValues\n      } = this.state;\n      formValues[target.name] = target.value;\n      this.setState({\n        formValues\n      });\n      this.handleValidation(target);\n    };\n\n    this.handleValidation = target => {\n      const {\n        name,\n        value\n      } = target;\n      const fieldValidationErrors = this.state.formErrors;\n      const validity = this.state.formValidity;\n      const isEmail = name === \"email\";\n      const isPassword = name === \"password\";\n      const isInicioReparacion = name === \"inicioReparacionDia\";\n      const isFinReparacion = name === \"finReparacionDia\";\n      const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      validity[name] = value.length > 0;\n      fieldValidationErrors[name] = validity[name] ? \"\" : \"Este campo es requerido y no puede estar vacio\";\n\n      if (validity[name]) {\n        if (isEmail) {\n          validity[name] = emailTest.test(value);\n          fieldValidationErrors[name] = validity[name] ? \"\" : `${name} should be a valid email address`;\n        }\n\n        if (isPassword) {\n          validity[name] = value.length >= 3;\n          fieldValidationErrors[name] = validity[name] ? \"\" : `${name} should be 3 characters minimum`;\n        }\n\n        if (isInicioReparacion) {\n          validity[name] = value > this.props.fecha;\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"Inicio de reparacion tiene que ser posterior a fecha creada.\";\n        }\n\n        if (isFinReparacion) {\n          validity[name] = value > this.props.fecha;\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"Fin de reparacion tiene que ser posterior a fecha creada.\";\n        }\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        formValidity: validity\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      const {\n        formValues,\n        formValidity\n      } = this.state;\n\n      if (Object.values(formValidity).every(Boolean)) {\n        // Here is when the validate comes\n        this.setState({\n          isSubmitting: false\n        });\n        const {\n          _id,\n          finReparacionDia,\n          finReparacionHora,\n          responsable,\n          tareaRealizada,\n          riesgoFinal,\n          accionesComplementarias,\n          tipoAccion,\n          causa\n        } = this.state.formValues; // Cerrar Tarjeta\n\n        const tarjetaActualizada = {\n          _id,\n          finReparacion: finReparacionDia + \" \" + finReparacionHora,\n          responsable,\n          tareaRealizada,\n          tipoAccion,\n          riesgoFinal,\n          accionesComplementarias,\n          tipoAccion,\n          causa,\n          convertida: this.state.convertida,\n          verificacion: this.state.verificacion\n        };\n        this.props.cerrarTarjetaAmarilla(tarjetaActualizada);\n      } else {\n        for (let key in formValues) {\n          let target = {\n            name: key,\n            value: formValues[key]\n          };\n          this.handleValidation(target);\n        }\n\n        this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      formValues: {\n        _id: this.props._id,\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        tareaRealizada: \"\",\n        riesgoFinal: \"\",\n        accionesComplementarias: \"\",\n        tipoAccion: \"\",\n        causa: \"\"\n      },\n      formErrors: {\n        _id: this.props._id,\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        tareaRealizada: \"\",\n        riesgoFinal: \"\",\n        accionesComplementarias: \"\",\n        tipoAccion: \"\",\n        causa: \"\"\n      },\n      formValidity: {\n        _id: this.props._id,\n        finReparacionDia: false,\n        finReparacionHora: false,\n        responsable: false,\n        tareaRealizada: false,\n        riesgoFinal: false,\n        accionesComplementarias: false,\n        tipoAccion: false,\n        causa: false\n      },\n      isSubmitting: false,\n      modal: false,\n      convertida: false,\n      verificacion: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n\n  render() {\n    const {\n      campos\n    } = this.props.campos;\n    const {\n      formValues,\n      formErrors,\n      isSubmitting\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.toggle,\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, \"Cerrar Tarjeta\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Cerrar Tarjeta\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"accionRealizada\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Acci\\xF3n Realizada\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      type: \"text\",\n      value: formValues.tareaRealizada,\n      name: \"tareaRealizada\",\n      id: \"tareaRealizada\",\n      className: \"mb-2\",\n      className: `form-control ${formErrors.tareaRealizada ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, formErrors.tareaRealizada), /*#__PURE__*/React.createElement(Label, {\n      for: \"tipoAccion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, \"Tipo de acci\\xF3n a realizar *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tipoAccion\",\n      id: \"tipoAccion\",\n      className: \"mb-2\",\n      value: formValues.tipoAccion,\n      onChange: this.handleChange,\n      className: `form-control ${formErrors.tipoAccion ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, \"Eliminar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, \"Contener\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, \"Reemplazar\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, \"Simplificar\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, formErrors.tipoAccion), /*#__PURE__*/React.createElement(Label, {\n      for: \"responsable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, \"Responsable\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.responsable,\n      type: \"text\",\n      name: \"responsable\",\n      id: \"responsable\",\n      className: \"mb-2\",\n      className: `form-control ${formErrors.responsable ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, formErrors.responsable), /*#__PURE__*/React.createElement(Label, {\n      for: \"responsable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, \"Causa\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.causa,\n      type: \"text\",\n      name: \"causa\",\n      id: \"causa\",\n      className: \"mb-2\",\n      className: `form-control ${formErrors.causa ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, formErrors.causa), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, \"Fecha de terminacion\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.finReparacionDia,\n      type: \"date\",\n      name: \"finReparacionDia\",\n      id: \"finReparacionDia\",\n      className: \"mb-2\",\n      className: `form-control ${formErrors.finReparacionDia ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, formErrors.finReparacionDia), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.finReparacionHora,\n      type: \"time\",\n      name: \"finReparacionHora\",\n      id: \"finReparacionHora\",\n      className: \"mb-2\",\n      className: `form-control ${formErrors.finReparacionHora ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, formErrors.finReparacionHora), /*#__PURE__*/React.createElement(Label, {\n      for: \"detecto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, \"Riesgo Final\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"riesgoFinal\",\n      id: \"riesgoFinal\",\n      onChange: this.handleChange,\n      value: formValues.riesgoFinal,\n      className: `form-control ${formErrors.riesgoFinal ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, \"Seleccionar\"), campos && campos.filter(({\n      name,\n      value\n    }) => {\n      return name === \"riesgoFinal\";\n    }).map(({\n      name,\n      value,\n      _id\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        _id: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 27\n        }\n      }, value);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, formErrors.riesgoFinal), /*#__PURE__*/React.createElement(Label, {\n      for: \"updaters\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, \"Acciones Complementarias\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"accionesComplementarias\",\n      id: \"accionesComplementarias\",\n      className: \"mb-2\",\n      value: formValues.accionesComplementarias,\n      className: `form-control ${formErrors.accionesComplementarias ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, formErrors.accionesComplementarias), /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"verificacion\",\n      name: \"verificacion\",\n      onChange: () => {\n        this.setState({\n          verificacion: !this.state.verificacion\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }), \"Verificaci\\xF3n: (Resp. Pilar de seguridad)\")), /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"convertida\",\n      name: \"convertida\",\n      onChange: () => {\n        this.setState({\n          convertida: !this.state.convertida\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }), \"Tarjeta Convertida\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      block: true,\n      style: {\n        marginTop: \"2rem\"\n      },\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }, isSubmitting ? \"Por favor espere...\" : \"Subir\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  campos: state.campos\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  cerrarTarjetaAmarilla,\n  getCampos\n})(CerrarTarjetaAmarillaModal);","map":{"version":3,"sources":["/Users/fedepoi/efu-system/client/src/components/detalletarjeta/cerrartarjeta/CerrarTarjetaAmarillaModal.jsx"],"names":["React","Component","connect","clearErrors","cerrarTarjetaAmarilla","getCampos","Button","Modal","ModalHeader","ModalBody","Form","Label","Input","FormGroup","Alert","CerrarTarjetaAmarillaModal","constructor","props","handleChange","target","formValues","state","name","value","setState","handleValidation","fieldValidationErrors","formErrors","validity","formValidity","isEmail","isPassword","isInicioReparacion","isFinReparacion","emailTest","length","test","fecha","handleSubmit","event","preventDefault","isSubmitting","Object","values","every","Boolean","_id","finReparacionDia","finReparacionHora","responsable","tareaRealizada","riesgoFinal","accionesComplementarias","tipoAccion","causa","tarjetaActualizada","finReparacion","convertida","verificacion","key","toggle","modal","componentDidMount","render","campos","cursor","filter","map","index","marginTop","mapStateToProps","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,qBAAT,QAAsC,uCAAtC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,SARF,EASEC,KATF,QAUO,YAVP;AAWA,OAAO,MAAMC,0BAAN,SAAyCd,SAAzC,CAAmD;AACxDe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0CnBC,YA1CmB,GA0CJ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACAD,MAAAA,UAAU,CAACD,MAAM,CAACG,IAAR,CAAV,GAA0BH,MAAM,CAACI,KAAjC;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACA,WAAKK,gBAAL,CAAsBN,MAAtB;AACD,KA/CkB;;AAAA,SAiDnBM,gBAjDmB,GAiDCN,MAAD,IAAY;AAC7B,YAAM;AAAEG,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBJ,MAAxB;AACA,YAAMO,qBAAqB,GAAG,KAAKL,KAAL,CAAWM,UAAzC;AACA,YAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWQ,YAA5B;AACA,YAAMC,OAAO,GAAGR,IAAI,KAAK,OAAzB;AACA,YAAMS,UAAU,GAAGT,IAAI,KAAK,UAA5B;AACA,YAAMU,kBAAkB,GAAGV,IAAI,KAAK,qBAApC;AACA,YAAMW,eAAe,GAAGX,IAAI,KAAK,kBAAjC;AACA,YAAMY,SAAS,GAAG,gCAAlB;AAEAN,MAAAA,QAAQ,CAACN,IAAD,CAAR,GAAiBC,KAAK,CAACY,MAAN,GAAe,CAAhC;AACAT,MAAAA,qBAAqB,CAACJ,IAAD,CAArB,GAA8BM,QAAQ,CAACN,IAAD,CAAR,GAC1B,EAD0B,GAE1B,gDAFJ;;AAIA,UAAIM,QAAQ,CAACN,IAAD,CAAZ,EAAoB;AAClB,YAAIQ,OAAJ,EAAa;AACXF,UAAAA,QAAQ,CAACN,IAAD,CAAR,GAAiBY,SAAS,CAACE,IAAV,CAAeb,KAAf,CAAjB;AACAG,UAAAA,qBAAqB,CAACJ,IAAD,CAArB,GAA8BM,QAAQ,CAACN,IAAD,CAAR,GAC1B,EAD0B,GAEzB,GAAEA,IAAK,kCAFZ;AAGD;;AACD,YAAIS,UAAJ,EAAgB;AACdH,UAAAA,QAAQ,CAACN,IAAD,CAAR,GAAiBC,KAAK,CAACY,MAAN,IAAgB,CAAjC;AACAT,UAAAA,qBAAqB,CAACJ,IAAD,CAArB,GAA8BM,QAAQ,CAACN,IAAD,CAAR,GAC1B,EAD0B,GAEzB,GAAEA,IAAK,iCAFZ;AAGD;;AACD,YAAIU,kBAAJ,EAAwB;AACtBJ,UAAAA,QAAQ,CAACN,IAAD,CAAR,GAAiBC,KAAK,GAAG,KAAKN,KAAL,CAAWoB,KAApC;AACAX,UAAAA,qBAAqB,CAACJ,IAAD,CAArB,GAA8BM,QAAQ,CAACN,IAAD,CAAR,GAC1B,EAD0B,GAE1B,8DAFJ;AAGD;;AACD,YAAIW,eAAJ,EAAqB;AACnBL,UAAAA,QAAQ,CAACN,IAAD,CAAR,GAAiBC,KAAK,GAAG,KAAKN,KAAL,CAAWoB,KAApC;AACAX,UAAAA,qBAAqB,CAACJ,IAAD,CAArB,GAA8BM,QAAQ,CAACN,IAAD,CAAR,GAC1B,EAD0B,GAE1B,2DAFJ;AAGD;AACF;;AAED,WAAKE,QAAL,CAAc;AACZG,QAAAA,UAAU,EAAED,qBADA;AAEZG,QAAAA,YAAY,EAAED;AAFF,OAAd;AAID,KA/FkB;;AAAA,SAiGnBU,YAjGmB,GAiGHC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKhB,QAAL,CAAc;AAAEiB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,YAAM;AAAErB,QAAAA,UAAF;AAAcS,QAAAA;AAAd,UAA+B,KAAKR,KAA1C;;AACA,UAAIqB,MAAM,CAACC,MAAP,CAAcd,YAAd,EAA4Be,KAA5B,CAAkCC,OAAlC,CAAJ,EAAgD;AAC9C;AACA,aAAKrB,QAAL,CAAc;AAAEiB,UAAAA,YAAY,EAAE;AAAhB,SAAd;AAEA,cAAM;AACJK,UAAAA,GADI;AAEJC,UAAAA,gBAFI;AAGJC,UAAAA,iBAHI;AAIJC,UAAAA,WAJI;AAKJC,UAAAA,cALI;AAMJC,UAAAA,WANI;AAOJC,UAAAA,uBAPI;AAQJC,UAAAA,UARI;AASJC,UAAAA;AATI,YAUF,KAAKjC,KAAL,CAAWD,UAVf,CAJ8C,CAgB9C;;AACA,cAAMmC,kBAAkB,GAAG;AACzBT,UAAAA,GADyB;AAEzBU,UAAAA,aAAa,EAAET,gBAAgB,GAAG,GAAnB,GAAyBC,iBAFf;AAGzBC,UAAAA,WAHyB;AAIzBC,UAAAA,cAJyB;AAKzBG,UAAAA,UALyB;AAMzBF,UAAAA,WANyB;AAOzBC,UAAAA,uBAPyB;AAQzBC,UAAAA,UARyB;AASzBC,UAAAA,KATyB;AAUzBG,UAAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWoC,UAVE;AAWzBC,UAAAA,YAAY,EAAE,KAAKrC,KAAL,CAAWqC;AAXA,SAA3B;AAcA,aAAKzC,KAAL,CAAWb,qBAAX,CAAiCmD,kBAAjC;AACD,OAhCD,MAgCO;AACL,aAAK,IAAII,GAAT,IAAgBvC,UAAhB,EAA4B;AAC1B,cAAID,MAAM,GAAG;AACXG,YAAAA,IAAI,EAAEqC,GADK;AAEXpC,YAAAA,KAAK,EAAEH,UAAU,CAACuC,GAAD;AAFN,WAAb;AAIA,eAAKlC,gBAAL,CAAsBN,MAAtB;AACD;;AACD,aAAKK,QAAL,CAAc;AAAEiB,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KA/IkB;;AAAA,SAiJnBmB,MAjJmB,GAiJV,MAAM;AACb,WAAKpC,QAAL,CAAc;AACZqC,QAAAA,KAAK,EAAE,CAAC,KAAKxC,KAAL,CAAWwC;AADP,OAAd;AAGD,KArJkB;;AAEjB,SAAKxC,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE;AACV0B,QAAAA,GAAG,EAAE,KAAK7B,KAAL,CAAW6B,GADN;AAEVC,QAAAA,gBAAgB,EAAE,EAFR;AAGVC,QAAAA,iBAAiB,EAAE,EAHT;AAIVC,QAAAA,WAAW,EAAE,EAJH;AAKVC,QAAAA,cAAc,EAAE,EALN;AAMVC,QAAAA,WAAW,EAAE,EANH;AAOVC,QAAAA,uBAAuB,EAAE,EAPf;AAQVC,QAAAA,UAAU,EAAE,EARF;AASVC,QAAAA,KAAK,EAAE;AATG,OADD;AAYX3B,MAAAA,UAAU,EAAE;AACVmB,QAAAA,GAAG,EAAE,KAAK7B,KAAL,CAAW6B,GADN;AAEVC,QAAAA,gBAAgB,EAAE,EAFR;AAGVC,QAAAA,iBAAiB,EAAE,EAHT;AAIVC,QAAAA,WAAW,EAAE,EAJH;AAKVC,QAAAA,cAAc,EAAE,EALN;AAMVC,QAAAA,WAAW,EAAE,EANH;AAOVC,QAAAA,uBAAuB,EAAE,EAPf;AAQVC,QAAAA,UAAU,EAAE,EARF;AASVC,QAAAA,KAAK,EAAE;AATG,OAZD;AAuBXzB,MAAAA,YAAY,EAAE;AACZiB,QAAAA,GAAG,EAAE,KAAK7B,KAAL,CAAW6B,GADJ;AAEZC,QAAAA,gBAAgB,EAAE,KAFN;AAGZC,QAAAA,iBAAiB,EAAE,KAHP;AAIZC,QAAAA,WAAW,EAAE,KAJD;AAKZC,QAAAA,cAAc,EAAE,KALJ;AAMZC,QAAAA,WAAW,EAAE,KAND;AAOZC,QAAAA,uBAAuB,EAAE,KAPb;AAQZC,QAAAA,UAAU,EAAE,KARA;AASZC,QAAAA,KAAK,EAAE;AATK,OAvBH;AAkCXb,MAAAA,YAAY,EAAE,KAlCH;AAmCXoB,MAAAA,KAAK,EAAE,KAnCI;AAoCXJ,MAAAA,UAAU,EAAE,KApCD;AAqCXC,MAAAA,YAAY,EAAE;AArCH,KAAb;AAuCD;;AA8GDI,EAAAA,iBAAiB,GAAG;AAClB,SAAK7C,KAAL,CAAWZ,SAAX;AACD;;AACD0D,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAK/C,KAAL,CAAW+C,MAA9B;AACA,UAAM;AAAE5C,MAAAA,UAAF;AAAcO,MAAAA,UAAd;AAA0Bc,MAAAA;AAA1B,QAA2C,KAAKpB,KAAtD;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,OAAO,EAAE,KAAKuC,MAAjB;AAAyB,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAhC;AAAuD,MAAA,SAAS,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK5C,KAAL,CAAWwC,KAA1B;AAAiC,MAAA,MAAM,EAAE,KAAKD,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKtB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKpB,YADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEE,UAAU,CAAC8B,cAHpB;AAIE,MAAA,IAAI,EAAC,gBAJP;AAKE,MAAA,EAAE,EAAC,gBALL;AAME,MAAA,SAAS,EAAC,MANZ;AAOE,MAAA,SAAS,EAAG,gBACVvB,UAAU,CAACuB,cAAX,GAA4B,YAA5B,GAA2C,MAC5C,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAaE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,UAAU,CAACuB,cADd,CAbF,eAgBE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAhBF,eAiBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,EAAE,EAAC,YAHL;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,KAAK,EAAE9B,UAAU,CAACiC,UALpB;AAME,MAAA,QAAQ,EAAE,KAAKnC,YANjB;AAOE,MAAA,SAAS,EAAG,gBACVS,UAAU,CAAC0B,UAAX,GAAwB,YAAxB,GAAuC,MACxC,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfF,CAjBF,eAkCE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1B,UAAU,CAAC0B,UADd,CAlCF,eAqCE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArCF,eAsCE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKnC,YADjB;AAEE,MAAA,KAAK,EAAEE,UAAU,CAAC6B,WAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,aAJP;AAKE,MAAA,EAAE,EAAC,aALL;AAME,MAAA,SAAS,EAAC,MANZ;AAOE,MAAA,SAAS,EAAG,gBACVtB,UAAU,CAACsB,WAAX,GAAyB,YAAzB,GAAwC,MACzC,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,eAiDE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtB,UAAU,CAACsB,WADd,CAjDF,eAoDE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApDF,eAqDE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAK/B,YADjB;AAEE,MAAA,KAAK,EAAEE,UAAU,CAACkC,KAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,EAAE,EAAC,OALL;AAME,MAAA,SAAS,EAAC,MANZ;AAOE,MAAA,SAAS,EAAG,gBACV3B,UAAU,CAAC2B,KAAX,GAAmB,YAAnB,GAAkC,MACnC,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArDF,eAgEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC3B,UAAU,CAAC2B,KAAnD,CAhEF,eAiEE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAjEF,eAkEE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKpC,YADjB;AAEE,MAAA,KAAK,EAAEE,UAAU,CAAC2B,gBAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,kBAJP;AAKE,MAAA,EAAE,EAAC,kBALL;AAME,MAAA,SAAS,EAAC,MANZ;AAOE,MAAA,SAAS,EAAG,gBACVpB,UAAU,CAACoB,gBAAX,GAA8B,YAA9B,GAA6C,MAC9C,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlEF,eA6EE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,UAAU,CAACoB,gBADd,CA7EF,eAgFE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAK7B,YADjB;AAEE,MAAA,KAAK,EAAEE,UAAU,CAAC4B,iBAFpB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,mBAJP;AAKE,MAAA,EAAE,EAAC,mBALL;AAME,MAAA,SAAS,EAAC,MANZ;AAOE,MAAA,SAAS,EAAG,gBACVrB,UAAU,CAACqB,iBAAX,GAA+B,YAA/B,GAA8C,MAC/C,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhFF,eA2FE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,UAAU,CAACqB,iBADd,CA3FF,eA+FE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA/FF,eAgGE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,QAAQ,EAAE,KAAK9B,YAJjB;AAKE,MAAA,KAAK,EAAEE,UAAU,CAAC+B,WALpB;AAME,MAAA,SAAS,EAAG,gBACVxB,UAAU,CAACwB,WAAX,GAAyB,YAAzB,GAAwC,MACzC,EARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,EAWGa,MAAM,IACLA,MAAM,CACHE,MADH,CACU,CAAC;AAAE5C,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAqB;AAC3B,aAAOD,IAAI,KAAK,aAAhB;AACD,KAHH,EAIG6C,GAJH,CAIO,CAAC;AAAE7C,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeuB,MAAAA;AAAf,KAAD,EAAuBsB,KAAvB,KAAiC;AACpC,0BACE;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,GAAG,EAAEtB,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGvB,KADH,CADF;AAKD,KAVH,CAZJ,CAhGF,eAwHE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,UAAU,CAACwB,WADd,CAxHF,eA4HE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA5HF,eA+HE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKjC,YADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,yBAHP;AAIE,MAAA,EAAE,EAAC,yBAJL;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,KAAK,EAAEE,UAAU,CAACgC,uBANpB;AAOE,MAAA,SAAS,EAAG,gBACVzB,UAAU,CAACyB,uBAAX,GAAqC,YAArC,GAAoD,MACrD,EATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/HF,eA0IE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,UAAU,CAACyB,uBADd,CA1IF,eA8IE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,QAAQ,EAAE,MAAM;AACd,aAAK5B,QAAL,CAAc;AACZkC,UAAAA,YAAY,EAAE,CAAC,KAAKrC,KAAL,CAAWqC;AADd,SAAd;AAGD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gDADF,CA9IF,eA8JE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,QAAQ,EAAE,MAAM;AACd,aAAKlC,QAAL,CAAc;AACZiC,UAAAA,UAAU,EAAE,CAAC,KAAKpC,KAAL,CAAWoC;AADZ,SAAd;AAGD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,uBADF,CA9JF,eA8KE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAHT;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,SAAS,EAAC,2BALZ;AAME,MAAA,QAAQ,EAAE5B,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGA,YAAY,GAAG,qBAAH,GAA2B,OAR1C,CA9KF,CADF,CADF,CAFF,CAJF,CADF;AAuMD;;AArWuD;;AAuW1D,MAAM6B,eAAe,GAAIjD,KAAD,KAAY;AAClCkD,EAAAA,KAAK,EAAElD,KAAK,CAACkD,KADqB;AAElCP,EAAAA,MAAM,EAAE3C,KAAK,CAAC2C;AAFoB,CAAZ,CAAxB;;AAIA,eAAe9D,OAAO,CAACoE,eAAD,EAAkB;AACtCnE,EAAAA,WADsC;AAEtCC,EAAAA,qBAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZU,0BAJY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { cerrarTarjetaAmarilla } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  FormGroup,\n  Alert,\n} from \"reactstrap\";\nexport class CerrarTarjetaAmarillaModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        _id: this.props._id,\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        tareaRealizada: \"\",\n        riesgoFinal: \"\",\n        accionesComplementarias: \"\",\n        tipoAccion: \"\",\n        causa: \"\",\n      },\n      formErrors: {\n        _id: this.props._id,\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        tareaRealizada: \"\",\n        riesgoFinal: \"\",\n        accionesComplementarias: \"\",\n        tipoAccion: \"\",\n        causa: \"\",\n      },\n      formValidity: {\n        _id: this.props._id,\n        finReparacionDia: false,\n        finReparacionHora: false,\n        responsable: false,\n        tareaRealizada: false,\n        riesgoFinal: false,\n        accionesComplementarias: false,\n        tipoAccion: false,\n        causa: false,\n      },\n      isSubmitting: false,\n      modal: false,\n      convertida: false,\n      verificacion: false,\n    };\n  }\n  handleChange = ({ target }) => {\n    const { formValues } = this.state;\n    formValues[target.name] = target.value;\n    this.setState({ formValues });\n    this.handleValidation(target);\n  };\n\n  handleValidation = (target) => {\n    const { name, value } = target;\n    const fieldValidationErrors = this.state.formErrors;\n    const validity = this.state.formValidity;\n    const isEmail = name === \"email\";\n    const isPassword = name === \"password\";\n    const isInicioReparacion = name === \"inicioReparacionDia\";\n    const isFinReparacion = name === \"finReparacionDia\";\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    validity[name] = value.length > 0;\n    fieldValidationErrors[name] = validity[name]\n      ? \"\"\n      : \"Este campo es requerido y no puede estar vacio\";\n\n    if (validity[name]) {\n      if (isEmail) {\n        validity[name] = emailTest.test(value);\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be a valid email address`;\n      }\n      if (isPassword) {\n        validity[name] = value.length >= 3;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be 3 characters minimum`;\n      }\n      if (isInicioReparacion) {\n        validity[name] = value > this.props.fecha;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : \"Inicio de reparacion tiene que ser posterior a fecha creada.\";\n      }\n      if (isFinReparacion) {\n        validity[name] = value > this.props.fecha;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : \"Fin de reparacion tiene que ser posterior a fecha creada.\";\n      }\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      formValidity: validity,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ isSubmitting: true });\n    const { formValues, formValidity } = this.state;\n    if (Object.values(formValidity).every(Boolean)) {\n      // Here is when the validate comes\n      this.setState({ isSubmitting: false });\n\n      const {\n        _id,\n        finReparacionDia,\n        finReparacionHora,\n        responsable,\n        tareaRealizada,\n        riesgoFinal,\n        accionesComplementarias,\n        tipoAccion,\n        causa,\n      } = this.state.formValues;\n\n      // Cerrar Tarjeta\n      const tarjetaActualizada = {\n        _id,\n        finReparacion: finReparacionDia + \" \" + finReparacionHora,\n        responsable,\n        tareaRealizada,\n        tipoAccion,\n        riesgoFinal,\n        accionesComplementarias,\n        tipoAccion,\n        causa,\n        convertida: this.state.convertida,\n        verificacion: this.state.verificacion,\n      };\n\n      this.props.cerrarTarjetaAmarilla(tarjetaActualizada);\n    } else {\n      for (let key in formValues) {\n        let target = {\n          name: key,\n          value: formValues[key],\n        };\n        this.handleValidation(target);\n      }\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n  render() {\n    const { campos } = this.props.campos;\n    const { formValues, formErrors, isSubmitting } = this.state;\n    return (\n      <div>\n        <p onClick={this.toggle} style={{ cursor: \"pointer\" }} className=\"my-3\">\n          Cerrar Tarjeta\n        </p>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Cerrar Tarjeta</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup>\n                <Label for=\"accionRealizada\">Acción Realizada</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  value={formValues.tareaRealizada}\n                  name=\"tareaRealizada\"\n                  id=\"tareaRealizada\"\n                  className=\"mb-2\"\n                  className={`form-control ${\n                    formErrors.tareaRealizada ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.tareaRealizada}\n                </div>\n                <Label for=\"tipoAccion\">Tipo de acción a realizar *</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tipoAccion\"\n                  id=\"tipoAccion\"\n                  className=\"mb-2\"\n                  value={formValues.tipoAccion}\n                  onChange={this.handleChange}\n                  className={`form-control ${\n                    formErrors.tipoAccion ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                >\n                  <option>Seleccionar</option>\n                  <option>Eliminar</option>\n                  <option>Contener</option>\n                  <option>Reemplazar</option>\n                  <option>Simplificar</option>\n                </Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.tipoAccion}\n                </div>\n                <Label for=\"responsable\">Responsable</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.responsable}\n                  type=\"text\"\n                  name=\"responsable\"\n                  id=\"responsable\"\n                  className=\"mb-2\"\n                  className={`form-control ${\n                    formErrors.responsable ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.responsable}\n                </div>\n                <Label for=\"responsable\">Causa</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.causa}\n                  type=\"text\"\n                  name=\"causa\"\n                  id=\"causa\"\n                  className=\"mb-2\"\n                  className={`form-control ${\n                    formErrors.causa ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">{formErrors.causa}</div>\n                <Label for=\"updaters\">Fecha de terminacion</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.finReparacionDia}\n                  type=\"date\"\n                  name=\"finReparacionDia\"\n                  id=\"finReparacionDia\"\n                  className=\"mb-2\"\n                  className={`form-control ${\n                    formErrors.finReparacionDia ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.finReparacionDia}\n                </div>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.finReparacionHora}\n                  type=\"time\"\n                  name=\"finReparacionHora\"\n                  id=\"finReparacionHora\"\n                  className=\"mb-2\"\n                  className={`form-control ${\n                    formErrors.finReparacionHora ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.finReparacionHora}\n                </div>\n\n                <Label for=\"detecto\">Riesgo Final</Label>\n                <Input\n                  type=\"select\"\n                  name=\"riesgoFinal\"\n                  id=\"riesgoFinal\"\n                  onChange={this.handleChange}\n                  value={formValues.riesgoFinal}\n                  className={`form-control ${\n                    formErrors.riesgoFinal ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                >\n                  <option>Seleccionar</option>\n                  {campos &&\n                    campos\n                      .filter(({ name, value }) => {\n                        return name === \"riesgoFinal\";\n                      })\n                      .map(({ name, value, _id }, index) => {\n                        return (\n                          <option key={index} _id={_id}>\n                            {value}\n                          </option>\n                        );\n                      })}\n                </Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.riesgoFinal}\n                </div>\n\n                <Label for=\"updaters\" className=\"mt-3\">\n                  Acciones Complementarias\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"accionesComplementarias\"\n                  id=\"accionesComplementarias\"\n                  className=\"mb-2\"\n                  value={formValues.accionesComplementarias}\n                  className={`form-control ${\n                    formErrors.accionesComplementarias ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.accionesComplementarias}\n                </div>\n\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      type=\"checkbox\"\n                      id=\"verificacion\"\n                      name=\"verificacion\"\n                      onChange={() => {\n                        this.setState({\n                          verificacion: !this.state.verificacion,\n                        });\n                      }}\n                    />\n                    Verificación: (Resp. Pilar de seguridad)\n                  </Label>\n                </FormGroup>\n\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      type=\"checkbox\"\n                      id=\"convertida\"\n                      name=\"convertida\"\n                      onChange={() => {\n                        this.setState({\n                          convertida: !this.state.convertida,\n                        });\n                      }}\n                    />\n                    Tarjeta Convertida\n                  </Label>\n                </FormGroup>\n\n                <Button\n                  color=\"dark\"\n                  block\n                  style={{ marginTop: \"2rem\" }}\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? \"Por favor espere...\" : \"Subir\"}\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  error: state.error,\n  campos: state.campos,\n});\nexport default connect(mapStateToProps, {\n  clearErrors,\n  cerrarTarjetaAmarilla,\n  getCampos,\n})(CerrarTarjetaAmarillaModal);\n"]},"metadata":{},"sourceType":"module"}