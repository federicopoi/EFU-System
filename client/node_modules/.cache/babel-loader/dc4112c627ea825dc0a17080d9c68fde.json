{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/indiceautonomia/GraficoAutonomia.jsx\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoAutonomia extends Component {\n  constructor() {\n    super();\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const {\n      tarjetas\n    } = this.props; // Formulas para \"Indice de autonomia\"\n    // Filtro todos los meses en el que hay tarjetas convertidas\n\n    const fechasTarjetasConvertidas = tarjetas.filter(({\n      convertida,\n      color\n    }) => convertida === true).map(({\n      fecha\n    }) => fecha.substr(0, 7)); // Borro todos los meses repetidos\n\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n    console.log(fechasTarjetasConvertidasUnicas); // Numero total de tarjetas de cada mes (no acumulado)\n\n    let array = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return tarjetas.filter(({\n        estado,\n        fecha,\n        color\n      }) => color === \"Azul\" && estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length + tarjetas.filter(({\n        estado,\n        fecha,\n        convertida\n      }) => convertida === true && estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length / tarjetas.filter(({\n        estado,\n        fecha\n      }) => estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length * 100;\n    });\n    console.log(fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return tarjetas.filter(({\n        estado,\n        fecha,\n        color\n      }) => color === \"Azul\" && estado === \"Cerrada\" && fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") === item.slice(5, 7)).length;\n    })); // Datos para el grafico\n\n    const ConvertidasData = [fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return {\n        x: new Date(parseInt(item.slice(0, 4)), parseInt(item.slice(5, 7) - 1)),\n        y: array[index]\n      };\n    })];\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\",\n      // Observe ToolTip Number Format\n      digitGroupSeparator: \".\",\n      // Observe axisY labels\n      months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\n    });\n    const options = {\n      culture: \"es\",\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n        interval: 1,\n        intervalType: \"month\"\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\"\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\"\n      },\n      data: [{\n        color: \"#1BA7F7\",\n        type: \"column\",\n        name: \"Indice de autonomia\",\n        showInLegend: true,\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: ConvertidasData[0]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      culture: \"en\",\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default GraficoAutonomia;","map":{"version":3,"sources":["/Users/fedepoi/tpm-project-mern/client/src/components/dasboard/indiceautonomia/GraficoAutonomia.jsx"],"names":["React","Component","CanvasJSReact","CanvasJSChart","CanvasJS","GraficoAutonomia","constructor","toggleDataSeries","bind","e","dataSeries","visible","chart","render","tarjetas","props","fechasTarjetasConvertidas","filter","convertida","color","map","fecha","substr","fechasTarjetasConvertidas1","Set","fechasTarjetasConvertidasUnicas","console","log","array","sort","item","index","estado","replace","slice","length","ConvertidasData","x","Date","parseInt","y","addCultureInfo","decimalSeparator","digitGroupSeparator","months","options","culture","animationEnabled","axisX","valueFormatString","interval","intervalType","axisY","suffix","lineColor","tickColor","labelFontColor","toolTip","shared","legend","cursor","itemclick","verticalAlign","data","type","name","showInLegend","xValueFormatString","dataPoints","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"../canvasjs.react\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nexport class GraficoAutonomia extends Component {\n  constructor() {\n    super();\n    this.toggleDataSeries = this.toggleDataSeries.bind(this);\n  }\n  toggleDataSeries(e) {\n    if (typeof e.dataSeries.visible === \"undefined\" || e.dataSeries.visible) {\n      e.dataSeries.visible = false;\n    } else {\n      e.dataSeries.visible = true;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const { tarjetas } = this.props;\n\n    // Formulas para \"Indice de autonomia\"\n\n    // Filtro todos los meses en el que hay tarjetas convertidas\n    const fechasTarjetasConvertidas = tarjetas\n      .filter(({ convertida, color }) => convertida === true)\n      .map(({ fecha }) => fecha.substr(0, 7));\n\n    // Borro todos los meses repetidos\n    let fechasTarjetasConvertidas1 = new Set(fechasTarjetasConvertidas);\n    const fechasTarjetasConvertidasUnicas = [...fechasTarjetasConvertidas1];\n\n    console.log(fechasTarjetasConvertidasUnicas);\n\n    // Numero total de tarjetas de cada mes (no acumulado)\n    let array = fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n      return (\n        tarjetas.filter(\n          ({ estado, fecha, color }) =>\n            color === \"Azul\" &&\n            estado === \"Cerrada\" &&\n            fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n              item.slice(5, 7)\n        ).length +\n        (tarjetas.filter(\n          ({ estado, fecha, convertida }) =>\n            convertida === true &&\n            estado === \"Cerrada\" &&\n            fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n              item.slice(5, 7)\n        ).length /\n          tarjetas.filter(\n            ({ estado, fecha }) =>\n              estado === \"Cerrada\" &&\n              fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n                item.slice(5, 7)\n          ).length) *\n          100\n      );\n    });\n\n    console.log(\n      fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n        return tarjetas.filter(\n          ({ estado, fecha, color }) =>\n            color === \"Azul\" &&\n            estado === \"Cerrada\" &&\n            fecha.substr(4, 4).replace(\"-\", \"\").replace(\"-\", \"\") ===\n              item.slice(5, 7)\n        ).length;\n      })\n    );\n\n    // Datos para el grafico\n    const ConvertidasData = [\n      fechasTarjetasConvertidasUnicas.sort().map((item, index) => {\n        return {\n          x: new Date(\n            parseInt(item.slice(0, 4)),\n            parseInt(item.slice(5, 7) - 1)\n          ),\n          y: array[index],\n        };\n      }),\n    ];\n\n    CanvasJS.addCultureInfo(\"es\", {\n      decimalSeparator: \",\", // Observe ToolTip Number Format\n      digitGroupSeparator: \".\", // Observe axisY labels\n\n      months: [\n        \"Enero\",\n        \"Febrero\",\n        \"Marzo\",\n        \"Abril\",\n        \"Mayo\",\n        \"Junio\",\n        \"Julio\",\n        \"Agosto\",\n        \"Septiembre\",\n        \"Octubre\",\n        \"Noviembre\",\n        \"Diciembre\",\n      ],\n    });\n    const options = {\n      culture: \"es\",\n      animationEnabled: true,\n      culture: \"es\",\n      axisX: {\n        valueFormatString: \"MMMM\",\n\n        interval: 1,\n        intervalType: \"month\",\n      },\n      axisY: {\n        suffix: \"%\",\n        lineColor: \"#000000\",\n        tickColor: \"#000000\",\n        labelFontColor: \"#000000\",\n      },\n\n      toolTip: {\n        shared: true,\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries,\n        verticalAlign: \"top\",\n      },\n      data: [\n        {\n          color: \"#1BA7F7\",\n          type: \"column\",\n          name: \"Indice de autonomia\",\n          showInLegend: true,\n          xValueFormatString: \"MMMM YYYY\",\n          dataPoints: ConvertidasData[0],\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <CanvasJSChart\n          culture=\"en\"\n          options={options}\n          onRef={(ref) => (this.chart = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GraficoAutonomia;\n"]},"metadata":{},"sourceType":"module"}