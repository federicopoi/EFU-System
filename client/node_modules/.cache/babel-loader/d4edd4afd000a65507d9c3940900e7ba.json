{"ast":null,"code":"var _jsxFileName = \"/Users/fedepoi/klockner_tpm/client/src/components/detalletarjeta/cerrartarjeta/CerrarKaizenModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { cerrarTarjeta } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, Label, Input, FormGroup, Alert } from \"reactstrap\";\nexport class CerrarKaizenModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        formValues\n      } = this.state;\n      formValues[target.name] = target.value;\n      this.setState({\n        formValues\n      });\n      this.handleValidation(target);\n    };\n\n    this.handleValidation = target => {\n      const {\n        name,\n        value\n      } = target;\n      const fieldValidationErrors = this.state.formErrors;\n      const validity = this.state.formValidity;\n      const isEmail = name === \"email\";\n      const isPassword = name === \"password\";\n      const isInicioReparacion = name === \"inicioReparacionDia\";\n      const isFinReparacion = name === \"finReparacionDia\";\n      const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      validity[name] = value.length > 0;\n      fieldValidationErrors[name] = validity[name] ? \"\" : \"Este campo es requerido y no puede estar vacio\";\n\n      if (validity[name]) {\n        if (isEmail) {\n          validity[name] = emailTest.test(value);\n          fieldValidationErrors[name] = validity[name] ? \"\" : `${name} should be a valid email address`;\n        }\n\n        if (isPassword) {\n          validity[name] = value.length >= 3;\n          fieldValidationErrors[name] = validity[name] ? \"\" : `${name} should be 3 characters minimum`;\n        }\n\n        if (isInicioReparacion) {\n          validity[name] = value > this.props.fecha;\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"Inicio de reparacion tiene que ser posterior a fecha creada.\";\n        }\n\n        if (isFinReparacion) {\n          validity[name] = value >= this.props.fecha;\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"Fin de reparacion tiene que ser posterior a fecha creada.\";\n        }\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        formValidity: validity\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      const {\n        formValues,\n        formValidity\n      } = this.state;\n\n      if (Object.values(formValidity).every(Boolean)) {\n        // Here is when the validate comes\n        this.setState({\n          isSubmitting: false\n        });\n        const {\n          _id,\n          inicioReparacionDia,\n          inicioReparacionHora,\n          finReparacionDia,\n          finReparacionHora,\n          responsable,\n          causa,\n          riesgoFinal,\n          tareaRealizada,\n          tipoAccion,\n          materialUtilizado,\n          convertida\n        } = this.state.formValues;\n        const horaInicio = inicioReparacionHora.split(\":\");\n        const horaFinal = finReparacionHora.split(\":\");\n        const InicioReparacionHoraFloat = parseFloat(horaInicio[0]);\n        const FinReparacionHoraFloat = parseFloat(horaFinal[0]);\n        const horaFinal1 = FinReparacionHoraFloat - InicioReparacionHoraFloat;\n        const tiemploEmpleadoString = `${horaFinal1}`; // Cerrar Tarjeta\n\n        const tarjetaActualizada = {\n          _id,\n          inicioReparacion: inicioReparacionDia + \" \" + inicioReparacionHora,\n          finReparacion: finReparacionDia + \" \" + finReparacionHora,\n          responsable,\n          tiempoEmpleado: tiemploEmpleadoString,\n          causa,\n          tareaRealizada,\n          tipoAccion,\n          riesgoFinal,\n          materialUtilizado,\n          convertida: this.state.convertida\n        };\n        this.props.cerrarTarjeta(tarjetaActualizada);\n      } else {\n        for (let key in formValues) {\n          let target = {\n            name: key,\n            value: formValues[key]\n          };\n          this.handleValidation(target);\n        }\n\n        this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    this.onChangeConvertida = e => {\n      this.setState({\n        formValues: {\n          convertida: e.tarjet.value\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      formValues: {\n        _id: this.props._id,\n        inicioReparacionDia: \"\",\n        inicioReparacionHora: \"\",\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        // tiempoEmpleado: \"\",\n        causa: \".\",\n        riesgoFinal: \"\",\n        tareaRealizada: \"\",\n        tipoAccion: \"\",\n        materialUtilizado: \"\"\n      },\n      formErrors: {\n        _id: this.props._id,\n        inicioReparacionDia: \"\",\n        inicioReparacionHora: \"\",\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        causa: \"\",\n        riesgoFinal: \"\",\n        tareaRealizada: \"\",\n        tipoAccion: \"\",\n        materialUtilizado: \"\"\n      },\n      formValidity: {\n        _id: this.props._id,\n        inicioReparacionDia: false,\n        inicioReparacionHora: false,\n        finReparacionDia: false,\n        finReparacionHora: false,\n        responsable: false,\n        causa: true,\n        riesgoFinal: false,\n        tareaRealizada: false,\n        tipoAccion: false,\n        materialUtilizado: false\n      },\n      isSubmitting: false,\n      modal: false,\n      convertida: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n\n  render() {\n    const {\n      campos\n    } = this.props.campos;\n    const {\n      formValues,\n      formErrors,\n      isSubmitting\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.toggle,\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, \"Cerrar Kaizen\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, \"Cerrar Kaizen\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, \"Planificar\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"descripcionProblema\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \"Descripci\\xF3n del Problema\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.descripcionProblema,\n      type: \"text\",\n      name: \"descripcionProblema\",\n      id: \"descripcionProblema\",\n      className: `form-control ${formErrors.descripcionProblema ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, formErrors.descripcionProblema), /*#__PURE__*/React.createElement(Label, {\n      for: \"descripcionProblema\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, \"Objectivo\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.objectivo,\n      type: \"text\",\n      name: \"objectivo\",\n      id: \"objectivo\",\n      className: `form-control ${formErrors.objectivo ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, formErrors.objectivo), /*#__PURE__*/React.createElement(Label, {\n      for: \"causas\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, \"Causas\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.causas,\n      type: \"text\",\n      name: \"causas\",\n      id: \"causas\",\n      className: `form-control ${formErrors.causas ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, formErrors.causas), /*#__PURE__*/React.createElement(Label, {\n      for: \"acciones\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, \"Acciones a tomar\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.acciones,\n      type: \"text\",\n      name: \"acciones\",\n      id: \"acciones\",\n      className: `form-control ${formErrors.acciones ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, formErrors.acciones), /*#__PURE__*/React.createElement(Label, {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, \"5W + 1H & Esquema de la mejora (implementar)\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, \"Hacer\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"acciones\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, \"Responsable de la Implementacion\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.responsableImplementacion,\n      type: \"text\",\n      name: \"responsableImplementacion\",\n      id: \"responsableImplementacion\",\n      className: `form-control ${formErrors.responsableImplementacion ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, formErrors.responsableImplementacion), /*#__PURE__*/React.createElement(Label, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }, \"Fecha de implementaci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.fechaImplementacion,\n      type: \"date\",\n      name: \"fechaImplementacion\",\n      id: \"fechaImplementacion\",\n      className: `form-control ${formErrors.fechaImplementacion ? \"is-invalid\" : \"mb-2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, formErrors.fechaImplementacion), /*#__PURE__*/React.createElement(Label, {\n      for: \"planAccion\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, \"Plan de acci\\xF3n (a implementar)\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, \"Chequear\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"objectivoCompletado\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, \"\\xBFSe logr\\xF3 el objetivo? Explicar\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.objectivoCompletado,\n      type: \"text\",\n      name: \"objectivoCompletado\",\n      id: \"objectivoCompletado\",\n      className: `form-control ${formErrors.objectivoCompletado ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, formErrors.objectivoCompletado), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, \"Estandarizar\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"documentos\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    }, \"Documentos que debemos cambiar para consolidar la mejora\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.documentos,\n      type: \"text\",\n      name: \"documentos\",\n      id: \"documentos\",\n      className: `form-control ${formErrors.documentos ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, formErrors.documentos), /*#__PURE__*/React.createElement(Label, {\n      for: \"otraMaquina\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }, \"En qu\\xE9 otra parte/m\\xE1quina podemos aplicar la mejora\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: formValues.otraMaquina,\n      type: \"text\",\n      name: \"otraMaquina\",\n      id: \"otraMaquina\",\n      className: `form-control ${formErrors.otraMaquina ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, formErrors.otraMaquina), /*#__PURE__*/React.createElement(\"hr\", {\n      class: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      block: true,\n      style: {\n        marginTop: \"2rem\"\n      },\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 17\n      }\n    }, isSubmitting ? \"Por favor espere...\" : \"Subir\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  campos: state.campos\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  cerrarTarjeta,\n  getCampos\n})(CerrarKaizenModal);","map":{"version":3,"sources":["/Users/fedepoi/klockner_tpm/client/src/components/detalletarjeta/cerrartarjeta/CerrarKaizenModal.jsx"],"names":["React","Component","connect","clearErrors","cerrarTarjeta","getCampos","Button","Modal","ModalHeader","ModalBody","Form","Label","Input","FormGroup","Alert","CerrarKaizenModal","constructor","props","handleChange","target","formValues","state","name","value","setState","handleValidation","fieldValidationErrors","formErrors","validity","formValidity","isEmail","isPassword","isInicioReparacion","isFinReparacion","emailTest","length","test","fecha","handleSubmit","event","preventDefault","isSubmitting","Object","values","every","Boolean","_id","inicioReparacionDia","inicioReparacionHora","finReparacionDia","finReparacionHora","responsable","causa","riesgoFinal","tareaRealizada","tipoAccion","materialUtilizado","convertida","horaInicio","split","horaFinal","InicioReparacionHoraFloat","parseFloat","FinReparacionHoraFloat","horaFinal1","tiemploEmpleadoString","tarjetaActualizada","inicioReparacion","finReparacion","tiempoEmpleado","key","onChangeConvertida","e","tarjet","toggle","modal","componentDidMount","render","campos","cursor","descripcionProblema","objectivo","causas","acciones","responsableImplementacion","fechaImplementacion","objectivoCompletado","documentos","otraMaquina","marginTop","mapStateToProps","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../../../store/actions/errorActions\";\nimport { cerrarTarjeta } from \"../../../store/actions/tarjetaActions\";\nimport { getCampos } from \"../../../store/actions/camposActions\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  FormGroup,\n  Alert,\n} from \"reactstrap\";\nexport class CerrarKaizenModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        _id: this.props._id,\n        inicioReparacionDia: \"\",\n        inicioReparacionHora: \"\",\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        // tiempoEmpleado: \"\",\n        causa: \".\",\n        riesgoFinal: \"\",\n        tareaRealizada: \"\",\n        tipoAccion: \"\",\n        materialUtilizado: \"\",\n      },\n      formErrors: {\n        _id: this.props._id,\n        inicioReparacionDia: \"\",\n        inicioReparacionHora: \"\",\n        finReparacionDia: \"\",\n        finReparacionHora: \"\",\n        responsable: \"\",\n        causa: \"\",\n        riesgoFinal: \"\",\n        tareaRealizada: \"\",\n        tipoAccion: \"\",\n        materialUtilizado: \"\",\n      },\n      formValidity: {\n        _id: this.props._id,\n        inicioReparacionDia: false,\n        inicioReparacionHora: false,\n        finReparacionDia: false,\n        finReparacionHora: false,\n        responsable: false,\n        causa: true,\n        riesgoFinal: false,\n        tareaRealizada: false,\n        tipoAccion: false,\n        materialUtilizado: false,\n      },\n      isSubmitting: false,\n      modal: false,\n      convertida: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { formValues } = this.state;\n    formValues[target.name] = target.value;\n    this.setState({ formValues });\n    this.handleValidation(target);\n  };\n\n  handleValidation = (target) => {\n    const { name, value } = target;\n    const fieldValidationErrors = this.state.formErrors;\n    const validity = this.state.formValidity;\n    const isEmail = name === \"email\";\n    const isPassword = name === \"password\";\n    const isInicioReparacion = name === \"inicioReparacionDia\";\n    const isFinReparacion = name === \"finReparacionDia\";\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    validity[name] = value.length > 0;\n    fieldValidationErrors[name] = validity[name]\n      ? \"\"\n      : \"Este campo es requerido y no puede estar vacio\";\n\n    if (validity[name]) {\n      if (isEmail) {\n        validity[name] = emailTest.test(value);\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be a valid email address`;\n      }\n      if (isPassword) {\n        validity[name] = value.length >= 3;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be 3 characters minimum`;\n      }\n      if (isInicioReparacion) {\n        validity[name] = value > this.props.fecha;\n\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : \"Inicio de reparacion tiene que ser posterior a fecha creada.\";\n      }\n      if (isFinReparacion) {\n        validity[name] = value >= this.props.fecha;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : \"Fin de reparacion tiene que ser posterior a fecha creada.\";\n      }\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      formValidity: validity,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ isSubmitting: true });\n    const { formValues, formValidity } = this.state;\n    if (Object.values(formValidity).every(Boolean)) {\n      // Here is when the validate comes\n      this.setState({ isSubmitting: false });\n\n      const {\n        _id,\n        inicioReparacionDia,\n        inicioReparacionHora,\n        finReparacionDia,\n        finReparacionHora,\n        responsable,\n        causa,\n        riesgoFinal,\n        tareaRealizada,\n        tipoAccion,\n        materialUtilizado,\n        convertida,\n      } = this.state.formValues;\n\n      const horaInicio = inicioReparacionHora.split(\":\");\n      const horaFinal = finReparacionHora.split(\":\");\n\n      const InicioReparacionHoraFloat = parseFloat(horaInicio[0]);\n      const FinReparacionHoraFloat = parseFloat(horaFinal[0]);\n\n      const horaFinal1 = FinReparacionHoraFloat - InicioReparacionHoraFloat;\n\n      const tiemploEmpleadoString = `${horaFinal1}`;\n\n      // Cerrar Tarjeta\n      const tarjetaActualizada = {\n        _id,\n        inicioReparacion: inicioReparacionDia + \" \" + inicioReparacionHora,\n        finReparacion: finReparacionDia + \" \" + finReparacionHora,\n        responsable,\n        tiempoEmpleado: tiemploEmpleadoString,\n        causa,\n        tareaRealizada,\n        tipoAccion,\n        riesgoFinal,\n        materialUtilizado,\n        convertida: this.state.convertida,\n      };\n\n      this.props.cerrarTarjeta(tarjetaActualizada);\n    } else {\n      for (let key in formValues) {\n        let target = {\n          name: key,\n          value: formValues[key],\n        };\n        this.handleValidation(target);\n      }\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  onChangeConvertida = (e) => {\n    this.setState({ formValues: { convertida: e.tarjet.value } });\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  componentDidMount() {\n    this.props.getCampos();\n  }\n  render() {\n    const { campos } = this.props.campos;\n    const { formValues, formErrors, isSubmitting } = this.state;\n\n    return (\n      <div>\n        <p onClick={this.toggle} style={{ cursor: \"pointer\" }} className=\"my-3\">\n          Cerrar Kaizen\n        </p>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Cerrar Kaizen</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup>\n                {/* <Label>Inicio de la Tarea</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.inicioReparacionDia}\n                  type=\"date\"\n                  name=\"inicioReparacionDia\"\n                  id=\"inicioReparacionDia\"\n                  className={`form-control ${\n                    formErrors.inicioReparacionDia ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.inicioReparacionDia}\n                </div>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.inicioReparacionHora}\n                  type=\"time\"\n                  name=\"inicioReparacionHora\"\n                  id=\"inicioReparacionHora\"\n                  className={`form-control ${\n                    formErrors.inicioReparacionHora ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.inicioReparacionHora}\n                </div>\n\n                <Label>Fin de la Tarea</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.finReparacionDia}\n                  type=\"date\"\n                  name=\"finReparacionDia\"\n                  id=\"finReparacionDia\"\n                  className={`form-control ${\n                    formErrors.finReparacionDia ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.finReparacionDia}\n                </div>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.finReparacionHora}\n                  type=\"time\"\n                  name=\"finReparacionHora\"\n                  id=\"finReparacionHora\"\n                  className={`form-control ${\n                    formErrors.finReparacionHora ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.finReparacionHora}\n                </div> */}\n\n                <h4 className=\"mt-2 text-center\">Planificar</h4>\n\n                <Label for=\"descripcionProblema\">\n                  Descripción del Problema\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.descripcionProblema}\n                  type=\"text\"\n                  name=\"descripcionProblema\"\n                  id=\"descripcionProblema\"\n                  className={`form-control ${\n                    formErrors.descripcionProblema ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.descripcionProblema}\n                </div>\n\n                <Label for=\"descripcionProblema\" className=\"mt-2\">\n                  Objectivo\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.objectivo}\n                  type=\"text\"\n                  name=\"objectivo\"\n                  id=\"objectivo\"\n                  className={`form-control ${\n                    formErrors.objectivo ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.objectivo}\n                </div>\n\n                <Label for=\"causas\" className=\"mt-2\">\n                  Causas\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.causas}\n                  type=\"text\"\n                  name=\"causas\"\n                  id=\"causas\"\n                  className={`form-control ${\n                    formErrors.causas ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">{formErrors.causas}</div>\n\n                <Label for=\"acciones\" className=\"mt-2\">\n                  Acciones a tomar\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.acciones}\n                  type=\"text\"\n                  name=\"acciones\"\n                  id=\"acciones\"\n                  className={`form-control ${\n                    formErrors.acciones ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.acciones}\n                </div>\n\n                <Label className=\"mt-2\">\n                  5W + 1H & Esquema de la mejora (implementar)\n                </Label>\n\n                <h4 className=\"mt-2 text-center\">Hacer</h4>\n\n                <Label for=\"acciones\" className=\"mt-2\">\n                  Responsable de la Implementacion\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.responsableImplementacion}\n                  type=\"text\"\n                  name=\"responsableImplementacion\"\n                  id=\"responsableImplementacion\"\n                  className={`form-control ${\n                    formErrors.responsableImplementacion ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.responsableImplementacion}\n                </div>\n\n                <Label className=\"mt-3\">Fecha de implementación</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.fechaImplementacion}\n                  type=\"date\"\n                  name=\"fechaImplementacion\"\n                  id=\"fechaImplementacion\"\n                  className={`form-control ${\n                    formErrors.fechaImplementacion ? \"is-invalid\" : \"mb-2\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.fechaImplementacion}\n                </div>\n\n                <Label for=\"planAccion\" className=\"mt-2\">\n                  Plan de acción (a implementar)\n                </Label>\n\n                <h4 className=\"mt-3 text-center\">Chequear</h4>\n\n                <Label for=\"objectivoCompletado\" className=\"mt-2\">\n                  ¿Se logró el objetivo? Explicar\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.objectivoCompletado}\n                  type=\"text\"\n                  name=\"objectivoCompletado\"\n                  id=\"objectivoCompletado\"\n                  className={`form-control ${\n                    formErrors.objectivoCompletado ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.objectivoCompletado}\n                </div>\n\n                <h4 className=\"mt-3 text-center\">Estandarizar</h4>\n\n                <Label for=\"documentos\" className=\"mt-2\">\n                  Documentos que debemos cambiar para consolidar la mejora\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.documentos}\n                  type=\"text\"\n                  name=\"documentos\"\n                  id=\"documentos\"\n                  className={`form-control ${\n                    formErrors.documentos ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.documentos}\n                </div>\n\n                <Label for=\"otraMaquina\" className=\"mt-2\">\n                  En qué otra parte/máquina podemos aplicar la mejora\n                </Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.otraMaquina}\n                  type=\"text\"\n                  name=\"otraMaquina\"\n                  id=\"otraMaquina\"\n                  className={`form-control ${\n                    formErrors.otraMaquina ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.otraMaquina}\n                </div>\n\n                <hr class=\"solid\"></hr>\n\n                {/* <Label className=\"mt-2\">Riesgo Final</Label>\n                <Input\n                  type=\"select\"\n                  name=\"riesgoFinal\"\n                  id=\"riesgoFinal\"\n                  onChange={this.handleChange}\n                  value={formValues.riesgoFinal}\n                  className={`form-control ${\n                    formErrors.riesgoFinal ? \"is-invalid\" : \"\"\n                  }`}\n                >\n                  <option>Seleccionar</option>\n                  {campos &&\n                    campos\n                      .filter(({ name, value }) => {\n                        return name === \"riesgoFinal\";\n                      })\n                      .map(({ name, value, _id }, index) => {\n                        return (\n                          <option key={index} _id={_id}>\n                            {value}\n                          </option>\n                        );\n                      })}\n                </Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.riesgoFinal}\n                </div>\n\n                {this.props.color !== \"Verde\" && (\n                  <div>\n                    <Label className=\"mt-2\">Causa de la Anomalia</Label>\n                    <Input\n                      onChange={this.handleChange}\n                      value={formValues.causa}\n                      type=\"text\"\n                      name=\"causa\"\n                      id=\"causa\"\n                      className={`form-control ${\n                        formErrors.causa ? \"is-invalid\" : \"\"\n                      }`}\n                    ></Input>\n                    <div className=\"invalid-feedback mb-2\">\n                      {formErrors.causa}\n                    </div>\n                  </div>\n                )}\n\n                <Label className=\"mt-2\">Tarea Realizada</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.tareaRealizada}\n                  type=\"text\"\n                  name=\"tareaRealizada\"\n                  id=\"tareaRealizada\"\n                  className={`form-control ${\n                    formErrors.tareaRealizada ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.tareaRealizada}\n                </div>\n\n                <Label className=\"mt-2\">Tipo de acción a realizar *</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tipoAccion\"\n                  id=\"tipoAccion\"\n                  className={`form-control ${\n                    formErrors.tipoAccion ? \"is-invalid\" : \"\"\n                  }`}\n                  onChange={this.handleChange}\n                  value={formValues.tipoAccion}\n                >\n                  <option>Seleccionar</option>\n                  <option>Eliminar</option>\n                  <option>Contener</option>\n                  <option>Reemplazar</option>\n                  <option>Simplificar</option>\n                </Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.tipoAccion}\n                </div>\n\n                <Label className=\"mt-2\">Material Utilizado</Label>\n                <Input\n                  onChange={this.handleChange}\n                  value={formValues.materialUtilizado}\n                  type=\"text\"\n                  name=\"materialUtilizado\"\n                  id=\"materialUtilizado\"\n                  className={`form-control ${\n                    formErrors.materialUtilizado ? \"is-invalid\" : \"\"\n                  }`}\n                ></Input>\n                <div className=\"invalid-feedback mb-2\">\n                  {formErrors.materialUtilizado}\n                </div>\n\n                {this.props.color !== \"Azul\" && (\n                  <FormGroup check className=\"mt-2\">\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        id=\"convertida\"\n                        name=\"convertida\"\n                        onChange={() => {\n                          this.setState({\n                            convertida: !this.state.convertida,\n                          });\n                        }}\n                      />\n                      Tarjeta Convertida\n                    </Label>\n                  </FormGroup>\n                )} */}\n                {/* {this.state.msg ? (\n                  <Alert color=\"danger\" className=\"mt-3\">\n                    {this.state.msg}\n                  </Alert>\n                ) : null} */}\n                <Button\n                  color=\"dark\"\n                  block\n                  style={{ marginTop: \"2rem\" }}\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? \"Por favor espere...\" : \"Subir\"}\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  error: state.error,\n  campos: state.campos,\n});\nexport default connect(mapStateToProps, {\n  clearErrors,\n  cerrarTarjeta,\n  getCampos,\n})(CerrarKaizenModal);\n"]},"metadata":{},"sourceType":"module"}